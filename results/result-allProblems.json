{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'IDE's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/user/report-errors.adoc",
      "language": "AsciiDoc",
      "line": 6,
      "offset": 14,
      "length": 5,
      "code": {
        "startLine": 4,
        "length": 5,
        "offset": 28,
        "surroundingCode": "{description}\n\n== Reporting IDE's fatal errors\n\nThe IntelliJ AsciiDoc plugin implements an IntelliJ error handler."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "c5990d57d8e379d4b8a4e35dfe1ad3e2d28c572ad14569a3c95b883b8c65ec5c"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'passthrough'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 44,
      "offset": 10,
      "length": 11,
      "code": {
        "startLine": 42,
        "length": 11,
        "offset": 119,
        "surroundingCode": "| Toggle double quotes for the selected text | kbd:[\"]\n| Toggle single quotes for the selected text | kbd:[']\n| Toggle passthrough for the selected text | kbd:[+]\n| Toggle passthrough for the selected text | kbd:[$]\n| Show intention actions and quick-fixes | kbd:[Alt+Enter]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "baselineState": "new"
  },
  "hash": "adb01854d0e45bb439654f5ae59ce83e9eb83e991e89eb6b7cc6a08a709b7ea2"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'passthrough'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 45,
      "offset": 10,
      "length": 11,
      "code": {
        "startLine": 43,
        "length": 11,
        "offset": 117,
        "surroundingCode": "| Toggle single quotes for the selected text | kbd:[']\n| Toggle passthrough for the selected text | kbd:[+]\n| Toggle passthrough for the selected text | kbd:[$]\n| Show intention actions and quick-fixes | kbd:[Alt+Enter]\n| Reformat code | kbd:[Ctrl+Alt+L]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "baselineState": "new"
  },
  "hash": "21ae8282bb7e627ba3b9411e0612b66985076eee9aa2b619702805e4a932280b"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'unindent'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 49,
      "offset": 10,
      "length": 8,
      "code": {
        "startLine": 47,
        "length": 8,
        "offset": 85,
        "surroundingCode": "| Reformat code | kbd:[Ctrl+Alt+L]\n| Auto-indent line(s) | kbd:[Ctrl+Alt+I]\n| Indent/unindent selected lines | kbd:[Tab] / kbd:[Shift+Tab]\n| Cut current line to clipboard  | kbd:[Ctrl+X],kbd:[Shift+Delete]\n| Copy current line to clipboard | kbd:[Ctrl+C],kbd:[Ctrl+Insert]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "932ccbe2d43db2e74a07f6e56c01bb4a24a2375b995900d6545b769a18c0c79a"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'passthrough'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 144,
      "offset": 10,
      "length": 11,
      "code": {
        "startLine": 142,
        "length": 11,
        "offset": 119,
        "surroundingCode": "| Toggle double quotes for the selected text | kbd:[\"]\n| Toggle single quotes for the selected text | kbd:[']\n| Toggle passthrough for the selected text | kbd:[+]\n| Toggle passthrough for the selected text | kbd:[$]\n| Show intention actions and quick-fixes | kbd:[⌥+Enter]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "baselineState": "new"
  },
  "hash": "6005d59a4005937c460200aa632f82fa0af84e10837f850012c00bc6d373293b"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'passthrough'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 145,
      "offset": 10,
      "length": 11,
      "code": {
        "startLine": 143,
        "length": 11,
        "offset": 117,
        "surroundingCode": "| Toggle single quotes for the selected text | kbd:[']\n| Toggle passthrough for the selected text | kbd:[+]\n| Toggle passthrough for the selected text | kbd:[$]\n| Show intention actions and quick-fixes | kbd:[⌥+Enter]\n| Reformat code | kbd:[⌘+⌥+L]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "baselineState": "new"
  },
  "hash": "64bc62190bcc4ddf5caa4813d493b34c9eca7d52e68162cfa39319c3b5f0680b"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'unindent'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 149,
      "offset": 10,
      "length": 8,
      "code": {
        "startLine": 147,
        "length": 8,
        "offset": 75,
        "surroundingCode": "| Reformat code | kbd:[⌘+⌥+L]\n| Auto-indent line(s) | kbd:[⌃+⌥+I]\n| Indent/unindent selected lines | kbd:[Right] / kbd:[⇧+Right]\n| Cut current line to clipboard  | kbd:[⌘+X]\n| Copy current line to clipboard | kbd:[⌘+C]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "450e09b12de982e703078901a259e6a29172d8fc1fcf8379876f591596cc342d"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'IDE's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 73,
      "offset": 41,
      "length": 5,
      "code": {
        "startLine": 71,
        "length": 5,
        "offset": 108,
        "surroundingCode": "Installing from JetBrains marketplace with an Internet Connection:\n\n. Via the xref:marketplace-via-settings[IDE's settings from JetBrains marketplace].\n\nIf your IDE doesn't have internet access configured:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "8136f65824441b13fd171a44530715e746f3c46456e8ba3841843ba27e839240"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'IDE's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 91,
      "offset": 52,
      "length": 5,
      "code": {
        "startLine": 89,
        "length": 5,
        "offset": 80,
        "surroundingCode": "\n[#marketplace-via-settings]\n=== Installation via JetBrains Marketplace via the IDE's settings\n\nPrerequisite::"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "510b0e3e745663ff560e97c11f0dae4ea0ab259488aeb060521d8b930d59a911"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'IDE's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 98,
      "offset": 12,
      "length": 5,
      "code": {
        "startLine": 96,
        "length": 5,
        "offset": 21,
        "surroundingCode": "Steps::\n+\n. Open the IDE's setting via menu:File[Settings...]. +\nThis opens the following menu:\n+"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "c6a3f7912c897b112208ab0a979c4cfc853ffd31e512a00150f8927f7b63c886"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'IDE's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 126,
      "offset": 45,
      "length": 5,
      "code": {
        "startLine": 124,
        "length": 5,
        "offset": 174,
        "surroundingCode": "image::web-page-marketplace.png[JetBrains Marketplace showing AsciiDoc plugin]\n. Choose the version tab if it isn't pre-selected.\n. Download the version compatible with your IDE's version (usually the latest version if your IDE is up-to-date).\n. Open the IDE's setting via menu:File[Settings...]. +\nThis opens the following menu:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "694be7023d25d4171bcfe923fc8b2928ed8a7e5eca484433b170026345fdb147"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'IDE's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 127,
      "offset": 12,
      "length": 5,
      "code": {
        "startLine": 125,
        "length": 5,
        "offset": 176,
        "surroundingCode": ". Choose the version tab if it isn't pre-selected.\n. Download the version compatible with your IDE's version (usually the latest version if your IDE is up-to-date).\n. Open the IDE's setting via menu:File[Settings...]. +\nThis opens the following menu:\n+"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "66e76653b0157e9c7dac7a661b384dc197f621f9331f46b1c9fcf7c588eb3c65"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'foldable'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/editor.adoc",
      "language": "AsciiDoc",
      "line": 14,
      "offset": 135,
      "length": 8,
      "code": {
        "startLine": 12,
        "length": 8,
        "offset": 157,
        "surroundingCode": "\n[#folding-attributes]\nAs an experimental feature, predefined attributes for character replacements like `+++{plus}+++` or `+++{quot}+++` and attributes are foldable as well.\nAttributes need to resolve to a single declared value to be folded.\nFolding is also available for HTML entities (like `\\&amp;`) and unicode characters (like `\\&#x2020;`)."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "5c585512ea7959f9d68a41de4a67bfb9ab276759dbf957d2ab4f45dad7c6df51"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'IDE's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/editor.adoc",
      "language": "AsciiDoc",
      "line": 104,
      "offset": 75,
      "length": 5,
      "code": {
        "startLine": 102,
        "length": 5,
        "offset": 334,
        "surroundingCode": "Starting with IntelliJ 2020.1, the bundled https://plugins.jetbrains.com/plugin/12175-grazie/[Grazie plugin] highlights possible grammar and spelling mistakes in the editor.\nAs of plugin version 0.36.2, every heading and paragraph of the text will be checked.\nIt supports multiple languages: Once the user configured the languages in IDE's proofreading settings, the plugin detects the language of a section automatically.\nAs it performs all checks locally with the help of libraries from https://languagetool.org/, it doesn't submit text written in the IDE to a third party cloud service.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "682eccd5f215a62341654f61cdf2966addf5baeabe080d0c15965379aad6792f"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'IDE's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/editor.adoc",
      "language": "AsciiDoc",
      "line": 173,
      "offset": 159,
      "length": 5,
      "code": {
        "startLine": 171,
        "length": 5,
        "offset": 259,
        "surroundingCode": "Inline Commands::\nAll inline commands need to be in backticks and need to show as a monospaced text.\nThe plugin will show the run icon only when it identifies it as a command that is available via the https://www.jetbrains.com/help/idea/running-anything.html[IDE's Run Anything] functionality.\n\n[#interaction-new-terminal]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "baselineState": "new"
  },
  "hash": "73fcc7a52e8b5cfd711d1374182140d9c0a31f970a7b2f838614a42309758c94"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'IDE's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq.adoc",
      "language": "AsciiDoc",
      "line": 36,
      "offset": 49,
      "length": 5,
      "code": {
        "startLine": 34,
        "length": 5,
        "offset": 118,
        "surroundingCode": "=== Pasting from clipboard removes leading spaces (aka indent). Why?\n\nThis is an automatic reformatting option in the IDE's settings.\nStripping leading spaces should not change your rendered output.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "642086aafe85c8dade2390c701d66257573e429236ca18c135539e017c9ab92e"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'IDE's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq.adoc",
      "language": "AsciiDoc",
      "line": 68,
      "offset": 38,
      "length": 5,
      "code": {
        "startLine": 66,
        "length": 5,
        "offset": 110,
        "surroundingCode": "=== The preview doesn't show some remote images! Is this a proxy issue?\n\nThe JCEF preview doesn't support the IDE's proxy settings prior to IntelliJ 2021.1.\nConfiguring a proxy for JCEF requires an IDE restart.\nSee xref:faq/jcef-no-proxy-support.adoc[] for more information."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "56415da66720fff580caaed3d316d95671aff3cdd6d21b95dc786775def67c07"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'Errno'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq.adoc",
      "language": "AsciiDoc",
      "line": 72,
      "offset": 62,
      "length": 5,
      "code": {
        "startLine": 70,
        "length": 5,
        "offset": 126,
        "surroundingCode": "See xref:faq/jcef-no-proxy-support.adoc[] for more information.\n\n=== The preview doesn't show and in the notification I see \"`Errno::ENOENT message`\".\n\nThis might be due to non-US-ASCII characters in folder names."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "a38e1b9198d8dbd787e04ffc8b980e219a4030744798d2831e71e1412ef7253b"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'ENOENT'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq.adoc",
      "language": "AsciiDoc",
      "line": 72,
      "offset": 69,
      "length": 6,
      "code": {
        "startLine": 70,
        "length": 6,
        "offset": 133,
        "surroundingCode": "See xref:faq/jcef-no-proxy-support.adoc[] for more information.\n\n=== The preview doesn't show and in the notification I see \"`Errno::ENOENT message`\".\n\nThis might be due to non-US-ASCII characters in folder names."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "4ecc34702c629a14825e63222c96def023db3db1c20112d023ace427567f7df7"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'kref'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/diagrams.adoc",
      "language": "AsciiDoc",
      "line": 129,
      "offset": 31,
      "length": 4,
      "code": {
        "startLine": 127,
        "length": 4,
        "offset": 99,
        "surroundingCode": "\n// TODO: Try out https://gitlab.com/djencks/asciidoctor-antora-kref\n// it might be able to use a \"kref\" inside Kroki diagrams\n\n[NOTE]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "a29461ae10f32bedd35a3989aaea9a15116bd194e6736caa40f467fcade98fd8"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'Errno'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/errno-enoent.adoc",
      "language": "AsciiDoc",
      "line": 1,
      "offset": 17,
      "length": 5,
      "code": {
        "startLine": 1,
        "length": 5,
        "offset": 16,
        "surroundingCode": "= Error Message Errno ENOENT and no preview\n:navtitle: Error Message ENOENT\n:description: Problems with folder names with non-US-ASCII characters. See below for the remedy."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "a536771bda63c51d518b1b3321b69db2880543624c68d90101f9028acce3181b"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'ENOENT'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/errno-enoent.adoc",
      "language": "AsciiDoc",
      "line": 1,
      "offset": 23,
      "length": 6,
      "code": {
        "startLine": 1,
        "length": 6,
        "offset": 22,
        "surroundingCode": "= Error Message Errno ENOENT and no preview\n:navtitle: Error Message ENOENT\n:description: Problems with folder names with non-US-ASCII characters. See below for the remedy."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "c9e466b53b691a051a23b05a004dc20f4c544b0ae4a8599f875c08335dd3eb1c"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'ENOENT'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/errno-enoent.adoc",
      "language": "AsciiDoc",
      "line": 2,
      "offset": 26,
      "length": 6,
      "code": {
        "startLine": 1,
        "length": 6,
        "offset": 69,
        "surroundingCode": "= Error Message Errno ENOENT and no preview\n:navtitle: Error Message ENOENT\n:description: Problems with folder names with non-US-ASCII characters. See below for the remedy.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "439b167f809037ef71d488f2b6462f2866133dde8b950d9a83796e0be3394396"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'Errno'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/errno-enoent.adoc",
      "language": "AsciiDoc",
      "line": 7,
      "offset": 13,
      "length": 5,
      "code": {
        "startLine": 5,
        "length": 5,
        "offset": 27,
        "surroundingCode": "{description}\n\n== Symptom: Errno::ENOENT message\n\nWhen rendering a preview, an error message like the following appears in the console:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "d680e22d7d5a40e26c801f0bdef25fe77773967fc28b522abf2cb85897207e42"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'ENOENT'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/errno-enoent.adoc",
      "language": "AsciiDoc",
      "line": 7,
      "offset": 20,
      "length": 6,
      "code": {
        "startLine": 5,
        "length": 6,
        "offset": 34,
        "surroundingCode": "{description}\n\n== Symptom: Errno::ENOENT message\n\nWhen rendering a preview, an error message like the following appears in the console:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "0efd55f679f50f9b7d5fd4af88ef28e8eb23c78acdd97ee0551a36b311a7d074"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'IDE's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/errno-enoent.adoc",
      "language": "AsciiDoc",
      "line": 48,
      "offset": 47,
      "length": 5,
      "code": {
        "startLine": 46,
        "length": 5,
        "offset": 90,
        "surroundingCode": "=== Add the file encoding VM option to IDE\n\nPut the following as a new line at the end of IDE's VM options file:\n\n----"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "3afdad3c0b70d75d013f030cdd0e0729d5e4b9a34bef421a3542dcd5c268fcb2"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'hoster'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/privacy.adoc",
      "language": "AsciiDoc",
      "line": 42,
      "offset": 72,
      "length": 6,
      "code": {
        "startLine": 40,
        "length": 6,
        "offset": 143,
        "surroundingCode": "These can violate the user's privacy and can compromise their machine.\n\n* When the user accesses the plugin's user's guide on the web, the web hoster will receive the user's router's IP address and browser details and will store it for up to 30 days.\n\n* If an exception occurs in the user's IDE and IntelliJ attributes the exception to the AsciiDoc plugin, the user can choose to send information about the exception to the plugin's Sentry service."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "94c91b7d91a557ed88337a9816a15edbbe03d7123ee605aedd1cd2ca22444fdd"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'anonymized'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/privacy.adoc",
      "language": "AsciiDoc",
      "line": 45,
      "offset": 5,
      "length": 10,
      "code": {
        "startLine": 43,
        "length": 10,
        "offset": 202,
        "surroundingCode": "\n* If an exception occurs in the user's IDE and IntelliJ attributes the exception to the AsciiDoc plugin, the user can choose to send information about the exception to the plugin's Sentry service.\nAll anonymized attachments will be sent unless the user unchecks the checkbox.\nThe user can (and should) review the information before submitting it.\nIt may contain personal information if it is part of the exception's message, or if the user chooses to enter personal information in the error description."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "baselineState": "new"
  },
  "hash": "3179e7760cbc77210581e83f475c43592791fefbf481b00c9f21957fe117739d"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'highlightjs'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/source-highlighting.adoc",
      "language": "AsciiDoc",
      "line": 66,
      "offset": 27,
      "length": 11,
      "code": {
        "startLine": 64,
        "length": 11,
        "offset": 83,
        "surroundingCode": "highlight.js::\nA syntax highlighter based on JavaScript.\nThe plugin supports also _highlightjs_ as an alias for the name of the source highlighter.\nSee https://highlightjs.org/[highlight.js source highlighter] for more information.\n+"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "d0078e05a8764404d2046f41b26ee2bd823b3426a08f31861a882aa52796fa23"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'hljs'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/source-highlighting.adoc",
      "language": "AsciiDoc",
      "line": 91,
      "offset": 57,
      "length": 4,
      "code": {
        "startLine": 89,
        "length": 4,
        "offset": 196,
        "surroundingCode": "-----\n<.> If the user specifies the attribute _highlightjsdir_, they *must* place the JavaScript bundle and a theme in the current project.\nFor this example, the JavaScript bundle must be named _/hljs/highlight.min.js_.\nSee the next item for the theme.\n<.> If the user specifies a _highlightjsdir_, they can override the highlighting theme using _highlightjs-theme_."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "f2bb338a6770dbaf6419e9e096559cb0fbabaf878667d6e4d05af10ea2c70bd0"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'highlightjs'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/source-highlighting.adoc",
      "language": "AsciiDoc",
      "line": 93,
      "offset": 95,
      "length": 11,
      "code": {
        "startLine": 91,
        "length": 11,
        "offset": 207,
        "surroundingCode": "For this example, the JavaScript bundle must be named _/hljs/highlight.min.js_.\nSee the next item for the theme.\n<.> If the user specifies a _highlightjsdir_, they can override the highlighting theme using _highlightjs-theme_.\nA CSS file matching the selected theme must be placed in the current project.\nIf a user does not specify _highlightjs-theme_, the default is _github_ and the user must place the CSS file for the _github_ theme in the _styles_ folder."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "56749034753358bafc5802d2baadd1c2fc086f1a31dc8c8fdd4ea96e30f45c8e"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'hljs'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/source-highlighting.adoc",
      "language": "AsciiDoc",
      "line": 96,
      "offset": 38,
      "length": 4,
      "code": {
        "startLine": 94,
        "length": 4,
        "offset": 271,
        "surroundingCode": "A CSS file matching the selected theme must be placed in the current project.\nIf a user does not specify _highlightjs-theme_, the default is _github_ and the user must place the CSS file for the _github_ theme in the _styles_ folder.\nFor this example, it must be named _/hljs/styles/default.min.css_.\n<.> If the user specifies a _highlightjsdir_, the user can specify additional languages for highlighting using _highlightjs-languages_.\nThis requires a file for each language defined here."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "ffa800700234b0b64c1cfe95b7c12f83e66aa8d00efcc787d37c6ab8996eb3d9"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'highlightjs'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/source-highlighting.adoc",
      "language": "AsciiDoc",
      "line": 97,
      "offset": 113,
      "length": 11,
      "code": {
        "startLine": 95,
        "length": 11,
        "offset": 335,
        "surroundingCode": "If a user does not specify _highlightjs-theme_, the default is _github_ and the user must place the CSS file for the _github_ theme in the _styles_ folder.\nFor this example, it must be named _/hljs/styles/default.min.css_.\n<.> If the user specifies a _highlightjsdir_, the user can specify additional languages for highlighting using _highlightjs-languages_.\nThis requires a file for each language defined here.\nFor this example, the user must place _/hljs/languages/basic.min.js_ in the current project."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "abec9bdc94d1eba0485d29b37f85c8cab586717aaf6cc564d0ac813e49870de1"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'hljs'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/source-highlighting.adoc",
      "language": "AsciiDoc",
      "line": 99,
      "offset": 41,
      "length": 4,
      "code": {
        "startLine": 97,
        "length": 4,
        "offset": 229,
        "surroundingCode": "<.> If the user specifies a _highlightjsdir_, the user can specify additional languages for highlighting using _highlightjs-languages_.\nThis requires a file for each language defined here.\nFor this example, the user must place _/hljs/languages/basic.min.js_ in the current project.\n\nUsers can change the default code highlighter:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "6b0a6e6d559dc250df84a78774b51a3d50430ed6bdf6598fe9fe4a83de46d170"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'suppressmoduleinspection'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/examples/antora.adoc",
      "language": "AsciiDoc",
      "line": 32,
      "offset": 9,
      "length": 24,
      "code": {
        "startLine": 30,
        "length": 24,
        "offset": 10,
        "surroundingCode": "\n\n// tag::suppressmoduleinspection[]\n// suppress inspection \"AsciiDocUnresolvedAntoraModule\"\nxref:othercomponent:othermodule:index.adoc[]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "baselineState": "new"
  },
  "hash": "3e2e11fc5fbbbf4254cb91381373e28b130e2316d4a20cd0d5eee371993ed2d8"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'suppressmoduleinspection'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/examples/antora.adoc",
      "language": "AsciiDoc",
      "line": 35,
      "offset": 9,
      "length": 24,
      "code": {
        "startLine": 33,
        "length": 24,
        "offset": 109,
        "surroundingCode": "// suppress inspection \"AsciiDocUnresolvedAntoraModule\"\nxref:othercomponent:othermodule:index.adoc[]\n// end::suppressmoduleinspection[]\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "baselineState": "new"
  },
  "hash": "1c916f9a41cc6d4ff0a234b66a5da11bdd40876da2709b3a746141fb88510e64"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'IDE's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/partials/download-dependencies.adoc",
      "language": "AsciiDoc",
      "line": 3,
      "offset": 5,
      "length": 5,
      "code": {
        "startLine": 1,
        "length": 5,
        "offset": 148,
        "surroundingCode": "The download requires a working internet connection.\nWhen the download fails, the IDE prompts to check proxy settings or to retry the download.\nThe IDE's event log contains instructions for a manual download of the file.\n\nThe dependencies will be cached locally."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "a3ef2cc42f9a722c841f62f69fc0229d780fb38c83af3f9e5ccc7e6b192bf3e9"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'ahus'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/pdf-non-latin-languages.adoc",
      "language": "AsciiDoc",
      "line": 15,
      "offset": 108,
      "length": 4,
      "code": {
        "startLine": 13,
        "length": 4,
        "offset": 202,
        "surroundingCode": "\nFollow these steps to prepare an AsciiDoc file to be rendered as PDF with Chinese characters.\nA complete example is available in https://github.com/ahus1/asciidoctor-deepdive/tree/master/manual-zh_CN[@ahus1's AsciiDoc deep dive collection].\n\n. Add a header to the document to specify folders and configurations:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "1952abd17d8f6128d1dafc07bc607708728496deb745535256044814f2dcc6ac"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'minjiex's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/pdf-non-latin-languages.adoc",
      "language": "AsciiDoc",
      "line": 73,
      "offset": 122,
      "length": 9,
      "code": {
        "startLine": 71,
        "length": 9,
        "offset": 172,
        "surroundingCode": "== Setup for Japanese, Korean and Taiwanese fonts\n\nFollow the instructions above, and use the fonts available in https://github.com/minjiex/kaigen-gothic/tree/master/dist[@minjiex's kaigen-gothic^] repository or other TTF fonts.\n\n== Advanced Features"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "7d1800680011ed68eddc3103e2c37622cbeeb9517e6f6d2869df7e58a0d3e988"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'kaigen'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/pdf-non-latin-languages.adoc",
      "language": "AsciiDoc",
      "line": 73,
      "offset": 132,
      "length": 6,
      "code": {
        "startLine": 71,
        "length": 6,
        "offset": 182,
        "surroundingCode": "== Setup for Japanese, Korean and Taiwanese fonts\n\nFollow the instructions above, and use the fonts available in https://github.com/minjiex/kaigen-gothic/tree/master/dist[@minjiex's kaigen-gothic^] repository or other TTF fonts.\n\n== Advanced Features"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "faf1e8dc90c473d30d51926799799f9617b1f60672ad5d5e211a1b9fff8e2b33"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'subfolders'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/pdf-non-latin-languages.adoc",
      "language": "AsciiDoc",
      "line": 80,
      "offset": 81,
      "length": 10,
      "code": {
        "startLine": 78,
        "length": 10,
        "offset": 162,
        "surroundingCode": "\nA solution to this is an _.asciidoctorconfig_ file that contains the attributes.\nThe AsciiDoc plugin will apply the attributes in this file to each file and its subfolders.\nA typical file would look like this:\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "e57fd61571cce32c94432079cc0dc4442724c4442588a4ae6c92830c285e5186"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'PDF's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/pdf-non-latin-languages.adoc",
      "language": "AsciiDoc",
      "line": 95,
      "offset": 179,
      "length": 5,
      "code": {
        "startLine": 93,
        "length": 5,
        "offset": 198,
        "surroundingCode": "== Further reading\n\nYou find more documentation reading the chapter https://github.com/asciidoctor/asciidoctor-pdf#support-for-non-latin-languages[\"`Support for Non-Latin Languages`\" in Asciidoctor PDF's documentation].\n\n== Public examples"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "b34a652f471b585f11e185a06c6cfd01bfbf8a1a85d68f907a807ff4d987be98"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'diguage's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/pdf-non-latin-languages.adoc",
      "language": "AsciiDoc",
      "line": 99,
      "offset": 58,
      "length": 9,
      "code": {
        "startLine": 97,
        "length": 9,
        "offset": 77,
        "surroundingCode": "== Public examples\n\nThere is https://github.com/diguage/jdk-source-analysis[@diguage's \"`JDK source code analysis`\" document] available.\nIt contains AsciiDoc in Chinese plus a working setup for an _.asciidoctorconfig_ file.\nAs fonts, the author has chosen Source Han Serif and converted them to TTF."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "5e2d606716ad8afa68a2fc36f3d99bd6d80c701623c244bc26c0deeddd082144"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'themesdir'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/pdf-non-latin-languages.adoc",
      "language": "TEXT",
      "line": 22,
      "offset": 6,
      "length": 9,
      "code": {
        "startLine": 20,
        "length": 9,
        "offset": 15,
        "surroundingCode": "----\n= 标题\n:pdf-themesdir: themes <1>\n:pdf-theme: zh_CN <2>\n:pdf-fontsdir: fonts <3>"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "d9ee58a85f1d42f57f00d81b4603c059e6372d2bf7cbf18ab5aa9e41ae90514b"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'fontsdir'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/pdf-non-latin-languages.adoc",
      "language": "TEXT",
      "line": 24,
      "offset": 6,
      "length": 8,
      "code": {
        "startLine": 22,
        "length": 8,
        "offset": 54,
        "surroundingCode": ":pdf-themesdir: themes <1>\n:pdf-theme: zh_CN <2>\n:pdf-fontsdir: fonts <3>\n\nThis is a show case for Chinese letters in AsciiDocs."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "553ed7bcf428537b11afb5fd9c59bca310989b000e9d81467388bec156929be2"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'idprefix'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/antora.yml",
      "language": "TEXT",
      "line": 10,
      "offset": 5,
      "length": 8,
      "code": {
        "startLine": 8,
        "length": 8,
        "offset": 49,
        "surroundingCode": "    page-pagination: ''\n    experimental: ''\n    idprefix: ''\n    idseparator: '-'\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "bd68978fd57b8293918fd317fa2663e5964f7650e055cce4b525a44351d9dabd"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'idseparator'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/antora.yml",
      "language": "TEXT",
      "line": 11,
      "offset": 5,
      "length": 11,
      "code": {
        "startLine": 9,
        "length": 11,
        "offset": 42,
        "surroundingCode": "    experimental: ''\n    idprefix: ''\n    idseparator: '-'\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "0beea4e5329f0cd1e21cc484061a802a88e9bdba04d9cc706c6624270c23c4b4"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'Docinfo'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/stylesheets.adoc",
      "language": "AsciiDoc",
      "line": 97,
      "offset": 70,
      "length": 7,
      "code": {
        "startLine": 95,
        "length": 7,
        "offset": 154,
        "surroundingCode": "\nThis adds additional styles and HTML headers in addition to the default stylesheet.\nThe chapter https://asciidoctor.org/docs/user-manual/#docinfo-file[\"`Docinfo Files`\" in the Asciidoctor User Manual^] provides more information about this capability.\n\n[NOTE]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "c8d7419a7bf244af9adcc29999b4b363e8d32b65fc18c2e2aba86640699468d8"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'Docinfo'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/stylesheets.adoc",
      "language": "AsciiDoc",
      "line": 106,
      "offset": 30,
      "length": 7,
      "code": {
        "startLine": 104,
        "length": 7,
        "offset": 35,
        "surroundingCode": "====\n\nFollow these steps to enable Docinfo Files:\n\n. Create a file _.asciidoctorconfig_ with the following contents:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "7ba9add3c2770ad59c669e11ff0a82d3bf4335b5706b0bf0e914fcf0aebf15a5"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'IDE's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/multimodule.adoc",
      "language": "AsciiDoc",
      "line": 27,
      "offset": 33,
      "length": 5,
      "code": {
        "startLine": 25,
        "length": 5,
        "offset": 72,
        "surroundingCode": "== Tradeoffs of a multi-module project\n\nOnce the setup is complete, the IDE's view for Git will show a combined history for all Git repositories added in the following steps.\nDepending on the user's needs, this might be helpful in the long term and confusing at the beginning.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "fb5bbf39e745155b702708efbde729cee1f19921d85e4ac28e85f1336330e660"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'IDE's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/multimodule.adoc",
      "language": "AsciiDoc",
      "line": 37,
      "offset": 154,
      "length": 5,
      "code": {
        "startLine": 35,
        "length": 5,
        "offset": 163,
        "surroundingCode": "== Setup\n\nUsers find an extensive description of how to do this in the https://www.jetbrains.com/help/idea/creating-and-managing-modules.html#multimodule-projects[IDE's docs].\nThe following paragraph gives a quick start.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "ea42ab9eaa26cdf35a10fb1c2001d686c737b394126e02ba8bbcb78e4ab8add9"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'IDE's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/asciidoclet.adoc",
      "language": "AsciiDoc",
      "line": 26,
      "offset": 12,
      "length": 5,
      "code": {
        "startLine": 24,
        "length": 5,
        "offset": 21,
        "surroundingCode": "Steps::\n+\n. Open the IDE's setting via menu:File[Settings...] +\n. Select _Plugins_ from the settings tree\n. Select _Marketplace_ tab if it is not selected yet"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "e3310371c2dd14ab3d9507358ed2537e39c7c3e81c4932a00666a59a044fbf70"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'IDE's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/asciidoclet.adoc",
      "language": "AsciiDoc",
      "line": 88,
      "offset": 29,
      "length": 5,
      "code": {
        "startLine": 86,
        "length": 5,
        "offset": 102,
        "surroundingCode": "A minimal recommended setting is to disable adding `<p>` to empty lines.\n\nTo disable this, use either IDE's settings, or use an EditorConfig file.\nThe instructions below describe both approaches.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "19f1fbcf1a8acb8a777c7ee2950f2e503a0dab31b7e901cc441cd3a68c8f8ecf"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'IDE's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/asciidoctorconfig-file.adoc",
      "language": "AsciiDoc",
      "line": 11,
      "offset": 138,
      "length": 5,
      "code": {
        "startLine": 9,
        "length": 5,
        "offset": 298,
        "surroundingCode": "There are usually specific settings for each project that apply to all AsciiDoc sources: these might be the image directory or activating experimental options.\n\nWhile documents have all the settings in your root document, files that it includes will not have these settings when they render in the IDE's preview.\n\n== Solution"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "5d118e3d284f00c142a66d9cdcd5630ec856d257215adb4501a8d93b49f964d2"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'gitconfig'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/asciidoctorconfig-file.adoc",
      "language": "AsciiDoc",
      "line": 29,
      "offset": 99,
      "length": 9,
      "code": {
        "startLine": 27,
        "length": 9,
        "offset": 104,
        "surroundingCode": "----\n\nThe handling will be a mixture of behaviors like https://editorconfig.org/[_.editorconfig_] and _.gitconfig._\n\n[NOTE]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "2bec2e205bcc6456daa68333e383992a29ba22577c11862968cb0b75e65d00f6"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'ifndef'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/asciidoctorconfig-file.adoc",
      "language": "AsciiDoc",
      "line": 33,
      "offset": 2,
      "length": 6,
      "code": {
        "startLine": 31,
        "length": 6,
        "offset": 13,
        "surroundingCode": "[NOTE]\n====\n_ifndef_/_ifdef_ macros will not work in a file called _.asciidoctorconfig_ as they work only in files that have the extension _.adoc_.\nTo work around this, rename the file to _.asciidoctorconfig.adoc_.\nThis will work the same way as _.asciidoctorconfig_."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "bca325c437beacc161bb9a3596da663d55a8deec22b52270da794a7fcca927d4"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word '/_ifd'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/asciidoctorconfig-file.adoc",
      "language": "AsciiDoc",
      "line": 33,
      "offset": 9,
      "length": 5,
      "code": {
        "startLine": 31,
        "length": 5,
        "offset": 20,
        "surroundingCode": "[NOTE]\n====\n_ifndef_/_ifdef_ macros will not work in a file called _.asciidoctorconfig_ as they work only in files that have the extension _.adoc_.\nTo work around this, rename the file to _.asciidoctorconfig.adoc_.\nThis will work the same way as _.asciidoctorconfig_."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "862a48e71d50c784384530f626cc5fee148cc8403b3419f00f12353f246ff0b9"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'libglassgtk'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/javafx-initialization-stuck.adoc",
      "language": "AsciiDoc",
      "line": 23,
      "offset": 85,
      "length": 11,
      "code": {
        "startLine": 21,
        "length": 11,
        "offset": 94,
        "surroundingCode": "== Cause\n\nThe JetBrains Runtime based on OpenJDK 8 (aka JBR8) doesn't include jre64/lib/amd64/libglassgtk3.so that is needed to run JavaFX in GTK3 environments.\n\nUpon the first initialization of JavaFX it will become stuck."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "4e94609bc425e94798ce4bd7f1c83502edc9efa3157f42804bc532548b512387"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'Zainless'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/javafx-initialization-stuck.adoc",
      "language": "AsciiDoc",
      "line": 35,
      "offset": 187,
      "length": 8,
      "code": {
        "startLine": 33,
        "length": 8,
        "offset": 202,
        "surroundingCode": "=== Background\n\nThis was first reported with a useful stack trace in issue https://github.com/asciidoctor/asciidoctor-intellij-plugin/issues/299[#299]. Thank you for https://github.com/ZainlessBrombie[@ZainlessBrombie] for providing detailed information and reporting back on a pre-release that helped to fix this issue.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "307b632d6f4d9d35b8f67252b99fb1610b9886a137f8811ea5e31bc325a81df4"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'Brombie'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/javafx-initialization-stuck.adoc",
      "language": "AsciiDoc",
      "line": 35,
      "offset": 195,
      "length": 7,
      "code": {
        "startLine": 33,
        "length": 7,
        "offset": 210,
        "surroundingCode": "=== Background\n\nThis was first reported with a useful stack trace in issue https://github.com/asciidoctor/asciidoctor-intellij-plugin/issues/299[#299]. Thank you for https://github.com/ZainlessBrombie[@ZainlessBrombie] for providing detailed information and reporting back on a pre-release that helped to fix this issue.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "1ff623a020d1c3112241e76e6f8a5e2061cc070e6379379b2bc43b73ebf1c842"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'jbrsdk'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/javafx-preview.adoc",
      "language": "AsciiDoc",
      "line": 42,
      "offset": 21,
      "length": 6,
      "code": {
        "startLine": 40,
        "length": 6,
        "offset": 278,
        "surroundingCode": "\n* Install the plugin \"`Choose Runtime`\" as described in the JetBrains knowledge base \"`https://intellij-support.jetbrains.com/hc/en-us/articles/206544879-Selecting-the-JDK-version-the-IDE-will-run-under[Selecting the JDK version the IDE will run under^]`\".\n* Choose a runtime \"jbrsdk-11_0_7-...-x64-b956.14.tar.gz\" or later and install it. The IDE will restart.\n* Go to the settings of the AsciiDoc plugin and check if the preview is set to \"`JavaFX WebView`\".Change it to \"`JavaFX WebView`\" if this is not the case.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "22c065b56e49118011a7bfa98f4aa93ebba0ce64cf762821fc2265c8cdd656eb"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'startpage'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/contribute-as-a-writer.adoc",
      "language": "AsciiDoc",
      "line": 16,
      "offset": 137,
      "length": 9,
      "code": {
        "startLine": 14,
        "length": 9,
        "offset": 150,
        "surroundingCode": "\nStart page::\nAll files related to the start page are in the Git repository https://github.com/ahus1/intellij-asciidoc-plugin.ahus1.de in the folder _startpage_.\nThat folder contains both the content (look for AsciiDoc files with the extension _.adoc_) plus several theme and assets related files.\nThe start page is built with the https://jekyllrb.com/[Jekyll] static site generator."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "9654a032623d889edbbbf1ba8b10d0d5715be9aa9beba9b88ce523b1da12901c"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'toml'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/contribute-as-a-writer.adoc",
      "language": "AsciiDoc",
      "line": 29,
      "offset": 21,
      "length": 4,
      "code": {
        "startLine": 27,
        "length": 4,
        "offset": 211,
        "surroundingCode": "The plugin's homepage is hosted on https://www.netlify.com/[Netlify].\nConfiguration files for hosting are in the GitHub repository https://github.com/ahus1/intellij-asciidoc-plugin.ahus1.de.\nFiles like _netlify.toml_, _build.sh_ and _redirects_ instruct Netlify how to build and publish this site.\nA sub-folder _lambda_ contains scripts to notify the maintainers of successful and unsuccessful deploys.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "dd8ff9ea815aea4230025c54be5bb70aa6e3149337a5e1e67f996f922756edcd"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'rastered'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/diagrams-in-pdf-without-text.adoc",
      "language": "AsciiDoc",
      "line": 31,
      "offset": 44,
      "length": 8,
      "code": {
        "startLine": 29,
        "length": 8,
        "offset": 112,
        "surroundingCode": "\nWhen using PNG, unsupported SVG attributes will not cause problems.\nThe tradeoff is usually a larger PDF and a rastered image.\nRastered images will not scale and print as good as SVGs.\nSome diagram types (like Mermaid) don't support PNG when used, for example, with the Kroki-integration."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "3c931b9f342370a623fa4e3d8809e90e0f2a021339b10fdb0fa4ab693e8981a0"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'Rastered'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/diagrams-in-pdf-without-text.adoc",
      "language": "AsciiDoc",
      "line": 32,
      "offset": 1,
      "length": 8,
      "code": {
        "startLine": 30,
        "length": 8,
        "offset": 127,
        "surroundingCode": "When using PNG, unsupported SVG attributes will not cause problems.\nThe tradeoff is usually a larger PDF and a rastered image.\nRastered images will not scale and print as good as SVGs.\nSome diagram types (like Mermaid) don't support PNG when used, for example, with the Kroki-integration.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "d681f402c9e40079107f2fbb7344e2992128aae6739e25488e90b2ffc19316d7"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'IDE's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/jcef-no-proxy-support.adoc",
      "language": "AsciiDoc",
      "line": 22,
      "offset": 38,
      "length": 5,
      "code": {
        "startLine": 20,
        "length": 5,
        "offset": 91,
        "surroundingCode": "== Cause: Old versions of JCEF don't support proxies\n\nThe JCEF preview doesn't support the IDE's proxy settings in version 2020.3 and earlier.\n\nhttps://youtrack.jetbrains.com/issue/JBR-2605[The JetBrains issue tracker shows] that this is fixed in release 2021.1 Beta 3 (Build 211.6556.6)."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "0262d31643129266cec737addefeb764562947abd096e0c539624f71f26e1ff3"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'jbrsdk'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/blurry-preview.adoc",
      "language": "AsciiDoc",
      "line": 74,
      "offset": 21,
      "length": 6,
      "code": {
        "startLine": 72,
        "length": 6,
        "offset": 278,
        "surroundingCode": "\n* Install the plugin \"`Choose Runtime`\" as described in the JetBrains knowledge base \"`https://intellij-support.jetbrains.com/hc/en-us/articles/206544879-Selecting-the-JDK-version-the-IDE-will-run-under[Selecting the JDK version the IDE will run under^]`\".\n* Choose a runtime \"jbrsdk-11_0_8-...-x64-b944.34.tar.gz\" or later and install it. The IDE will restart.\n* Go to the settings of the AsciiDoc plugin and check if the preview is set to \"`JCEF Browser`\" (recommended if available) or \"`JavaFX WebView`\".\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "f3b3ac16727a0864959f8176c4fcb139cce047a08dddd61dbda73daf82e27e7d"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'IDE's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/indent-missing-on-pasting.adoc",
      "language": "AsciiDoc",
      "line": 23,
      "offset": 19,
      "length": 5,
      "code": {
        "startLine": 21,
        "length": 5,
        "offset": 181,
        "surroundingCode": "Open a https://github.com/asciidoctor/asciidoctor-intellij-plugin/issues[GitHub issue with a minimal example to reproduce the observed behavior] to get it fixed.\n\n== Remedy: Change IDE's configuration\n\nThe behavior can be changed via menu:File[Settings... > Editor > Smart Keys]."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "bd5a702a75c9aac8531d6f6c337deceac10b52c8d76796da652b5dbcfee910a1"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'hljs'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/examples/highlightjs-highlighting.adoc",
      "language": "AsciiDoc",
      "line": 2,
      "offset": 18,
      "length": 4,
      "code": {
        "startLine": 1,
        "length": 4,
        "offset": 51,
        "surroundingCode": ":source-highlighter: highlight.js\n:highlightjsdir: hljs <1>\n:highlightjs-theme: default <2>\n:highlightjs-languages: basic <3>"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "73375151491493dc5f9e9d63e41674e1e693a27f566f74ccd660e0046cd7e0a0"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'startpage'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/docs/change-startpage.adoc",
      "language": "AsciiDoc",
      "line": 17,
      "offset": 33,
      "length": 9,
      "code": {
        "startLine": 15,
        "length": 9,
        "offset": 126,
        "surroundingCode": "\n. Fork and clone this repository: https://github.com/ahus1/intellij-asciidoc-plugin.ahus1.de\n. Change content in sub-folder _startpage_\n. Test your changes (recommended for every non-trivial change):\n.. Install Jekyll using bundler:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "5822db17757da2b0470bc67df2bc6bfd49b7c57e2f914af74551a6b0a3947923"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'IDE's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/jcef-preview.adoc",
      "language": "AsciiDoc",
      "line": 73,
      "offset": 53,
      "length": 5,
      "code": {
        "startLine": 71,
        "length": 5,
        "offset": 75,
        "surroundingCode": "Possible Workarounds:\n\n* Enable \"`Confirm before existing the IDE`\" in the IDE's settings.\nOnce the DevTools have been closed for an editor, the editor needs to be closed and re-opened before DevTools can be opened again.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "58e814b95df862da72f7d8ae5e00532a367eef34b496bd9ab80865dd498a2956"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'jbrsdk'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/jcef-preview.adoc",
      "language": "AsciiDoc",
      "line": 121,
      "offset": 21,
      "length": 6,
      "code": {
        "startLine": 119,
        "length": 6,
        "offset": 141,
        "surroundingCode": "* Install the plugin \"`Choose Runtime`\".\n* Open menu item menu:Help[Find action...] and search for \"`Choose Runtime...`\"\n* Choose a runtime \"jbrsdk-11_0_...tar.gz\" or later and install it.\nThe IDE will restart.\n* Go to the settings of the AsciiDoc plugin and check if the preview is set to \"`JCEF Browser`\"."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "6967154e9dbacb337545b39c6df95772a870efd210b9d53c8d7b525b06de5855"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'IDE's'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/antora.adoc",
      "language": "AsciiDoc",
      "line": 75,
      "offset": 122,
      "length": 5,
      "code": {
        "startLine": 73,
        "length": 5,
        "offset": 217,
        "surroundingCode": "\nFor this to work, all components of the Antora site need to be opened in one IntelliJ project.\nIf this isn't suitable in a given setup, suppress the inspection for a given reference, or disable the inspection in the IDE's setting for the given project.\n\n.Example how to disable the inspection for a single reference"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "baselineState": "new"
  },
  "hash": "2b78cca74b3e56103c04e0ec22201546641d96369ab8edc116501aad896ce1b1"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'tagname'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/livetemplates.adoc",
      "language": "AsciiDoc",
      "line": 49,
      "offset": 24,
      "length": 7,
      "code": {
        "startLine": 47,
        "length": 7,
        "offset": 53,
        "surroundingCode": "Some text from another file:\n\n\\include::text.txt[tag=tagname]\n----\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "a7d8f9ae80f2fe31c7855dc1934ec0216253338d1cc56c2a5ca7e2a9fabaef66"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'tagname'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/livetemplates.adoc",
      "language": "AsciiDoc",
      "line": 36,
      "offset": 9,
      "length": 7,
      "code": {
        "startLine": 34,
        "length": 7,
        "offset": 24,
        "surroundingCode": "----\nOther text\n// tag::tagname[]\nSome Snippet\n// end::tagname[]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "ecdd4eb4ee94c205818433ef3aeeca5823674505522e3d5d3e874a403c332c4c"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'tagname'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/livetemplates.adoc",
      "language": "AsciiDoc",
      "line": 38,
      "offset": 9,
      "length": 7,
      "code": {
        "startLine": 36,
        "length": 7,
        "offset": 39,
        "surroundingCode": "// tag::tagname[]\nSome Snippet\n// end::tagname[]\nmore text\n----"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "379e4677e6277271445ae5f6675917fd6d94f8f6eae491ef56e301dec475fd85"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'ifeval'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/conditional-rendering.adoc",
      "language": "AsciiDoc",
      "line": 32,
      "offset": 2,
      "length": 6,
      "code": {
        "startLine": 30,
        "length": 6,
        "offset": 24,
        "surroundingCode": "[source,asciidoc]\n----\n\\ifeval::[{env}!=idea]\nrender this text WHEN NOT running IntelliJ Asciidoctor Plugin\n\\endif::[]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "e06620fc029728488f5cd97d6586d60c385686735cac956ac02c306e2c57ab9b"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'ifeval'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/conditional-rendering.adoc",
      "language": "AsciiDoc",
      "line": 36,
      "offset": 2,
      "length": 6,
      "code": {
        "startLine": 34,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\\endif::[]\n\n\\ifeval::[{env}==idea]\nrender this text IF running IntelliJ Asciidoctor Plugin\n\\endif::[]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "c93694662a02ac1050144d7e143c901cc415e240625d87479c2c0909d797dcac"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'ifndef'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/conditional-rendering.adoc",
      "language": "AsciiDoc",
      "line": 19,
      "offset": 2,
      "length": 6,
      "code": {
        "startLine": 17,
        "length": 6,
        "offset": 24,
        "surroundingCode": "[source,asciidoc]\n----\n\\ifndef::env-idea[]\nRender this text WHEN NOT running IntelliJ Asciidoctor Plugin.\n\\endif::[]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "ca329b5171a060eb63fe6bdf7d5c4482007b5521386b21dd6a008d0fd68b5b5e"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'ifdef'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/conditional-rendering.adoc",
      "language": "AsciiDoc",
      "line": 23,
      "offset": 2,
      "length": 5,
      "code": {
        "startLine": 21,
        "length": 5,
        "offset": 13,
        "surroundingCode": "\\endif::[]\n\n\\ifdef::env-idea[]\nRender this text IF running IntelliJ Asciidoctor Plugin.\n\\endif::[]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "a729b46c0e468f99a8bbf7bf98f8cfc00c5de4a8ccc29e16aeef38f95777478c"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "severity": "High",
  "comment": "Typo: In word 'Passthrough'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "asciidoc-inspection.xml",
      "language": "XML",
      "line": 20,
      "offset": 45,
      "length": 11,
      "code": {
        "startLine": 18,
        "length": 11,
        "offset": 293,
        "surroundingCode": "    <inspection_tool class=\"AsciiDocXrefWithNaturalCrossReference\" enabled=\"true\" level=\"WARNING\" enabled_by_default=\"true\" />\n    <inspection_tool class=\"AsciiDocAttributeShouldBeDefined\" enabled=\"true\" level=\"WARNING\" enabled_by_default=\"true\" />\n    <inspection_tool class=\"AsciiDocObsoletePassthrough\" enabled=\"true\" level=\"WARNING\" enabled_by_default=\"true\" />\n    <inspection_tool class=\"AsciiDocUnresolvedAntoraModule\" enabled=\"true\" level=\"ERROR\" enabled_by_default=\"true\" />\n    <inspection_tool class=\"SpellCheckingInspection\" enabled=\"true\" level=\"WARNING\" enabled_by_default=\"true\">"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "SpellCheckingInspection",
    "baselineState": "new"
  },
  "hash": "97b7f4de139a43563766cf1ee6b8de43ac8b8028aa535252ced156c3bfd7bf8b"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/creating-docx.adoc",
      "language": "AsciiDoc",
      "line": 2,
      "offset": 103,
      "length": 4,
      "code": {
        "startLine": 1,
        "length": 4,
        "offset": 145,
        "surroundingCode": "= Create a DOCX file from an AsciiDoc file\n:description: Create a DOCX file for Microsoft Word and LibreOffice from an AsciiDoc file directly in your IDE.\n:navtitle: Create DOCX\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "99f43c5c1b221808911a961139892736d34b8e34419353afedca0c768f28c1ee"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/setup-environment.adoc",
      "language": "AsciiDoc",
      "line": 29,
      "offset": 1,
      "length": 3,
      "code": {
        "startLine": 27,
        "length": 3,
        "offset": 28,
        "surroundingCode": "== Verify your environment\n\nYou can check your environment using the following command in the root folder of the project:\n\n.Linux/MacOS command"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "e20d73f2cbc8637de97f4538c9ca7728df9c7f7f7c23e5bbd07910f2787de6fe"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/setup-environment.adoc",
      "language": "AsciiDoc",
      "line": 29,
      "offset": 15,
      "length": 4,
      "code": {
        "startLine": 27,
        "length": 4,
        "offset": 42,
        "surroundingCode": "== Verify your environment\n\nYou can check your environment using the following command in the root folder of the project:\n\n.Linux/MacOS command"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "53850afd70c4e4848d20ca4e482077bfa43dff9fc5b80cd47609cf3737bbc519"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/user/upvote-intellij-issues.adoc",
      "language": "AsciiDoc",
      "line": 11,
      "offset": 52,
      "length": 3,
      "code": {
        "startLine": 9,
        "length": 3,
        "offset": 152,
        "surroundingCode": "\nThis lists some issues Alexander (the current maintainer of the plugin) marked as important to him.\nHave a look an up-vote those that are important to you as well to raise the visibility of these issues.\n\nhttps://youtrack.jetbrains.com/issue/CWM-790[CWM-790]::"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "d0c9fd3d1039e433a1d29e1eb2e7fef70a395447009d9e45c45abfc8126b6772"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 12,
      "offset": 21,
      "length": 3,
      "code": {
        "startLine": 10,
        "length": 3,
        "offset": 38,
        "surroundingCode": "== Prerequisites\n\nTo use this plugin, you need to have one of the IntelliJ family of IDEs like IntelliJ IDEA, GoLand, WebStorm or PyCharm installed.\nSee below for <<google-android-studio,Android Studio>> and <<intellij-mps,IntelliJ MPS>>.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "bf40b485381fd92ce2f67ce93995fec0caaa15db5c2d4b4b49c5a98a1a9803cb"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'Please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 16,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 14,
        "length": 6,
        "offset": 108,
        "surroundingCode": "\nAll default download packages include the JetBrains Runtime 11, a pre-bundled OpenJDK runtime environment.\nPlease use the pre-bundled JetBrains Runtime to run the IDE as it proves to be the most stable.\n\nUp to and including IntelliJ IDEA 2020.1 the pre-bundled OpenJDK includes JavaFX, which is required for a rich preview in 2020.1 and earlier."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "8567b2364592b3e78d84239eeb4f46e2e96d8394daa0c75fe9dcaa37835507c3"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 25,
      "offset": 4,
      "length": 3,
      "code": {
        "startLine": 23,
        "length": 3,
        "offset": 59,
        "surroundingCode": "include::partial$javafx-preview-requires-plugin.adoc[]\n\nIf you've already installed the IDE and the plugin, continue to section xref:features.adoc[].\n\nIf you have the IDE installed already, continue to the next section <<installplugin>>."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "159783747227fb979bc9f9cb99d16a18a531391d444825900e118ac40f4cba00"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 27,
      "offset": 4,
      "length": 3,
      "code": {
        "startLine": 25,
        "length": 3,
        "offset": 98,
        "surroundingCode": "If you've already installed the IDE and the plugin, continue to section xref:features.adoc[].\n\nIf you have the IDE installed already, continue to the next section <<installplugin>>.\n\nIf you are looking for a free version of the IDE, choose IntelliJ IDEA Community edition."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "167e25b37d1ce764ec89b13108523e409785e6d5d91b52ea927e3e7378621ec8"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 29,
      "offset": 4,
      "length": 3,
      "code": {
        "startLine": 27,
        "length": 3,
        "offset": 91,
        "surroundingCode": "If you have the IDE installed already, continue to the next section <<installplugin>>.\n\nIf you are looking for a free version of the IDE, choose IntelliJ IDEA Community edition.\nAll other IDEs require a paid subscription.\nYou can still download them and use them with a free, time-limited evaluation subscription."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "95d5d98bac7f2089f9876a7e403cf57278fc2a69672de739204d21054cb2172c"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 31,
      "offset": 1,
      "length": 3,
      "code": {
        "startLine": 29,
        "length": 3,
        "offset": 134,
        "surroundingCode": "If you are looking for a free version of the IDE, choose IntelliJ IDEA Community edition.\nAll other IDEs require a paid subscription.\nYou can still download them and use them with a free, time-limited evaluation subscription.\n\nYou can download them from the JetBrains homepage: link:https://www.jetbrains.com/idea/download/[^]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "01466f6a701880f77a59233b8dca23ce472fad7deedc68cad8a6e2ea78971f2e"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 33,
      "offset": 1,
      "length": 3,
      "code": {
        "startLine": 31,
        "length": 3,
        "offset": 93,
        "surroundingCode": "You can still download them and use them with a free, time-limited evaluation subscription.\n\nYou can download them from the JetBrains homepage: link:https://www.jetbrains.com/idea/download/[^]\n\n[#google-android-studio]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "a33bfe0e4132bc7ab4c8eee6347b4f25b79b55e438fd38d7e447e5c71103453f"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 38,
      "offset": 4,
      "length": 3,
      "code": {
        "startLine": 36,
        "length": 3,
        "offset": 30,
        "surroundingCode": "=== Google Android Studio\n\nIf you use Android Studio, go ahead and <<installplugin,install the plugin>>.\n\nAfterwards:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "0dad79e96ea057f6daf408613e8311e96c59453af4bdd8ee646a9be6aed207b7"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 46,
      "offset": 4,
      "length": 3,
      "code": {
        "startLine": 44,
        "length": 3,
        "offset": 21,
        "surroundingCode": "=== IntelliJ MPS\n\nIf you use MPS, go ahead and <<installplugin,install the plugin>>.\n\nSupport will be limited as MPS doesn't have all the APIs the plugin can hook into."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "5dadddef0643b6af18dabc14e62f735346589d9d0d38e0a222e8181e96d0efdb"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'Please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 50,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 48,
        "length": 6,
        "offset": 135,
        "surroundingCode": "Support will be limited as MPS doesn't have all the APIs the plugin can hook into.\nHave a look at xref:faq/troubleshooting-mps.adoc[].\nPlease open an issue on GitHub if you want to contribute to making MPS support better.\n\n=== More information on JDKs"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "3cbcab69502479a46b839dd6592f90bd1040b607ee846ab2ee70aa5b448d6f80"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 50,
      "offset": 35,
      "length": 3,
      "code": {
        "startLine": 48,
        "length": 3,
        "offset": 169,
        "surroundingCode": "Support will be limited as MPS doesn't have all the APIs the plugin can hook into.\nHave a look at xref:faq/troubleshooting-mps.adoc[].\nPlease open an issue on GitHub if you want to contribute to making MPS support better.\n\n=== More information on JDKs"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "22a9b56a5139991702b64d856491317163b6423d52615c4136f0f6ce47e8db3c"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 54,
      "offset": 57,
      "length": 3,
      "code": {
        "startLine": 52,
        "length": 3,
        "offset": 86,
        "surroundingCode": "=== More information on JDKs\n\nTo use the JavaFX preview instead of the Swing preview, you'll need to run IntelliJ with 64bit Java and JavaFX installed.\nStarting with IntelliJ 2020.3, the JetBrains platform requires JDK 11 to run.\nOracle JDK installations include JavaFX, but can make the IDE unstable and crash."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "10378ec569038f84871ef55e4003e5a5393e588ef5e3e73cf67d2463d86a02fc"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 61,
      "offset": 47,
      "length": 4,
      "code": {
        "startLine": 59,
        "length": 4,
        "offset": 131,
        "surroundingCode": "The event more advanced JCEF preview will only work with JetBrains OpenJDK runtime.\n\nTherefore, JetBrains OpenJDK pre-bundled with your IDE is recommended.\n\nRead more about choosing the JDK version of the IDE in the JetBrains knowledge base entry \"`https://intellij-support.jetbrains.com/hc/en-us/articles/206544879-Selecting-the-JDK-version-the-IDE-will-run-under[Selecting the JDK version the IDE will run under]`\"."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "b2e67fe4b31579b72b264123e76e2f8b5976b8b668c25fb8f5eccccfbb46f7f3"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 68,
      "offset": 61,
      "length": 3,
      "code": {
        "startLine": 66,
        "length": 3,
        "offset": 86,
        "surroundingCode": "== Installing the plugin\n\nTo activate the support for AsciiDoc in the IDE the plugin, you must install the plugin.\nThere are several possibilities to install the plugin:\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "082596532cbb143d8ac4c5d2596f6057aba1e7966fe8597e778ad3349e5ed835"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 75,
      "offset": 4,
      "length": 4,
      "code": {
        "startLine": 73,
        "length": 4,
        "offset": 88,
        "surroundingCode": ". Via the xref:marketplace-via-settings[IDE's settings from JetBrains marketplace].\n\nIf your IDE doesn't have internet access configured:\n\n[start=2]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "a7d0c6648c1b874a86587dd21881c10e292bbb817a99f82d609611ffdfe8c17f"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 78,
      "offset": 73,
      "length": 4,
      "code": {
        "startLine": 76,
        "length": 4,
        "offset": 83,
        "surroundingCode": "\n[start=2]\n. Download the installation archive xref:download-install-from-disk[via your browser and install it from disk].\n\n////"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "682477e831b510684fe2748c2e5b812cddfa183f958882fbc79f73fd59c5e98b"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 83,
      "offset": 20,
      "length": 3,
      "code": {
        "startLine": 81,
        "length": 3,
        "offset": 63,
        "surroundingCode": "TODO: document the following possibilities\n\nThe IDE can prompt you to install the plugin:\n\n[start=3]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "09324225a7d0780a1a4a4fd100af431ce0d981c4e5f5d8ad0fb699540923d23f"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 94,
      "offset": 48,
      "length": 4,
      "code": {
        "startLine": 92,
        "length": 4,
        "offset": 63,
        "surroundingCode": "\nPrerequisite::\nThis requires a working internet connection in your IDE.\n\nSteps::"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "9da2a0e1d17ca5c273b42ce024b501fd92f6b56ebf889a322638cf199bcf5cfe"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 107,
      "offset": 42,
      "length": 4,
      "code": {
        "startLine": 105,
        "length": 4,
        "offset": 86,
        "surroundingCode": ". Search for 'asciidoc'\n. Click on _Install_\n. Once the download is complete, restart your IDE\n\ninclude::partial$installation-complete.adoc[]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "25bcaf5d4a984b623a1a6bad4ec5fa02d16a14d6c1b942653938380d9e249453"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 126,
      "offset": 40,
      "length": 4,
      "code": {
        "startLine": 124,
        "length": 4,
        "offset": 169,
        "surroundingCode": "image::web-page-marketplace.png[JetBrains Marketplace showing AsciiDoc plugin]\n. Choose the version tab if it isn't pre-selected.\n. Download the version compatible with your IDE's version (usually the latest version if your IDE is up-to-date).\n. Open the IDE's setting via menu:File[Settings...]. +\nThis opens the following menu:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "b6d4305246f02273e1cd65b5286b709cccab4c5416f32c716b3750a2d3551f97"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 126,
      "offset": 90,
      "length": 4,
      "code": {
        "startLine": 124,
        "length": 4,
        "offset": 219,
        "surroundingCode": "image::web-page-marketplace.png[JetBrains Marketplace showing AsciiDoc plugin]\n. Choose the version tab if it isn't pre-selected.\n. Download the version compatible with your IDE's version (usually the latest version if your IDE is up-to-date).\n. Open the IDE's setting via menu:File[Settings...]. +\nThis opens the following menu:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "d6f5a4d2ce8ba2a0f44b22ee214ad14af68e881d53b6be294ab777782d9d8542"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/docs/edit-documentation-content.adoc",
      "language": "AsciiDoc",
      "line": 8,
      "offset": 36,
      "length": 4,
      "code": {
        "startLine": 6,
        "length": 4,
        "offset": 53,
        "surroundingCode": "== Prerequisites\n\nFor small changes, writers can use your web browser and the web-based text editor of GitHub.\n\nThe preview of GitHub doesn't take into account the Antora macros, therefore, consider using the IntelliJ AsciiDoc plugin for changes."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "d37a0fb5ad8a1293d11d78c6a0d6993c421f522b7af08324255464abfc3ec5fd"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'just'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/docs/edit-documentation-content.adoc",
      "language": "AsciiDoc",
      "line": 12,
      "offset": 30,
      "length": 4,
      "code": {
        "startLine": 10,
        "length": 4,
        "offset": 165,
        "surroundingCode": "The preview of GitHub doesn't take into account the Antora macros, therefore, consider using the IntelliJ AsciiDoc plugin for changes.\n\n== How-to edit content using just a web browser\n\nFollow these steps to change the documentation content on the plugin's homepage using the browser:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "3099f21e75366cdc37d1a9eb7acfd9c16ce17455788f3ca4227cea2bdda1f21d"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/docs/edit-documentation-content.adoc",
      "language": "AsciiDoc",
      "line": 24,
      "offset": 40,
      "length": 4,
      "code": {
        "startLine": 22,
        "length": 4,
        "offset": 198,
        "surroundingCode": "*Optional:* Writers can build the plugin's documentation website locally for a preview by following the steps in xref:docs/change-documentation-theme.adoc[].\n\n== How-to edit content using an IDE on your local PC\n\nFollow these steps to change the documentation content on the plugin's homepage:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "f820215808bb3a762a8a2bc632b91f8479d06868028f05ff3f7a53efc4c742d7"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/docs/edit-documentation-content.adoc",
      "language": "AsciiDoc",
      "line": 30,
      "offset": 24,
      "length": 4,
      "code": {
        "startLine": 28,
        "length": 4,
        "offset": 171,
        "surroundingCode": ". Fork and clone the plugin's repository: https://github.com/asciidoctor/asciidoctor-intellij-plugin\n. Change documentation in the sub-folder _doc_\n. Proofread changes in your editor's live preview\n. Update navigation contents in the _nav.adoc_ file as needed to re-ordered, added or removed content\n. Create a pull request on GitHub"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "26c213e5e7ec17b86a5e0975650a8fa7ef2ee9edea410e42bcbf93fe5356ec7f"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/user/installing-a-preview-release.adoc",
      "language": "AsciiDoc",
      "line": 7,
      "offset": 4,
      "length": 3,
      "code": {
        "startLine": 5,
        "length": 3,
        "offset": 50,
        "surroundingCode": "Find the description on how to do this below.\n\nIf you want to install new pre-releases regularly, check out xref:user/add-eap-repository-to-ide.adoc[how to add the Early Access repository of the AsciiDoc plugin to your IDE].\n\n== Installing a preview-release"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "b3b8d55e4043fa54be7d3349f2f09c4b015430b2498364647b188c5e587ba4f7"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/user/installing-a-preview-release.adoc",
      "language": "AsciiDoc",
      "line": 7,
      "offset": 168,
      "length": 4,
      "code": {
        "startLine": 5,
        "length": 4,
        "offset": 214,
        "surroundingCode": "Find the description on how to do this below.\n\nIf you want to install new pre-releases regularly, check out xref:user/add-eap-repository-to-ide.adoc[how to add the Early Access repository of the AsciiDoc plugin to your IDE].\n\n== Installing a preview-release"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "ede80b0ddd4d45783fd4ba09191afeea050290c91f9a28223aac6134fa454a48"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq.adoc",
      "language": "AsciiDoc",
      "line": 3,
      "offset": 101,
      "length": 4,
      "code": {
        "startLine": 1,
        "length": 4,
        "offset": 173,
        "surroundingCode": "= Frequently asked questions (FAQ)\n:navtitle: Frequently asked questions\n:description: Find answers to previously asked questions, or open a new issue to find a solution to your issue.\n\nMissing an entry in the FAQ list?"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "e5f616f9df9c783db3865e687d8fd8eafe39f72cbdc6e947728c4e7325b191e5"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'Please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq.adoc",
      "language": "AsciiDoc",
      "line": 6,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 4,
        "length": 6,
        "offset": 35,
        "surroundingCode": "\nMissing an entry in the FAQ list?\nPlease open an issue in the https://github.com/asciidoctor/asciidoctor-intellij-plugin/issues[GitHub issues^] for this project.\n\n== General Troubles"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "14448ad68f79fc05986275a67126a8d189022b823e98c0f5ed98a5efa3891f19"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq.adoc",
      "language": "AsciiDoc",
      "line": 16,
      "offset": 140,
      "length": 3,
      "code": {
        "startLine": 14,
        "length": 3,
        "offset": 204,
        "surroundingCode": "=== There is an _ad-tag-include_ template in all my files. Why?\n\nSee xref:features/advanced/livetemplates.adoc#ad-tag-include[Special template _ad-tag-include_] on how this works and how to disable it if you don't need it.\n\n=== There is an _.asciidoctor_ folder appearing all over my project. Why?"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "9e16db82876556bf11726c1704ae6202f94ff9f31c6b6e71e118d505c50c5d8b"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq.adoc",
      "language": "AsciiDoc",
      "line": 37,
      "offset": 44,
      "length": 4,
      "code": {
        "startLine": 35,
        "length": 4,
        "offset": 108,
        "surroundingCode": "\nThis is an automatic reformatting option in the IDE's settings.\nStripping leading spaces should not change your rendered output.\n\nSee xref:faq/indent-missing-on-pasting.adoc[] for more information."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "685195a2d4e0b75b15ca154b2cb38c343cf762b0af582938d038d2433bd53794"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'Please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq.adoc",
      "language": "AsciiDoc",
      "line": 122,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 120,
        "length": 6,
        "offset": 76,
        "surroundingCode": "=== Something is not working as I expect it to work, where can I get help?\n\nPlease open an issue in the https://github.com/asciidoctor/asciidoctor-intellij-plugin/issues[GitHub issues^] for this project.\n\n== Supporting the project"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "78255c658941f3a3caef6cbb70b19f82c12b3bd978ef90830c30a64dda65c042"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'Please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq.adoc",
      "language": "AsciiDoc",
      "line": 128,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 126,
        "length": 6,
        "offset": 60,
        "surroundingCode": "=== I'm a user of the plugin, where can I show my support?\n\nPlease consider adding a rating for the plugin in the https://plugins.jetbrains.com/plugin/7391-asciidoc[JetBrains Marketplace].\n\nThis plugin is based on Asciidoctor and a lot of ideas from its community."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "98bd44d1b409f23902336ef0182fe09032f07dbb4b41b154996e75d98d08a878"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq.adoc",
      "language": "AsciiDoc",
      "line": 131,
      "offset": 25,
      "length": 6,
      "code": {
        "startLine": 129,
        "length": 6,
        "offset": 100,
        "surroundingCode": "\nThis plugin is based on Asciidoctor and a lot of ideas from its community.\nTo support Asciidoctor, please consider contributing funds via https://opencollective.com/asciidoctor[Open Collective].\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "1ddbbb6c73b89c78884ace8643747ef5d3e4a196df46d8383aca253bf5a88ef2"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/diagrams.adoc",
      "language": "AsciiDoc",
      "line": 42,
      "offset": 85,
      "length": 4,
      "code": {
        "startLine": 40,
        "length": 4,
        "offset": 203,
        "surroundingCode": "NOTE: Diagrams in the preview when running in any mode other than UNSAFE will only work starting with version 0.33.8.\n\nTo avoid checking in these files, consider adding a file path to the ignore file of your version control system.\n\nSee below for a _.gitignore_ file placed in the root of the project if the project uses Git as its version control system."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "f6f5f44f12b9435720e5c865ba9970502173304c57b67c39ec819fcc06adda4c"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/quick-start.adoc",
      "language": "AsciiDoc",
      "line": 17,
      "offset": 65,
      "length": 6,
      "code": {
        "startLine": 15,
        "length": 6,
        "offset": 134,
        "surroundingCode": "This plugin fully supports the free IntelliJ IDEA Community edition.\n\nTo install the plugin on IntelliJ MPS or Google Android Studio, please refer to the chapter _xref:installation.adoc[]_.\n\n[WARNING]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "eb79f9f8ba0aa7e5759715a68bc97a900bdfc4490b0b95f3aa4b8d575e0639ca"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'Please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/quick-start.adoc",
      "language": "AsciiDoc",
      "line": 21,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 19,
        "length": 6,
        "offset": 13,
        "surroundingCode": "[WARNING]\n--\nPlease use the pre-bundled JetBrains OpenJDK Runtime 11 to run your IDE. This provides the best live preview based on JavaFX or JCEF. You can check this in the menu menu:Help[About].\n\nIt should state:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "517d8aa12bfe9bba548278a11657c21b5c636d0758d826a23cd141ac132288f7"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/quick-start.adoc",
      "language": "AsciiDoc",
      "line": 21,
      "offset": 135,
      "length": 3,
      "code": {
        "startLine": 19,
        "length": 3,
        "offset": 147,
        "surroundingCode": "[WARNING]\n--\nPlease use the pre-bundled JetBrains OpenJDK Runtime 11 to run your IDE. This provides the best live preview based on JavaFX or JCEF. You can check this in the menu menu:Help[About].\n\nIt should state:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "5599e81cb1ec5ce93992acee1b4d48649a593fa0e828faf9afd71035acdea724"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/quick-start.adoc",
      "language": "AsciiDoc",
      "line": 21,
      "offset": 64,
      "length": 4,
      "code": {
        "startLine": 19,
        "length": 4,
        "offset": 76,
        "surroundingCode": "[WARNING]\n--\nPlease use the pre-bundled JetBrains OpenJDK Runtime 11 to run your IDE. This provides the best live preview based on JavaFX or JCEF. You can check this in the menu menu:Help[About].\n\nIt should state:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "51aecb1b68155a32079ab12bf79868dca222a2bd8b7da17255a5583acfa8c423"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'Please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/quick-start.adoc",
      "language": "AsciiDoc",
      "line": 31,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 29,
        "length": 6,
        "offset": 6,
        "surroundingCode": "====\n\nPlease refer to xref:installation.adoc#prerequisites[Installation Prerequisites] if this is not the case.\n--\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "77e52a3b6dd987d59f630b26996496f87fa2005c01a6f324fbb078706d39a0fb"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/quick-start.adoc",
      "language": "AsciiDoc",
      "line": 40,
      "offset": 11,
      "length": 4,
      "code": {
        "startLine": 38,
        "length": 4,
        "offset": 99,
        "surroundingCode": "image::install-plugin-marketplace-closeup.png[Install AsciiDoc plugin from marketplace]\n\n. Restart your IDE to activate the plugin.\n\nFor detailed installation instructions, please follow the instructions in section xref:installation.adoc[]."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "cc8e6bb93ecf25ea826954b15fa9092b78c76769e5660b90674477778a8bb49f"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/quick-start.adoc",
      "language": "AsciiDoc",
      "line": 42,
      "offset": 41,
      "length": 6,
      "code": {
        "startLine": 40,
        "length": 6,
        "offset": 84,
        "surroundingCode": ". Restart your IDE to activate the plugin.\n\nFor detailed installation instructions, please follow the instructions in section xref:installation.adoc[].\n\n== Post installation"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "3750c0a88c9c53bc0bd7d557d774eb6a2236e534bf52b82df8a2ed0575aa35df"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/user/join-discussion-on-github.adoc",
      "language": "AsciiDoc",
      "line": 6,
      "offset": 2,
      "length": 3,
      "code": {
        "startLine": 4,
        "length": 3,
        "offset": 16,
        "surroundingCode": "{description}\n\n_You can help by providing feedback!_\n\n== Discussion on GitHub"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "fa12911a740d13028cd783e603b421bedc8936ed6557c2d8141cdf5b2461ccb1"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/user/join-discussion-on-github.adoc",
      "language": "AsciiDoc",
      "line": 11,
      "offset": 1,
      "length": 3,
      "code": {
        "startLine": 9,
        "length": 3,
        "offset": 142,
        "surroundingCode": "\nTo participate in the discussions, have a look at the open https://github.com/asciidoctor/asciidoctor-intellij-plugin/issues[GitHub issues].\nYou can join the discussion or subscribe to an issue you are interested in.\nOnce the maintainers publish a preview version of the plugin, you can test the new version.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "50086bf719c6dbe9d8f96794033125090358d65f5c271af7076fcce403fa1234"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/user/join-discussion-on-github.adoc",
      "language": "AsciiDoc",
      "line": 11,
      "offset": 54,
      "length": 3,
      "code": {
        "startLine": 9,
        "length": 3,
        "offset": 195,
        "surroundingCode": "\nTo participate in the discussions, have a look at the open https://github.com/asciidoctor/asciidoctor-intellij-plugin/issues[GitHub issues].\nYou can join the discussion or subscribe to an issue you are interested in.\nOnce the maintainers publish a preview version of the plugin, you can test the new version.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "e9a5ae2ff54e2fc82b1c694c8e41dad26bba2d0b4bc87b9305b61835b4c78954"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/user/join-discussion-on-github.adoc",
      "language": "AsciiDoc",
      "line": 12,
      "offset": 63,
      "length": 3,
      "code": {
        "startLine": 10,
        "length": 3,
        "offset": 279,
        "surroundingCode": "To participate in the discussions, have a look at the open https://github.com/asciidoctor/asciidoctor-intellij-plugin/issues[GitHub issues].\nYou can join the discussion or subscribe to an issue you are interested in.\nOnce the maintainers publish a preview version of the plugin, you can test the new version.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "c0eef5b2bb7d23f98b0dfab78e258627380d7fabb6fba6c20ebf6aca87d397b5"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/docs/writing-user-documentation.adoc",
      "language": "AsciiDoc",
      "line": 6,
      "offset": 14,
      "length": 4,
      "code": {
        "startLine": 4,
        "length": 4,
        "offset": 28,
        "surroundingCode": "{description}\n\n== Write for your readers\n\nThis guideline enables contributors to write in a style that is comprehensible for the reader."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "3275c5a86dfdcaaafe91802bd501f356ddf467639ff91c927cf8b3f8fd6f632c"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'Please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features.adoc",
      "language": "AsciiDoc",
      "line": 10,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 8,
        "length": 6,
        "offset": 127,
        "surroundingCode": "If not, describe the expected behaviour in a https://github.com/asciidoctor/asciidoctor-intellij-plugin/issues[GitHub issue].\n\nPlease consider contributing to this document: open a bug when something is unclear, missing or wrong.\nYou can even create a pull request for this document!\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "98c552b5a8f49adb2a1fa93233fc01dbfade6f8ab233506a70a42a63ffa80fbf"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features.adoc",
      "language": "AsciiDoc",
      "line": 11,
      "offset": 1,
      "length": 3,
      "code": {
        "startLine": 9,
        "length": 3,
        "offset": 104,
        "surroundingCode": "\nPlease consider contributing to this document: open a bug when something is unclear, missing or wrong.\nYou can even create a pull request for this document!\n\n== Benefits of this plugin"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "2430ac9b1f21bc3c95258feb3f3c3512c526f13fc609040cf631cb730995de6c"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features.adoc",
      "language": "AsciiDoc",
      "line": 15,
      "offset": 38,
      "length": 4,
      "code": {
        "startLine": 13,
        "length": 4,
        "offset": 65,
        "surroundingCode": "== Benefits of this plugin\n\nThe IntelliJ AsciiDoc Plugin adds to your IDE:\n\n* A context-sensitive editor with syntax highlighting, auto-completion and in-line validation messages."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "806b5aa03769d605c84cf5b3cbddd3bc017c05c206c60c437b77fe805540485c"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features.adoc",
      "language": "AsciiDoc",
      "line": 42,
      "offset": 26,
      "length": 3,
      "code": {
        "startLine": 40,
        "length": 3,
        "offset": 180,
        "surroundingCode": "* Refactor Markdown to AsciiDoc: Right-click on a file, or use the Refactor menu, and the Markdown document will be replaced by the AsciiDoc equivalent.\n+\nThese supports undo when you're not happy with the result.\n\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "30e9d40f5a960cfb0c4f862a2a4ec09a0f6f1d7bdfe1610f4b7e480ee9bf4e18"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/errno-enoent.adoc",
      "language": "AsciiDoc",
      "line": 54,
      "offset": 30,
      "length": 4,
      "code": {
        "startLine": 52,
        "length": 4,
        "offset": 35,
        "surroundingCode": "----\n\nUsers can open the file from your IDE via menu:Help[Edit custom VM options...].\n\nThe https://www.jetbrains.com/help/idea/tuning-the-ide.html[online documentation of IntelliJ] explains how to find this file in the local file system."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "7cf18f310d415ddd73f4cea8b3491a0d7402b3639baedbc3fcaa91d3c6b766a0"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/docs/change-documentation-theme.adoc",
      "language": "AsciiDoc",
      "line": 8,
      "offset": 4,
      "length": 3,
      "code": {
        "startLine": 6,
        "length": 3,
        "offset": 21,
        "surroundingCode": "== Prerequisites\n\nIf you want to preview your changes locally:\n\n. https://nodejs.org/en/[Node] environment"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "0774f6ab834926b2fe12ea4785f52a7a4c72674ad76a41dc4dcf2bd53fdd6a18"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/docs/change-documentation-theme.adoc",
      "language": "AsciiDoc",
      "line": 8,
      "offset": 24,
      "length": 4,
      "code": {
        "startLine": 6,
        "length": 4,
        "offset": 41,
        "surroundingCode": "== Prerequisites\n\nIf you want to preview your changes locally:\n\n. https://nodejs.org/en/[Node] environment"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "8c54ad693592da5d04d067245ed2bace91077fb775222d0cfeb5145a445cc55f"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/docs/change-documentation-theme.adoc",
      "language": "AsciiDoc",
      "line": 19,
      "offset": 35,
      "length": 3,
      "code": {
        "startLine": 17,
        "length": 3,
        "offset": 223,
        "surroundingCode": ". Fork and clone the plugin's repository: https://github.com/asciidoctor/asciidoctor-intellij-plugin to a folder named _asciidoctor-intellij-plugin_ as a sibling to the first repository.\n+\nIf you choose a different folder, you'll need to adapt the folders in _antora-playbook-author.yml_.\n. Change content for the theme in files _antora-playbook.yml_ and _antora-playbook-author.yml_ or sub-folder __antora_\n. Test your changes (recommended for every non-trivial change):"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "d7e99533919951641f34af23e3868f4965791422d12e880552e1099560ca0413"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/docs/change-documentation-theme.adoc",
      "language": "AsciiDoc",
      "line": 19,
      "offset": 4,
      "length": 3,
      "code": {
        "startLine": 17,
        "length": 3,
        "offset": 192,
        "surroundingCode": ". Fork and clone the plugin's repository: https://github.com/asciidoctor/asciidoctor-intellij-plugin to a folder named _asciidoctor-intellij-plugin_ as a sibling to the first repository.\n+\nIf you choose a different folder, you'll need to adapt the folders in _antora-playbook-author.yml_.\n. Change content for the theme in files _antora-playbook.yml_ and _antora-playbook-author.yml_ or sub-folder __antora_\n. Test your changes (recommended for every non-trivial change):"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "5c106e5706635de1c92e44ae5275e804147282aad453b0f3c11fcb7477f61bcd"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/docs/change-documentation-theme.adoc",
      "language": "AsciiDoc",
      "line": 21,
      "offset": 8,
      "length": 4,
      "code": {
        "startLine": 19,
        "length": 4,
        "offset": 226,
        "surroundingCode": "If you choose a different folder, you'll need to adapt the folders in _antora-playbook-author.yml_.\n. Change content for the theme in files _antora-playbook.yml_ and _antora-playbook-author.yml_ or sub-folder __antora_\n. Test your changes (recommended for every non-trivial change):\n.. Install all dependencies defined by the `package.json` file\n+"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "cd60e398c91149ad7b80a906ad558376b831e8ff13007c8f78651682ef3c6d6b"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/privacy.adoc",
      "language": "AsciiDoc",
      "line": 12,
      "offset": 1,
      "length": 3,
      "code": {
        "startLine": 10,
        "length": 3,
        "offset": 100,
        "surroundingCode": "To improve this document and the plugin's privacy functionality, some more work would be required.\n\nYou can help by asking the right questions, engaging in a discussion or by sponsoring the plugin's development.\nMaybe you are able to pull in experts from your employer or company that could help in one way or another.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "cb0b6c5f464951b54f9e8ae4bf0b55203956d64da56ef446b7a3b6f5ae4bc0cc"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/privacy.adoc",
      "language": "AsciiDoc",
      "line": 13,
      "offset": 7,
      "length": 3,
      "code": {
        "startLine": 11,
        "length": 3,
        "offset": 119,
        "surroundingCode": "\nYou can help by asking the right questions, engaging in a discussion or by sponsoring the plugin's development.\nMaybe you are able to pull in experts from your employer or company that could help in one way or another.\n\nStill, this is a spare time project that is happy to accept contributions of any kind."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "01f945ce0095fdd42b9ccc694be830a93d76c75f01c03c433184a5e14b31a8c6"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/privacy.adoc",
      "language": "AsciiDoc",
      "line": 13,
      "offset": 44,
      "length": 4,
      "code": {
        "startLine": 11,
        "length": 4,
        "offset": 156,
        "surroundingCode": "\nYou can help by asking the right questions, engaging in a discussion or by sponsoring the plugin's development.\nMaybe you are able to pull in experts from your employer or company that could help in one way or another.\n\nStill, this is a spare time project that is happy to accept contributions of any kind."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "6928975348d05b4c9f68afb0d1ee858a26a487028a12d68f4725242eb14d8ab8"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/index.adoc",
      "language": "AsciiDoc",
      "line": 3,
      "offset": 51,
      "length": 4,
      "code": {
        "startLine": 1,
        "length": 4,
        "offset": 113,
        "surroundingCode": "= Overview of the IntelliJ AsciiDoc Plugin\n:navtitle: Overview\n:description: Write documentation without leaving your IDE. \\\nPreview your docs locally before publishing them. \\\nCollaborate using a version control system."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "91999f99ca32c53c5d9d027c1a48b64067441315cd80f2ef9bfc3401e2395f0e"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/index.adoc",
      "language": "AsciiDoc",
      "line": 4,
      "offset": 9,
      "length": 4,
      "code": {
        "startLine": 2,
        "length": 4,
        "offset": 90,
        "surroundingCode": ":navtitle: Overview\n:description: Write documentation without leaving your IDE. \\\nPreview your docs locally before publishing them. \\\nCollaborate using a version control system.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "0d14ade223708d977dba27143afc5cb92c89c9f344826e050fab0464a5f30d5f"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/index.adoc",
      "language": "AsciiDoc",
      "line": 23,
      "offset": 17,
      "length": 3,
      "code": {
        "startLine": 21,
        "length": 3,
        "offset": 123,
        "surroundingCode": "\nWhen writing technical documentation, it needs a team effort where everyone contributes and collaborates.\nFor the content you write, you want to be able to publish for different audiences in different target formats like static HTML pages, in-line help or PDFs.\n\n== Why to use AsciiDoc and IntelliJ"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "ee7cf070b61c9ba572275890f27ec5e21966179a082fdfada66736d23329908e"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/index.adoc",
      "language": "AsciiDoc",
      "line": 23,
      "offset": 28,
      "length": 3,
      "code": {
        "startLine": 21,
        "length": 3,
        "offset": 134,
        "surroundingCode": "\nWhen writing technical documentation, it needs a team effort where everyone contributes and collaborates.\nFor the content you write, you want to be able to publish for different audiences in different target formats like static HTML pages, in-line help or PDFs.\n\n== Why to use AsciiDoc and IntelliJ"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "3fdfa3a916ee5e3923b8da454f8d73d1f5f0ea83f110210d9af401d37c4c13dc"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/index.adoc",
      "language": "AsciiDoc",
      "line": 27,
      "offset": 28,
      "length": 3,
      "code": {
        "startLine": 25,
        "length": 3,
        "offset": 64,
        "surroundingCode": "== Why to use AsciiDoc and IntelliJ\n\nThe AsciiDoc format allows you to write your content once and automate its publishing using standard build automation tools.\n\nThe IntelliJ family of IDEs like IntelliJ IDEA, GoLand, WebStorm or PyCharm allows you to efficiently navigate and edit your content."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "89aa75572b1002b27d978f43a827d00c942005250ade3ef6a9c8e765ddaa1a25"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/index.adoc",
      "language": "AsciiDoc",
      "line": 27,
      "offset": 41,
      "length": 4,
      "code": {
        "startLine": 25,
        "length": 4,
        "offset": 77,
        "surroundingCode": "== Why to use AsciiDoc and IntelliJ\n\nThe AsciiDoc format allows you to write your content once and automate its publishing using standard build automation tools.\n\nThe IntelliJ family of IDEs like IntelliJ IDEA, GoLand, WebStorm or PyCharm allows you to efficiently navigate and edit your content."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "8aebce9689a7247942041c939aa96680214be95085a7b8db2cc4413df48ad259"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/index.adoc",
      "language": "AsciiDoc",
      "line": 29,
      "offset": 84,
      "length": 3,
      "code": {
        "startLine": 27,
        "length": 3,
        "offset": 209,
        "surroundingCode": "The AsciiDoc format allows you to write your content once and automate its publishing using standard build automation tools.\n\nThe IntelliJ family of IDEs like IntelliJ IDEA, GoLand, WebStorm or PyCharm allows you to efficiently navigate and edit your content.\nIt allows you to collaborate with other developers writers using version control systems like Git.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "0bfe8792f2cc36f329ba3f8431bf3d7a8bbd240ebf1d220b975a0d7d43ca70e2"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/index.adoc",
      "language": "AsciiDoc",
      "line": 29,
      "offset": 121,
      "length": 4,
      "code": {
        "startLine": 27,
        "length": 4,
        "offset": 246,
        "surroundingCode": "The AsciiDoc format allows you to write your content once and automate its publishing using standard build automation tools.\n\nThe IntelliJ family of IDEs like IntelliJ IDEA, GoLand, WebStorm or PyCharm allows you to efficiently navigate and edit your content.\nIt allows you to collaborate with other developers writers using version control systems like Git.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "4470cfc61c53fa5b5237e7734b86ca9831981031f316a306aa819288696b1f43"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/index.adoc",
      "language": "AsciiDoc",
      "line": 30,
      "offset": 11,
      "length": 3,
      "code": {
        "startLine": 28,
        "length": 3,
        "offset": 145,
        "surroundingCode": "\nThe IntelliJ family of IDEs like IntelliJ IDEA, GoLand, WebStorm or PyCharm allows you to efficiently navigate and edit your content.\nIt allows you to collaborate with other developers writers using version control systems like Git.\n\n== How this plugin helps writers and developers"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "a99d0e9215e5910b497619826bf2386e03ddd1f597ceb8a165e4ee76e21041c8"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/index.adoc",
      "language": "AsciiDoc",
      "line": 34,
      "offset": 90,
      "length": 4,
      "code": {
        "startLine": 32,
        "length": 4,
        "offset": 138,
        "surroundingCode": "== How this plugin helps writers and developers\n\nThis plugin adds AsciiDoc functionality to your IDE to make your productive when writing your technical documentation.\n\nIt provides the writer with..."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "24cba1c921c4c24b925988b239bd17172de79a9056ce50f2b1e1b5861813e3de"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/index.adoc",
      "language": "AsciiDoc",
      "line": 34,
      "offset": 44,
      "length": 4,
      "code": {
        "startLine": 32,
        "length": 4,
        "offset": 92,
        "surroundingCode": "== How this plugin helps writers and developers\n\nThis plugin adds AsciiDoc functionality to your IDE to make your productive when writing your technical documentation.\n\nIt provides the writer with..."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "2af785c13beb4b11dfff7362736df911700c8b10ccf92e16733933dbd452d182"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/index.adoc",
      "language": "AsciiDoc",
      "line": 34,
      "offset": 61,
      "length": 4,
      "code": {
        "startLine": 32,
        "length": 4,
        "offset": 109,
        "surroundingCode": "== How this plugin helps writers and developers\n\nThis plugin adds AsciiDoc functionality to your IDE to make your productive when writing your technical documentation.\n\nIt provides the writer with..."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "45fcdc362f9b7c63254b12de84f64781d9dfd4e872683277da4131a365e92b1a"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/index.adoc",
      "language": "AsciiDoc",
      "line": 44,
      "offset": 13,
      "length": 4,
      "code": {
        "startLine": 42,
        "length": 4,
        "offset": 38,
        "surroundingCode": "== Where to go from here\n\nTo continue your journey,\n\n* visit the (short) xref:quick-start.adoc[] guide or (in depth) xref:installation.adoc[] guide,"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "07efcda6edc6ef1eeb4f7a4d83a45f497a5dadd903957269b1cc880a05ff111b"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/index.adoc",
      "language": "AsciiDoc",
      "line": 48,
      "offset": 66,
      "length": 3,
      "code": {
        "startLine": 46,
        "length": 3,
        "offset": 203,
        "surroundingCode": "* visit the (short) xref:quick-start.adoc[] guide or (in depth) xref:installation.adoc[] guide,\n* read about the xref:features.adoc[], or\n* use the navigation on the left to learn about a specific topic you are interested in.\n\nIf you got questions, please raise them as a https://github.com/asciidoctor/asciidoctor-intellij-plugin/issues[new GitHub issue]."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "0b52ffb0f079b1b850dbd72ec03fc26f1d5609f37db29f4b2a9144f66428dad4"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/index.adoc",
      "language": "AsciiDoc",
      "line": 50,
      "offset": 23,
      "length": 6,
      "code": {
        "startLine": 48,
        "length": 6,
        "offset": 111,
        "surroundingCode": "* use the navigation on the left to learn about a specific topic you are interested in.\n\nIf you got questions, please raise them as a https://github.com/asciidoctor/asciidoctor-intellij-plugin/issues[new GitHub issue].\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "945db6849b022a8351631cb8b6f0941a7be9c5a82d451fd9aaf513a1f4ed6723"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/index.adoc",
      "language": "AsciiDoc",
      "line": 50,
      "offset": 4,
      "length": 3,
      "code": {
        "startLine": 48,
        "length": 3,
        "offset": 92,
        "surroundingCode": "* use the navigation on the left to learn about a specific topic you are interested in.\n\nIf you got questions, please raise them as a https://github.com/asciidoctor/asciidoctor-intellij-plugin/issues[new GitHub issue].\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "21c19d5b783e68aa69dfb6685a32e2a2c775f8bab0ab4a49ed5857d3f923fd35"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/user/add-eap-repository-to-ide.adoc",
      "language": "AsciiDoc",
      "line": 3,
      "offset": 113,
      "length": 4,
      "code": {
        "startLine": 1,
        "length": 4,
        "offset": 216,
        "surroundingCode": "= Using the Early Access repository of the AsciiDoc plugin\n:navtitle: Using the Early Access repository\n:description: Add the repository to receive notifications of new preview releases and download them directly to your IDE.\n\n{description}"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "a57e5833954e28b3f640c30557c8e5ea78ef51d92667cae1a68c1d2622d0dfda"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/user/add-eap-repository-to-ide.adoc",
      "language": "AsciiDoc",
      "line": 8,
      "offset": 45,
      "length": 4,
      "code": {
        "startLine": 6,
        "length": 4,
        "offset": 97,
        "surroundingCode": "Use this to avoid manual downloads of pre-releases.\n\n== Add our early-access-repository (EAP) to your IDE\n\nFollow these steps to add the repository to your IDE:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "747b425a473b29743ef4ea99ee7f2872a204504cd9af4e4a5df4493fef0a09ec"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/user/add-eap-repository-to-ide.adoc",
      "language": "AsciiDoc",
      "line": 10,
      "offset": 45,
      "length": 4,
      "code": {
        "startLine": 8,
        "length": 4,
        "offset": 98,
        "surroundingCode": "== Add our early-access-repository (EAP) to your IDE\n\nFollow these steps to add the repository to your IDE:\n\n. Go to menu:File[Settings... > Plugins]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "d4e93dea1f35515e1d58dbb2318bd68b5675bcf283dad1551e6698303dce3234"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/user/add-eap-repository-to-ide.adoc",
      "language": "AsciiDoc",
      "line": 21,
      "offset": 95,
      "length": 4,
      "code": {
        "startLine": 19,
        "length": 4,
        "offset": 274,
        "surroundingCode": "Use the https://github.com/asciidoctor/asciidoctor-intellij-plugin/issues[GitHub issue numbers] given in the release notes to join the discussion on the respective GitHub issues.\n\nOpen new issues if a new release breaks existing functionality or doesn't work as expected in your project.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "b121d52b982fba37716773ecedb8198f3cffe4ccfb049bb5c6638c9ee7104a8e"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 17,
      "offset": 1,
      "length": 3,
      "code": {
        "startLine": 15,
        "length": 3,
        "offset": 134,
        "surroundingCode": "The heart of lexing is `asciidoc.flex`.\nIt defines multiple states, and uses a lot of functionalities and tweaking to parse AsciiDoc.\nYou can add new token types as you go in `AsciiDocTokenTypes`.\nEnsure to update the list `TOKENS_TO_MERGE` if consecutive identical types of the tokens should be merged.\nIf the content of the token types should be spell-checked, add the token types to the list of tokens in `AsciiDocSpellcheckingStrategy`."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "adec2314292940b46709374dcfa7c8d573015f93d70d9073f93a5b468c40fe81"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 17,
      "offset": 32,
      "length": 3,
      "code": {
        "startLine": 15,
        "length": 3,
        "offset": 165,
        "surroundingCode": "The heart of lexing is `asciidoc.flex`.\nIt defines multiple states, and uses a lot of functionalities and tweaking to parse AsciiDoc.\nYou can add new token types as you go in `AsciiDocTokenTypes`.\nEnsure to update the list `TOKENS_TO_MERGE` if consecutive identical types of the tokens should be merged.\nIf the content of the token types should be spell-checked, add the token types to the list of tokens in `AsciiDocSpellcheckingStrategy`."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "9bd8e4c3c0d48a1123ad2088be370c4e0f2ea324ce4069569731084c27f016d9"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 21,
      "offset": 34,
      "length": 3,
      "code": {
        "startLine": 19,
        "length": 3,
        "offset": 171,
        "surroundingCode": "If the content of the token types should be spell-checked, add the token types to the list of tokens in `AsciiDocSpellcheckingStrategy`.\n\nOnce you change `asciidoc.flex`, you should run `gradlew compileJava` to generate the parser code.\n\nA test suite for the lexer is in `AsciiDocLexerTest`."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "d2243dbaa23f6ddc68639431bf8b52cb234f2de9cadab23ee0cc8494fc887ab8"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 21,
      "offset": 6,
      "length": 3,
      "code": {
        "startLine": 19,
        "length": 3,
        "offset": 143,
        "surroundingCode": "If the content of the token types should be spell-checked, add the token types to the list of tokens in `AsciiDocSpellcheckingStrategy`.\n\nOnce you change `asciidoc.flex`, you should run `gradlew compileJava` to generate the parser code.\n\nA test suite for the lexer is in `AsciiDocLexerTest`."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "ba92f1ae5cff7049422919bd36bf12ccedcc3bfe5949264ec14f74a4382fff43"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 44,
      "offset": 4,
      "length": 3,
      "code": {
        "startLine": 42,
        "length": 3,
        "offset": 71,
        "surroundingCode": "AsciiDoc is different.\n* There are no wrong characters in AsciiDoc.\nIf you get the syntax wrong, the converter usually prints the wrong syntax \"`as is`\".\nOnly a matching set of for example asterisks (`*`) produces bold text.\n--"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "232c96f81718c63f8a6b818440920fcf74bfb51c73253487250c94f118647944"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 140,
      "offset": 41,
      "length": 3,
      "code": {
        "startLine": 138,
        "length": 3,
        "offset": 230,
        "surroundingCode": "Currently, several tokens have the same highlighting `ASCIIDOC_MARKER`, so users have the same color for the pointy brackets around references (`\\<<ref>>`)and markers for bold (`\\*bold*`).\n\nOnce you add a new `TextAttributesKey`, you should either:\n\n. reference an existing color (like `ASCIIDOC_COMMENT` references `DefaultLanguageHighlighterColors.LINE_COMMENT`) OR"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "eea40c60f75307f8e9056911f8b1c9995dbefe42d7ac5131525fea696a3810a1"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 140,
      "offset": 6,
      "length": 3,
      "code": {
        "startLine": 138,
        "length": 3,
        "offset": 195,
        "surroundingCode": "Currently, several tokens have the same highlighting `ASCIIDOC_MARKER`, so users have the same color for the pointy brackets around references (`\\<<ref>>`)and markers for bold (`\\*bold*`).\n\nOnce you add a new `TextAttributesKey`, you should either:\n\n. reference an existing color (like `ASCIIDOC_COMMENT` references `DefaultLanguageHighlighterColors.LINE_COMMENT`) OR"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "94a14325d0e9d0a86d329349d5d9b758315dd78489f0aa8d94e8a774078097eb"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 145,
      "offset": 6,
      "length": 3,
      "code": {
        "startLine": 143,
        "length": 3,
        "offset": 88,
        "surroundingCode": ". add a color the AsciiDoc themes `AsciidocDefault.xml` and `AsciidocDarcula.xml`\n\nOnce you add a new token, you will need to add it to `AsciiDocColorSettingsPage` so users can customize the colors of their theme.\nThis class references also `SampleDocument.adoc` and `AsciiDocBundle.properties`, therefore you'll probably need to change these two files as well.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "d23eaa4bbd1c252228d1924f9189b01d089fe405841000d893ee12b9a61c1a35"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 145,
      "offset": 27,
      "length": 3,
      "code": {
        "startLine": 143,
        "length": 3,
        "offset": 109,
        "surroundingCode": ". add a color the AsciiDoc themes `AsciidocDefault.xml` and `AsciidocDarcula.xml`\n\nOnce you add a new token, you will need to add it to `AsciiDocColorSettingsPage` so users can customize the colors of their theme.\nThis class references also `SampleDocument.adoc` and `AsciiDocBundle.properties`, therefore you'll probably need to change these two files as well.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "f856908f4053e2f9386d340d291235c92f8acc945d357e761f9739f5a79058f7"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 146,
      "offset": 93,
      "length": 3,
      "code": {
        "startLine": 144,
        "length": 3,
        "offset": 224,
        "surroundingCode": "\nOnce you add a new token, you will need to add it to `AsciiDocColorSettingsPage` so users can customize the colors of their theme.\nThis class references also `SampleDocument.adoc` and `AsciiDocBundle.properties`, therefore you'll probably need to change these two files as well.\n\n[[parsing]]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "c22e79a81f31a3bc334c9cf63d5775df7e8132be4b1a96a99fc06fecde600cea"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 209,
      "offset": 48,
      "length": 3,
      "code": {
        "startLine": 207,
        "length": 3,
        "offset": 118,
        "surroundingCode": "\nTo analyze the structure interactively, install the PsiViewer plugin.\nThe plugin is pre-installed in the sandbox IDE you start using the `runIde` Gradle ask.\n\nYou can also install it in the IDE you develop in, but this is optional."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "acebfdced97a8726b2cb3524ebdb4b80899a0e8718fd3dea6d8aad7d2f8eacbb"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 211,
      "offset": 1,
      "length": 3,
      "code": {
        "startLine": 209,
        "length": 3,
        "offset": 89,
        "surroundingCode": "The plugin is pre-installed in the sandbox IDE you start using the `runIde` Gradle ask.\n\nYou can also install it in the IDE you develop in, but this is optional.\n\nRight-click on the AsciiDoc editor and choose menu:PsiViewer[View PSI for entire file] to browse the tree."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "607f13dc5956dded84f083dff5e21687ebd0d70d90736daefbb8806b5baa5a7e"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 211,
      "offset": 36,
      "length": 3,
      "code": {
        "startLine": 209,
        "length": 3,
        "offset": 124,
        "surroundingCode": "The plugin is pre-installed in the sandbox IDE you start using the `runIde` Gradle ask.\n\nYou can also install it in the IDE you develop in, but this is optional.\n\nRight-click on the AsciiDoc editor and choose menu:PsiViewer[View PSI for entire file] to browse the tree."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "dc9541ef40caae583b26d5f5c1b6d8ee61e6381e0c8de425f7efb6516498b013"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 219,
      "offset": 1,
      "length": 3,
      "code": {
        "startLine": 217,
        "length": 3,
        "offset": 38,
        "surroundingCode": "\nThere are unit tests for the parser.\nYou can run them from your IDE.\nThe tests come in two variants:\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "0bfda5156b579191d2b2db5f138bb5ea0958410d6138f2787b3a9df403b759bf"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 219,
      "offset": 23,
      "length": 4,
      "code": {
        "startLine": 217,
        "length": 4,
        "offset": 60,
        "surroundingCode": "\nThere are unit tests for the parser.\nYou can run them from your IDE.\nThe tests come in two variants:\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "31c0afdf1567bcdd77202dde924aebf5df6822fa4c2919ccfedc6d8a5b1cffea"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 225,
      "offset": 84,
      "length": 3,
      "code": {
        "startLine": 223,
        "length": 3,
        "offset": 88,
        "surroundingCode": "+\n--\nThis test parses a minimal snippet of AsciiDoc, creates the PSI tree, and the lets you apply assertions like in normal unit tests.\n\nUse this to write specific tests."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "9814df984f1fa39dde4ac020b3d7cbfdae0e5ec11e3c7a6e0452766e3e29a08a"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 229,
      "offset": 4,
      "length": 3,
      "code": {
        "startLine": 227,
        "length": 3,
        "offset": 135,
        "surroundingCode": "Use this to write specific tests.\nConsider a given/when/then structure to write tests that are comprehensible for other developers.\nAs you test only specific elements in the created tree, your tests will not break when parts of the tree change that are irrelevant to the tested functionality.\n--\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "95449e2ce78da6dff46324772b2d99b41400f6c5912dd31d85d60c8f3de6eb71"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 229,
      "offset": 57,
      "length": 4,
      "code": {
        "startLine": 227,
        "length": 4,
        "offset": 188,
        "surroundingCode": "Use this to write specific tests.\nConsider a given/when/then structure to write tests that are comprehensible for other developers.\nAs you test only specific elements in the created tree, your tests will not break when parts of the tree change that are irrelevant to the tested functionality.\n--\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "7ffce832d5a6727d10e4f8a699b8ab797b857d732e7c652b73764bd7562ea9a5"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 239,
      "offset": 6,
      "length": 3,
      "code": {
        "startLine": 237,
        "length": 3,
        "offset": 196,
        "surroundingCode": "To write a new test, create a new method in the class (like `testSectionsWithPreBlock()`).\nThen put a matching AsciiDoc file to the example file directory (like `sectionsWithPreBlock.adoc`).\nWhen you run the test for the first time, it will create a known good file (like `sectionsWithPreBlock.txt`).\nCheck the contents of the known good file if the result matches your expectations.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "5ed840d8d9257866c81a91349f02f45e318e9d8e73638994f7d604d2eb8a236a"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 240,
      "offset": 65,
      "length": 4,
      "code": {
        "startLine": 238,
        "length": 4,
        "offset": 274,
        "surroundingCode": "Then put a matching AsciiDoc file to the example file directory (like `sectionsWithPreBlock.adoc`).\nWhen you run the test for the first time, it will create a known good file (like `sectionsWithPreBlock.txt`).\nCheck the contents of the known good file if the result matches your expectations.\n\nOn consecutive runs the test will compare the parser result with the contents of the known good file."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "c9296b049cb855764c35402d248f87069a9448cfa43c81152086b365935f6b93"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 245,
      "offset": 57,
      "length": 3,
      "code": {
        "startLine": 243,
        "length": 3,
        "offset": 146,
        "surroundingCode": "If the content matches, the test will pass.\nIf there are differences, the test will fail.\nIf you expected these differences, for example, because you changed the parser or lexer, copy the result shown in your IDE to the known good file.\n\nNOTE: Please check in the known good file to the Git repository!"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "d7aacd902b38271c464ece08955355a0846c575b098acbd6caf6b4b6e64e21e3"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 245,
      "offset": 4,
      "length": 3,
      "code": {
        "startLine": 243,
        "length": 3,
        "offset": 93,
        "surroundingCode": "If the content matches, the test will pass.\nIf there are differences, the test will fail.\nIf you expected these differences, for example, because you changed the parser or lexer, copy the result shown in your IDE to the known good file.\n\nNOTE: Please check in the known good file to the Git repository!"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "847f817a285d5a1a97f1eeaaee94371e09cfe5062ff787e8b175368eb1acd1ad"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 245,
      "offset": 115,
      "length": 4,
      "code": {
        "startLine": 243,
        "length": 4,
        "offset": 204,
        "surroundingCode": "If the content matches, the test will pass.\nIf there are differences, the test will fail.\nIf you expected these differences, for example, because you changed the parser or lexer, copy the result shown in your IDE to the known good file.\n\nNOTE: Please check in the known good file to the Git repository!"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "6923bebf37c4bc9a7d3b90d9f4567b3ced9380f268a20a35635d36ce7e9e6a78"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'Please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 247,
      "offset": 7,
      "length": 6,
      "code": {
        "startLine": 245,
        "length": 6,
        "offset": 154,
        "surroundingCode": "If you expected these differences, for example, because you changed the parser or lexer, copy the result shown in your IDE to the known good file.\n\nNOTE: Please check in the known good file to the Git repository!\n--\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "cf52f4dad4409657c6cd723f35eef20856ea182d414a200da46bc59b4c453fd3"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 253,
      "offset": 84,
      "length": 3,
      "code": {
        "startLine": 251,
        "length": 3,
        "offset": 112,
        "surroundingCode": "Each has its own strengths!\n\nThe known good approach will trigger even on minor changes to the output and gives you the chance to approve or reject the changes.\nThe downside is that these tests will fail when there are unrelated changes because they check too many things.\nFor a known good test, it is also hard to see the parts of the known good that are relevant for the expected behavior and must not change."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "0e5e1de7cf1d0b40a17d67f225288b495cb02b38b48faf20df3fdeee8db72eb8"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/pdf-non-latin-languages.adoc",
      "language": "AsciiDoc",
      "line": 95,
      "offset": 1,
      "length": 3,
      "code": {
        "startLine": 93,
        "length": 3,
        "offset": 20,
        "surroundingCode": "== Further reading\n\nYou find more documentation reading the chapter https://github.com/asciidoctor/asciidoctor-pdf#support-for-non-latin-languages[\"`Support for Non-Latin Languages`\" in Asciidoctor PDF's documentation].\n\n== Public examples"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "4d1b1ddfe4a9f20eee74c09dc7393e932445460d34acae6f1d1232bdc92c7a10"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/pdf-non-latin-languages.adoc",
      "language": "AsciiDoc",
      "line": 102,
      "offset": 1,
      "length": 3,
      "code": {
        "startLine": 100,
        "length": 3,
        "offset": 163,
        "surroundingCode": "It contains AsciiDoc in Chinese plus a working setup for an _.asciidoctorconfig_ file.\nAs fonts, the author has chosen Source Han Serif and converted them to TTF.\nYou'll need to download the fonts in _cfg/fonts_ first to make it work.\n\nimage::pdf-with-chinese-characters-preview.png[]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "d85110daca4d99665c7e812e883031a88cfb8b5006b6a87d6e496e49a2c8ce3d"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/stylesheets.adoc",
      "language": "AsciiDoc",
      "line": 9,
      "offset": 20,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 47,
        "surroundingCode": "== Configuring stylesheets\n\nThis chapter walks you through the steps to prepare an _.asciidoctorconfig_ file to either replace the stylesheet or to add additional styles to the HTML header.\n\nThe _.asciidoctorconfig_ file will configure the preview of all AsciiDoc files in the folder where it is located and this folder's sub-folders."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "521e8ffc5f0c808680f3c230490b03a1c555b584400da5440489fae5337f185a"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/stylesheets.adoc",
      "language": "AsciiDoc",
      "line": 25,
      "offset": 1,
      "length": 3,
      "code": {
        "startLine": 23,
        "length": 3,
        "offset": 65,
        "surroundingCode": "\nThis replaces the standard stylesheet with a custom stylesheet.\nYou can use local content, or link to a remote stylesheet.\n\n==== Using local project's content"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "84b47b4b184ecac34ddfa9f3afa809d2f0baf93e6d94d3f96ba59dedb6ecf2a0"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/stylesheets.adoc",
      "language": "AsciiDoc",
      "line": 41,
      "offset": 9,
      "length": 4,
      "code": {
        "startLine": 39,
        "length": 4,
        "offset": 52,
        "surroundingCode": "<.> Filename of the stylesheet to be used.\n\n. Place your stylesheet in the _.asciidoctor_ folder:\n+\n..asciidoctor/preview-stylesheet.css"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "632f82da2d99cfc746d22460ffccc26238c8d9c499b038b207bb504a2e9abf05"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/stylesheets.adoc",
      "language": "AsciiDoc",
      "line": 81,
      "offset": 109,
      "length": 3,
      "code": {
        "startLine": 79,
        "length": 3,
        "offset": 114,
        "surroundingCode": "----\n\nThe https://github.com/darshandsoni/asciidoctor-skins[asciidoctor-skins] project hosts multiple stylesheets you can link to.\nThe following example uses a dark skin.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "d9a3b4687d4b319ecd912fadcd2a0855fb61d5066cd7cdb580dada0c00868e34"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/stylesheets.adoc",
      "language": "AsciiDoc",
      "line": 120,
      "offset": 9,
      "length": 4,
      "code": {
        "startLine": 118,
        "length": 4,
        "offset": 82,
        "surroundingCode": "<.> Tell the renderer to include the shared docinfo file _docinfo.html_.\n\n. Place your _docinfo.html_ in the _.asciidoctor_ folder\n+\n..asciidoctor/docinfo.html"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "68d8cd7c988390aab938b312be998b0f9a0a1e862e938cf25752a0f02010d778"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/multimodule.adoc",
      "language": "AsciiDoc",
      "line": 19,
      "offset": 43,
      "length": 4,
      "code": {
        "startLine": 17,
        "length": 4,
        "offset": 55,
        "surroundingCode": "== Solution\n\nCreate a project with multiple modules in your IDE.\nEach module will be backed by its own Git repository.\nDespite multiple Git repositories, the IDE will show it as one project with multiple modules."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "e0686bf866bfbb6e3a2704b3c33badd6279b815912da84de54a31f048ee485dc"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/multimodule.adoc",
      "language": "AsciiDoc",
      "line": 46,
      "offset": 53,
      "length": 4,
      "code": {
        "startLine": 44,
        "length": 4,
        "offset": 89,
        "surroundingCode": "=== Creating a multi-module project\n\n. Start with the main Git repository and open it in your IDE as usual.\nThis project will be the project the user will open to work with all Git repositories added in the following steps.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "186dabd4a272bd11b4ce5110b4fca7804eeac7d6c2f1a3bb1ea0cba6b94ca3f7"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/multimodule.adoc",
      "language": "AsciiDoc",
      "line": 56,
      "offset": 106,
      "length": 3,
      "code": {
        "startLine": 54,
        "length": 3,
        "offset": 176,
        "surroundingCode": ". Select the folder with the other Git repository and press btn:[OK].\n\n. Choose option _Import module from external model_ if the repository contains sources from a build tool you recognize, or _Create module from existing sources_ if not.\n\n. Depending on the external model, complete the following dialogs."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "2da243d980bd0f912fe06d3c036b23f6c9a68da9156850f7f0dca9e7be010738"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/preview.adoc",
      "language": "AsciiDoc",
      "line": 42,
      "offset": 1,
      "length": 3,
      "code": {
        "startLine": 40,
        "length": 3,
        "offset": 26,
        "surroundingCode": "== Debugging the preview\n\nYou can log information from the JavaFX or JCEF preview the preview using\n\n[source,javascript]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "7cc50f2d5fa1026a7592803c794867c93f795045e34b43e23d9539f8a05aa7f2"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/releasing-plugin.adoc",
      "language": "AsciiDoc",
      "line": 12,
      "offset": 1,
      "length": 3,
      "code": {
        "startLine": 10,
        "length": 3,
        "offset": 178,
        "surroundingCode": "GitHub actions create https://github.com/asciidoctor/asciidoctor-intellij-plugin/releases[a draft release].\nThe plugin is attached as `asciidoctor-intellij-plugin-xx.xx.xx.zip`.\nYou can download this file and install manually in your local IDE as described in xref:user/installing-a-preview-release.adoc[].\n. Edit the draft release.\n. You must not change the tag version, as it is already baked into the change log."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "997b085172066be1805488861628b0da6c263ae39b2d6ddf8da94094e351a9bb"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/releasing-plugin.adoc",
      "language": "AsciiDoc",
      "line": 12,
      "offset": 52,
      "length": 4,
      "code": {
        "startLine": 10,
        "length": 4,
        "offset": 229,
        "surroundingCode": "GitHub actions create https://github.com/asciidoctor/asciidoctor-intellij-plugin/releases[a draft release].\nThe plugin is attached as `asciidoctor-intellij-plugin-xx.xx.xx.zip`.\nYou can download this file and install manually in your local IDE as described in xref:user/installing-a-preview-release.adoc[].\n. Edit the draft release.\n. You must not change the tag version, as it is already baked into the change log."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "d996012d2820d7f1804fc0977d5d2a6a2bb773be2629e6357e06e02c8d21d39f"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/releasing-plugin.adoc",
      "language": "AsciiDoc",
      "line": 14,
      "offset": 3,
      "length": 3,
      "code": {
        "startLine": 12,
        "length": 3,
        "offset": 157,
        "surroundingCode": "You can download this file and install manually in your local IDE as described in xref:user/installing-a-preview-release.adoc[].\n. Edit the draft release.\n. You must not change the tag version, as it is already baked into the change log.\n. Add a meaningful headline for the release.\n. If you find typos in the long description for the release, fix them in the changelog and wait for the build to update the draft release."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "a53e7e614756ca79eca1fca5646e6f8f5e7bd36534122ce3337d64135cb52691"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/releasing-plugin.adoc",
      "language": "AsciiDoc",
      "line": 16,
      "offset": 6,
      "length": 3,
      "code": {
        "startLine": 14,
        "length": 3,
        "offset": 133,
        "surroundingCode": ". You must not change the tag version, as it is already baked into the change log.\n. Add a meaningful headline for the release.\n. If you find typos in the long description for the release, fix them in the changelog and wait for the build to update the draft release.\n. The long description supports Markdown, while the changelog is written in AsciiDoc.\nYou might need to convert the syntax to make the content appear correctly in Markdown."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "51cc714a541a2a5b6dc3634befcc3a9d43ab99792ccc2bce6c4d48661c34f2b0"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/releasing-plugin.adoc",
      "language": "AsciiDoc",
      "line": 18,
      "offset": 1,
      "length": 3,
      "code": {
        "startLine": 16,
        "length": 3,
        "offset": 225,
        "surroundingCode": ". If you find typos in the long description for the release, fix them in the changelog and wait for the build to update the draft release.\n. The long description supports Markdown, while the changelog is written in AsciiDoc.\nYou might need to convert the syntax to make the content appear correctly in Markdown.\n. Check the box \"`This is a pre-release`\".\n. Publish the draft release in the GitHub Web UI+ The plugin will be available from the https://plugins.jetbrains.com/plugin/7391-asciidoc/versions[EAP (early access program) repository]."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "983013bb4c2942869af6a576dadffc3a4e923156f8e52da2654a52e53c621a66"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/releasing-plugin.adoc",
      "language": "AsciiDoc",
      "line": 28,
      "offset": 1,
      "length": 3,
      "code": {
        "startLine": 26,
        "length": 3,
        "offset": 124,
        "surroundingCode": ". Edit the pre-release and uncheck the checkbox \"`This is a pre-release`\". +\nA GitHub action will then publish the release.\nYou don't need to wait for the publishing process of the preview version to complete to be able to trigger publishing a stable version.\n. Due to caching in the JetBrains marketplace and the IDE, it might take some time (minutes to hours) for the IDE to pick up the new version.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "1d42d58588c99451b153da3285b0f8feba7f71dc3815335376923fcf1e6a7ef5"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/asciidoctorconfig-file.adoc",
      "language": "AsciiDoc",
      "line": 11,
      "offset": 42,
      "length": 4,
      "code": {
        "startLine": 9,
        "length": 4,
        "offset": 202,
        "surroundingCode": "There are usually specific settings for each project that apply to all AsciiDoc sources: these might be the image directory or activating experimental options.\n\nWhile documents have all the settings in your root document, files that it includes will not have these settings when they render in the IDE's preview.\n\n== Solution"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "f38d69695ead6551e4431093397ef9d65ffed6d3a65e2dab907c3dc34d001645"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/user/write-a-review.adoc",
      "language": "AsciiDoc",
      "line": 7,
      "offset": 6,
      "length": 3,
      "code": {
        "startLine": 5,
        "length": 3,
        "offset": 107,
        "surroundingCode": "Reviews on the JetBrains marketplace help other users to find out what plugins work, and what don't.\n\n**If you like what you see:**\nGo to the https://plugins.jetbrains.com/plugin/7391-asciidoc/reviews[AsciiDoc plugin's page on the JetBrains marketplace].\nLog in with your JetBrains account and write a review."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "480ec76daadc5a17b0102e07116a4df2642bd5eddc12c05ee5845d04985cbc60"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/user/write-a-review.adoc",
      "language": "AsciiDoc",
      "line": 7,
      "offset": 20,
      "length": 3,
      "code": {
        "startLine": 5,
        "length": 3,
        "offset": 121,
        "surroundingCode": "Reviews on the JetBrains marketplace help other users to find out what plugins work, and what don't.\n\n**If you like what you see:**\nGo to the https://plugins.jetbrains.com/plugin/7391-asciidoc/reviews[AsciiDoc plugin's page on the JetBrains marketplace].\nLog in with your JetBrains account and write a review."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "30cc2307313c6e570bb361035356b53972d10cb8fc2ac6ec1f8ead852680be48"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/user/write-a-review.adoc",
      "language": "AsciiDoc",
      "line": 9,
      "offset": 13,
      "length": 4,
      "code": {
        "startLine": 7,
        "length": 4,
        "offset": 165,
        "surroundingCode": "**If you like what you see:**\nGo to the https://plugins.jetbrains.com/plugin/7391-asciidoc/reviews[AsciiDoc plugin's page on the JetBrains marketplace].\nLog in with your JetBrains account and write a review.\n\n**If you find that something is not working as you expect it to work:**"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "00aae22954d440ff0590d13483e0d108168e955527ae7fd2ddcda22b1294b3db"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/user/write-a-review.adoc",
      "language": "AsciiDoc",
      "line": 11,
      "offset": 6,
      "length": 3,
      "code": {
        "startLine": 9,
        "length": 3,
        "offset": 61,
        "surroundingCode": "Log in with your JetBrains account and write a review.\n\n**If you find that something is not working as you expect it to work:**\nhttps://github.com/asciidoctor/asciidoctor-intellij-plugin/issues[Open a GitHub issue] so that the plugin can be improved.\nGitHub allows for other users and developers to join the discussion and find the best working solution."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "1f23fb56bd5678dfa2af48d5d944b139e9c348bcce7a09cdec69cb1322bc2ae7"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/user/write-a-review.adoc",
      "language": "AsciiDoc",
      "line": 11,
      "offset": 48,
      "length": 3,
      "code": {
        "startLine": 9,
        "length": 3,
        "offset": 103,
        "surroundingCode": "Log in with your JetBrains account and write a review.\n\n**If you find that something is not working as you expect it to work:**\nhttps://github.com/asciidoctor/asciidoctor-intellij-plugin/issues[Open a GitHub issue] so that the plugin can be improved.\nGitHub allows for other users and developers to join the discussion and find the best working solution."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "188a2a7d02295959caee41073b899ef0553446de8de016869f1da0c12d962a24"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/creating-pdf.adoc",
      "language": "AsciiDoc",
      "line": 2,
      "offset": 60,
      "length": 4,
      "code": {
        "startLine": 1,
        "length": 4,
        "offset": 96,
        "surroundingCode": "= Create a PDF from an AsciiDoc file\n:description: Create PDF from an AsciiDoc file directly in your IDE.\n:page-aliases: features/advanced/creating-html-and-pdf.adoc\n:navtitle: Create PDF"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "602b18362790f2798f0bf643b311b7103bc41280ed8fc9bef59fdd6b2008c86d"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Chained 'of' phrases might be hard to read",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/creating-pdf.adoc",
      "language": "AsciiDoc",
      "line": 24,
      "offset": 16,
      "length": 28,
      "code": {
        "startLine": 22,
        "length": 28,
        "offset": 71,
        "surroundingCode": "image::features/advanced/pdf-document-properties.png[]\n\nA full history of the different versions of Asciidoctor PDF included in each plugin version is available in https://github.com/asciidoctor/asciidoctor-intellij-plugin/blob/main/CHANGELOG.adoc[the changelog of the plugin].\n\n== Downloading Asciidoctor PDF support"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "8e896def7912c3bf2e482f3573edbcde91778464d38e7e8824cd69d07350cf53"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/javafx-initialization-stuck.adoc",
      "language": "AsciiDoc",
      "line": 10,
      "offset": 6,
      "length": 3,
      "code": {
        "startLine": 8,
        "length": 3,
        "offset": 21,
        "surroundingCode": "== Environment\n\nWhen you're running IntelliJ on Linux with a GTK3 based desktop (like Ubuntu 19.04) using the JetBrains Runtime based on OpenJDK 8, the following will happen:\n\n0.28.18 and later::"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "e3aa3142b1ad4f8139dee3723bb3dda5b73b7aa5dd483c0aab2a20b55822cebf"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/javafx-initialization-stuck.adoc",
      "language": "AsciiDoc",
      "line": 35,
      "offset": 143,
      "length": 3,
      "code": {
        "startLine": 33,
        "length": 3,
        "offset": 158,
        "surroundingCode": "=== Background\n\nThis was first reported with a useful stack trace in issue https://github.com/asciidoctor/asciidoctor-intellij-plugin/issues/299[#299]. Thank you for https://github.com/ZainlessBrombie[@ZainlessBrombie] for providing detailed information and reporting back on a pre-release that helped to fix this issue.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "3891ce664f681a8ba00bd6d89a7cb6bff922fa4523dd29a966225ee464beaab6"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/partials/installation-complete.adoc",
      "language": "AsciiDoc",
      "line": 2,
      "offset": 67,
      "length": 4,
      "code": {
        "startLine": 1,
        "length": 4,
        "offset": 184,
        "surroundingCode": "Now that the installation is complete, every AsciiDoc file opens in an editor with syntax highlighting and a preview.\nContinue to section xref:recommended-settings.adoc[] to configure your environment.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "dc65643d45e0298d7ed30d777da2f29ee930f41b5195f81907fe152b0cbacdb3"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/javafx-preview.adoc",
      "language": "AsciiDoc",
      "line": 26,
      "offset": 9,
      "length": 3,
      "code": {
        "startLine": 24,
        "length": 3,
        "offset": 57,
        "surroundingCode": "include::partial$content-security-policy.adoc[]\n\n== When you can use JavaFX preview\n\nThe JavaFX preview works on a 64bit JDK and needs JavaFX installed."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "1ff8dcc1018b78ccd4101dfbe4bd6223968aa6089ad0e46503f61e1c7af8f88f"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'Please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/javafx-preview.adoc",
      "language": "AsciiDoc",
      "line": 50,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 48,
        "length": 6,
        "offset": 112,
        "surroundingCode": "\n* OpenJDK provided on Linux OS sometimes don't include JavaFX, therefore, the JavaFX preview is not available.\nPlease use the JetBrains JDK.\n\n* Oracle JDK JavaFX package on Windows is less stable compared to the OpenJDK provided by Jetbrains and might lead to a crashing IDE."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "c0a9b2d11732e089f84d5cbcaef9cd6254d59f7b1b0116270c0960fe9f2ab87c"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'Please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/javafx-preview.adoc",
      "language": "AsciiDoc",
      "line": 53,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 51,
        "length": 6,
        "offset": 135,
        "surroundingCode": "\n* Oracle JDK JavaFX package on Windows is less stable compared to the OpenJDK provided by Jetbrains and might lead to a crashing IDE.\nPlease use the JetBrains JDK.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "fb655f51d97d0fb7b4e266beb1dc61006efb2db3b973a7364a8ee18a83ad4826"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/contribute-as-a-sponsor.adoc",
      "language": "AsciiDoc",
      "line": 12,
      "offset": 5,
      "length": 3,
      "code": {
        "startLine": 10,
        "length": 3,
        "offset": 127,
        "surroundingCode": "*To support the Asciidoctor ecosystem,* support the https://opencollective.com/asciidoctor[Asciidoctor Open Collective^].\n\n*If you use diagrams via PlantUML,* consider https://www.patreon.com/plantuml[becoming one of their sponsors^]. All PlantUML sponsors receive access to an ad-free PlantUML website.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "8a42f7703e3b383171f0316cf481b3dc7f4d2a0554a95e1ac26f7d655a195400"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/contribute-as-a-writer.adoc",
      "language": "AsciiDoc",
      "line": 34,
      "offset": 33,
      "length": 3,
      "code": {
        "startLine": 32,
        "length": 3,
        "offset": 52,
        "surroundingCode": "== Further reading\n\nThere are three how-tos to walk you through changing the content of the website:\n\n* xref:docs/edit-documentation-content.adoc[]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "c3b03aa1a798ee3c65c59e3306f8430fc064d870cdfc4f5f89c3e3e0994939b6"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/contribute-as-a-coder.adoc",
      "language": "AsciiDoc",
      "line": 2,
      "offset": 37,
      "length": 3,
      "code": {
        "startLine": 1,
        "length": 3,
        "offset": 60,
        "surroundingCode": "= Contribute as a coder\n:description: This document enables you to enhance the plugin when you are new to either the project, or developing in an area you haven't previously worked in before.\n\n{description}"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "128321ee80ad351e79af28053602b6c8af69f1e09f3e41dd6aebb899c39dcc68"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/contribute-as-a-coder.adoc",
      "language": "AsciiDoc",
      "line": 2,
      "offset": 68,
      "length": 3,
      "code": {
        "startLine": 1,
        "length": 3,
        "offset": 91,
        "surroundingCode": "= Contribute as a coder\n:description: This document enables you to enhance the plugin when you are new to either the project, or developing in an area you haven't previously worked in before.\n\n{description}"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "9c5132663d13f4f7535bf7c20cae6520b983a99c745ef7547007b9a3223bcbb8"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/contribute-as-a-coder.adoc",
      "language": "AsciiDoc",
      "line": 2,
      "offset": 128,
      "length": 3,
      "code": {
        "startLine": 1,
        "length": 3,
        "offset": 151,
        "surroundingCode": "= Contribute as a coder\n:description: This document enables you to enhance the plugin when you are new to either the project, or developing in an area you haven't previously worked in before.\n\n{description}"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "8bbedc1824603d0d1fc5bb0b7bd0043809e1649382f3e38bd8d5671e1f00c817"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/contribute-as-a-coder.adoc",
      "language": "AsciiDoc",
      "line": 6,
      "offset": 29,
      "length": 3,
      "code": {
        "startLine": 4,
        "length": 3,
        "offset": 43,
        "surroundingCode": "{description}\n\nThe following sections walk you through the initial setup of the development setup first, then through different areas of the plugin.\n\nThis document is work in progress."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "d70e2043445ed77f7720976d93c8c2649dd7bf97622ffa7db8124e2a8e4bf05b"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'Please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/contribute-as-a-coder.adoc",
      "language": "AsciiDoc",
      "line": 9,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 7,
        "length": 6,
        "offset": 36,
        "surroundingCode": "\nThis document is work in progress.\nPlease ask questions to the maintainers for anything that is missing (either via email or via a GitHub ticket), and we'll update it.\n\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "80ba052423d48e58873f946f2a25ce66ba8abb5731e90b7f5f3bf69894cabcba"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/contribute-as-a-user.adoc",
      "language": "AsciiDoc",
      "line": 7,
      "offset": 18,
      "length": 3,
      "code": {
        "startLine": 5,
        "length": 3,
        "offset": 32,
        "surroundingCode": "{description}\n\nRead more on how you can help:\n\n* xref:user/write-a-review.adoc[]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "e94583c339ddcf1a97add4c470dc0f7ff5e75844f568109189375c810fe21520"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/contribute-as-a-user.adoc",
      "language": "AsciiDoc",
      "line": 17,
      "offset": 4,
      "length": 3,
      "code": {
        "startLine": 15,
        "length": 3,
        "offset": 46,
        "surroundingCode": "* xref:user/upvote-intellij-issues.adoc[]\n\nIf you want to give a financial contribution, continue to section _xref:contribute-as-a-sponsor.adoc[]_.\n\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "22b22e25251e645579058f531a35369f3122751697bdff6e34ef43339bab7606"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/index.adoc",
      "language": "AsciiDoc",
      "line": 11,
      "offset": 9,
      "length": 3,
      "code": {
        "startLine": 9,
        "length": 3,
        "offset": 23,
        "surroundingCode": "{description}\n\n== What you can do\n\nThere are multiple ways where you can help:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "48c1024c40420d86bce932cea249cb3a9dd19d40ae6201773ea35723649c616b"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/index.adoc",
      "language": "AsciiDoc",
      "line": 13,
      "offset": 31,
      "length": 3,
      "code": {
        "startLine": 11,
        "length": 3,
        "offset": 50,
        "surroundingCode": "== What you can do\n\nThere are multiple ways where you can help:\n\n* Join the discussions."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "3978633be8b8e6d72ecda01a1f82dd199998005453c8968577a5acca31baf0c8"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'Please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/index.adoc",
      "language": "AsciiDoc",
      "line": 21,
      "offset": 7,
      "length": 6,
      "code": {
        "startLine": 19,
        "length": 6,
        "offset": 30,
        "surroundingCode": "* Write documentation.\n\nNOTE: Please ask questions to the maintainers for anything that is missing (either via link:mailto:alexander.schwartz@gmx.net[email] or via a https://github.com/asciidoctor/asciidoctor-intellij-plugin/issues[GitHub issue]), and we'll update it.\n\nThere are four chapters:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "a6d46965331c5c650ec5ca66fa32d3a36202545f69708e03fa40a1840b73e490"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'Please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/troubleshooting-mps.adoc",
      "language": "AsciiDoc",
      "line": 11,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 9,
        "length": 6,
        "offset": 52,
        "surroundingCode": "\nThis problem doesn't appear in MPS 2020.3 anymore.\nPlease upgrade your IDE.\n\nSee https://github.com/asciidoctor/asciidoctor-intellij-plugin/issues/502[asciidoctor-intellij-plugin#502] for more details and a discussion."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "a8d45bc74ad71baaf6df50da40eb57b3c1f3a22a352e618842793a682c7c2b67"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/troubleshooting-mps.adoc",
      "language": "AsciiDoc",
      "line": 11,
      "offset": 16,
      "length": 4,
      "code": {
        "startLine": 9,
        "length": 4,
        "offset": 67,
        "surroundingCode": "\nThis problem doesn't appear in MPS 2020.3 anymore.\nPlease upgrade your IDE.\n\nSee https://github.com/asciidoctor/asciidoctor-intellij-plugin/issues/502[asciidoctor-intellij-plugin#502] for more details and a discussion."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "7b8d3a4e7411ab7d5d8f13cabd34bd92961705367551cc1765139f6844c03703"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/troubleshooting-mps.adoc",
      "language": "AsciiDoc",
      "line": 21,
      "offset": 1,
      "length": 3,
      "code": {
        "startLine": 19,
        "length": 3,
        "offset": 67,
        "surroundingCode": "It is no longer necessary to install the \"`AsciiDoc MPS add-on`\".\n\nYou can read more about this in the related GitHub issue https://github.com/asciidoctor/asciidoctor-intellij-plugin/issues/502[asciidoctor-intellij-plugin#502].\n\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "484b0c1fae673bb9f4a353b8bc57f6775720d6aa76aa9c65864f7b06fd9cf0a5"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/could-not-find-dot-executable.adoc",
      "language": "AsciiDoc",
      "line": 99,
      "offset": 58,
      "length": 4,
      "code": {
        "startLine": 97,
        "length": 4,
        "offset": 125,
        "surroundingCode": "\nUnfortunately, this doesn't show the dot-executable used for this.\nTo show the executable as well, add a custom property to your IDE via menu:Help[Edit custom properties...]:\n\n----"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "4de74bd19255f49ba76f1e50b0f49d7d7228866e49208a6f5fe6a3cc2e6fe80c"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/docs/change-startpage.adoc",
      "language": "AsciiDoc",
      "line": 9,
      "offset": 4,
      "length": 3,
      "code": {
        "startLine": 7,
        "length": 3,
        "offset": 21,
        "surroundingCode": "== Prerequisites\n\nIf you want to preview your changes locally:\n\n. https://www.ruby-lang.org/en/documentation/installation/[Ruby] environment"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "8c55b4f98fd52fec85d77445f32955829680a3f5de5f68090dc0a2fc70184124"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/docs/change-startpage.adoc",
      "language": "AsciiDoc",
      "line": 9,
      "offset": 24,
      "length": 4,
      "code": {
        "startLine": 7,
        "length": 4,
        "offset": 41,
        "surroundingCode": "== Prerequisites\n\nIf you want to preview your changes locally:\n\n. https://www.ruby-lang.org/en/documentation/installation/[Ruby] environment"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "5884591416ba954c8f42adf3a7ec93c21e01479c9de92d10d4e90953ebce0ebf"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/docs/change-startpage.adoc",
      "language": "AsciiDoc",
      "line": 18,
      "offset": 8,
      "length": 4,
      "code": {
        "startLine": 16,
        "length": 4,
        "offset": 143,
        "surroundingCode": ". Fork and clone this repository: https://github.com/ahus1/intellij-asciidoc-plugin.ahus1.de\n. Change content in sub-folder _startpage_\n. Test your changes (recommended for every non-trivial change):\n.. Install Jekyll using bundler:\n+"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "6950dbf125bdb33a5b33489e9d03a6651c661fa39e506806117119e53b2c5282"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/user/subscribe-to-new-releases.adoc",
      "language": "AsciiDoc",
      "line": 7,
      "offset": 2,
      "length": 3,
      "code": {
        "startLine": 5,
        "length": 3,
        "offset": 80,
        "surroundingCode": "Or the implementation misses a corner case that no-one has thought of before.\n\n_You can help by testing preview releases!_\n\n== Subscribe to GitHub notifications"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "3a10d07ce52d6fe093cdb50fafb3803d64fee7db61472e04b69b13b17c9778c2"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/user/subscribe-to-new-releases.adoc",
      "language": "AsciiDoc",
      "line": 14,
      "offset": 12,
      "length": 3,
      "code": {
        "startLine": 12,
        "length": 3,
        "offset": 104,
        "surroundingCode": "The release notes contain information about the newly included functionality or fixed bugs.\n\nOn GitHub, you can subscribe to a repository to receive email notifications once a preview release is available.\nUse the watch-control on the https://github.com/asciidoctor/asciidoctor-intellij-plugin[GitHub page of the plugin] and choose \"`Releases only`\" to get emails only when a new pre-release is available.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "f9fba050edb55fd3a3ca16da934df2f36103e4e60072986f51f7e1242014334e"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/asciidoctor-extensions.adoc",
      "language": "AsciiDoc",
      "line": 15,
      "offset": 135,
      "length": 4,
      "code": {
        "startLine": 13,
        "length": 4,
        "offset": 148,
        "surroundingCode": "== Situation\n\nWhen there are extensions for Asciidoctor used in a command line build, users want to see their effect on the preview rendered within your JetBrains IDE.\n\nTo find out more about extensions, have a look at the https://github.com/asciidoctor/asciidoctor-extensions-lab[Asciidoctor Extensions Lab] or the https://asciidoctor.org/docs/extensions/[Asciidoctor Extensions List]."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "079d2cd33314044a16c5e0da41f5ba2e1c2749f3827b185465c1373e7aeded86"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/jcef-preview.adoc",
      "language": "AsciiDoc",
      "line": 42,
      "offset": 65,
      "length": 4,
      "code": {
        "startLine": 40,
        "length": 4,
        "offset": 360,
        "surroundingCode": "On macOS there is no copy-and-paste from the JCEF preview in IntelliJ 2020.2.\nThis is fixed in IntelliJ 2020.3 (see issues https://youtrack.jetbrains.com/issue/IDEA-241604/[IDEA-241604] and https://github.com/asciidoctor/asciidoctor-intellij-plugin/issues/533[asciidoctor-intellij-plugin/#322]).\nAs a workaround, open the preview in the browser by clicking on your favorite browser symbol when hovering in the upper right corner of the editor and copying the contents of the browser window.\n\n== Benefits of the JCEF preview"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "65b69fd562cb4fa8df4f6d09c0caa0bd1a8448340c31c029b54e39e9bb917d73"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'Please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/jcef-preview.adoc",
      "language": "AsciiDoc",
      "line": 128,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 126,
        "length": 6,
        "offset": 26,
        "surroundingCode": "=== Troubleshooting JCEF\n\nPlease follow the https://intellij-support.jetbrains.com/hc/en-us/articles/360016644459-Reporting-JCEF-problems[JetBrains Knowledge Base article on \"`Reporting JCEF Problems`\"].\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "19b3ad9b49e9ea9a96d223a6963156a59091c1c1b0cb8c5ff984bd00c23b9c46"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/livetemplates.adoc",
      "language": "AsciiDoc",
      "line": 23,
      "offset": 52,
      "length": 4,
      "code": {
        "startLine": 21,
        "length": 4,
        "offset": 103,
        "surroundingCode": "One live template is special: **_ad-tag-include_**\n\nThis template adds comments with the tag-syntax to your source file that mark snippets to be extracted by AsciiDoc include preprocessor macros later.\nRead more in the Asciidoctor user manual in section https://asciidoctor.org/docs/user-manual/#include-partial[_Select Portions of a Document to Include_].\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "bfcb8ccbf75f52badd1ee24d63a4ca1b9f5b706733bd7add00d65a4c530307ce"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'Please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/nav.adoc",
      "language": "AsciiDoc",
      "line": 15,
      "offset": 4,
      "length": 6,
      "code": {
        "startLine": 13,
        "length": 6,
        "offset": 63,
        "surroundingCode": "** Advanced\n// the following list is sorted alphabetically.\n// Please keep it sorted when adding new content.\n*** xref:features/advanced/antora.adoc[]\n*** xref:features/advanced/asciidoclet.adoc[]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "2bd0c37bec43020e7f0670b4a83bd96b169ca0d9d7ba58a2088a4a21f2e843f6"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'just'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/intro-to-plugin-development.adoc",
      "language": "AsciiDoc",
      "line": 17,
      "offset": 57,
      "length": 4,
      "code": {
        "startLine": 15,
        "length": 4,
        "offset": 418,
        "surroundingCode": "This plugin pulled several ideas from the Markdown plugin for IntelliJ that is now part of the IntelliJ community edition.\nClone the https://github.com/JetBrains/intellij-community[GitHub repository for the IntelliJ Community edition] and check out the https://github.com/JetBrains/intellij-community/tree/master/plugins/markdown[Markdown plugin] in particular.\nThere is no need to make the community edition compile, just use it as a reference and look up example implementations for IntelliJ's extension point base classes.\n\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "fd6529295de7d26496c0ec5cb66a92ce00be00d58055b7be83146d68b53c6fdb"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/building-and-running.adoc",
      "language": "AsciiDoc",
      "line": 48,
      "offset": 1,
      "length": 3,
      "code": {
        "startLine": 46,
        "length": 3,
        "offset": 11,
        "surroundingCode": "=== About\n\nYou most likely want to do this for fast turnaround times when running single tests, and debugging both tests and the plugin itself.\nPlease use IntelliJ IDEA as an IDE for developing on this plugin.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "c4c664007159c633f710d3c043594a3d965f762147d20b58478c9013a3d6106a"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'Please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/building-and-running.adoc",
      "language": "AsciiDoc",
      "line": 49,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 47,
        "length": 6,
        "offset": 134,
        "surroundingCode": "\nYou most likely want to do this for fast turnaround times when running single tests, and debugging both tests and the plugin itself.\nPlease use IntelliJ IDEA as an IDE for developing on this plugin.\n\nYou can use the most recent version of the IDE."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "cf6d161d8c77a44813ae3719c8a593221b04112f3206fa990dc801a1c4809283"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/building-and-running.adoc",
      "language": "AsciiDoc",
      "line": 51,
      "offset": 1,
      "length": 3,
      "code": {
        "startLine": 49,
        "length": 3,
        "offset": 67,
        "surroundingCode": "Please use IntelliJ IDEA as an IDE for developing on this plugin.\n\nYou can use the most recent version of the IDE.\nThe `build.gradle` file specifies the minimum version for all users of the plugin, but when developing you are free to use a more recent version.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "5eea4df934ef7f228c88e31066bc089740aa455c9e9e4081b334005e6147930f"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/building-and-running.adoc",
      "language": "AsciiDoc",
      "line": 52,
      "offset": 104,
      "length": 3,
      "code": {
        "startLine": 50,
        "length": 3,
        "offset": 152,
        "surroundingCode": "\nYou can use the most recent version of the IDE.\nThe `build.gradle` file specifies the minimum version for all users of the plugin, but when developing you are free to use a more recent version.\n\n=== Setup Tasks"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "74769362567f372d01f456f3ba3d6e321924f0d2c1c7075e5d09f50af2ab699a"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/building-and-running.adoc",
      "language": "AsciiDoc",
      "line": 58,
      "offset": 91,
      "length": 3,
      "code": {
        "startLine": 56,
        "length": 3,
        "offset": 156,
        "surroundingCode": ". Checkout the GitHub project and import it as a gradle project.\n\n. Ensure to install the following plugins (your IDE should recommend installing them once you open the project):\n+\n--"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "9434ce90564fd187a604890586a960155a48f942a07ceb164be69280a5edae86"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/building-and-running.adoc",
      "language": "AsciiDoc",
      "line": 58,
      "offset": 44,
      "length": 4,
      "code": {
        "startLine": 56,
        "length": 4,
        "offset": 109,
        "surroundingCode": ". Checkout the GitHub project and import it as a gradle project.\n\n. Ensure to install the following plugins (your IDE should recommend installing them once you open the project):\n+\n--"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "53d0fa8113b165185126bfa785c1da1849bf44bfe1a612365bafdae0714d94fa"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'Please'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/building-and-running.adoc",
      "language": "AsciiDoc",
      "line": 86,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 84,
        "length": 6,
        "offset": 158,
        "surroundingCode": "\nStill, when running via the IDE, the tests in _AsciiDocGrammarInspectionTest_ fail with an _ExceptionInInitializerError_ when loading language tool classes.\nPlease run these tests using the CLI command _gradlew check_ as described above.\n\n=== Validation Tasks"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "4d1557d4be39e372d174749fd09635fe8a0a7f52228320b8b6e22c41de0c31a1"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/building-and-running.adoc",
      "language": "AsciiDoc",
      "line": 90,
      "offset": 36,
      "length": 4,
      "code": {
        "startLine": 88,
        "length": 4,
        "offset": 57,
        "surroundingCode": "=== Validation Tasks\n\nPerform these tasks to ensure that your setup is ready for development.\n\n. Run the test cases from `AsciiDocLexerTest.java` to see that running tests works in your setup."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "439dbe8f0074d9a0377902992f61b88be24d8a4af349ec97d930007daa4656d1"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/building-and-running.adoc",
      "language": "AsciiDoc",
      "line": 92,
      "offset": 87,
      "length": 4,
      "code": {
        "startLine": 90,
        "length": 4,
        "offset": 159,
        "surroundingCode": "Perform these tasks to ensure that your setup is ready for development.\n\n. Run the test cases from `AsciiDocLexerTest.java` to see that running tests works in your setup.\n\n. There are two ready-to-go run configurations checked in to git that you can run:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "3b7a6a914ddc6a3dad0dbc51034558c59c48b59cc28009c66f2517504365b275"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/building-and-running.adoc",
      "language": "AsciiDoc",
      "line": 94,
      "offset": 71,
      "length": 3,
      "code": {
        "startLine": 92,
        "length": 3,
        "offset": 169,
        "surroundingCode": ". Run the test cases from `AsciiDocLexerTest.java` to see that running tests works in your setup.\n\n. There are two ready-to-go run configurations checked in to git that you can run:\n+\n--"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "941028b8c09c4443ca454d9c0e37ca232143ac7e88331a0f2f5639733dc6b244"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/building-and-running.adoc",
      "language": "AsciiDoc",
      "line": 97,
      "offset": 54,
      "length": 3,
      "code": {
        "startLine": 95,
        "length": 3,
        "offset": 58,
        "surroundingCode": "+\n--\nbuildPlugin:: building the plugin as a ZIP-file that you can then install locally into your IDE\n\nrunIde:: runs an IntelliJ community edition with the AsciiDoc plugin enabled."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "2981399159202db987269f5713e561c684f26db74f3317eaa34be9d48a2cee08"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/building-and-running.adoc",
      "language": "AsciiDoc",
      "line": 97,
      "offset": 88,
      "length": 4,
      "code": {
        "startLine": 95,
        "length": 4,
        "offset": 92,
        "surroundingCode": "+\n--\nbuildPlugin:: building the plugin as a ZIP-file that you can then install locally into your IDE\n\nrunIde:: runs an IntelliJ community edition with the AsciiDoc plugin enabled."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "e1b40388872cba86bb63ad2b53adab1186422710c5593d67b86a5b79bb3e49aa"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'You'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/building-and-running.adoc",
      "language": "AsciiDoc",
      "line": 100,
      "offset": 1,
      "length": 3,
      "code": {
        "startLine": 98,
        "length": 3,
        "offset": 79,
        "surroundingCode": "\nrunIde:: runs an IntelliJ community edition with the AsciiDoc plugin enabled.\nYou can choose to run it in the debug mode.\n--\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "69f6337b73c136cdd42d39c3d34bf99f1bdb1e3075dad75fa352d04cbec0fcff"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/creating-html.adoc",
      "language": "AsciiDoc",
      "line": 2,
      "offset": 61,
      "length": 4,
      "code": {
        "startLine": 1,
        "length": 4,
        "offset": 107,
        "surroundingCode": "= Create a HTML document from an AsciiDoc file\n:description: Create HTML from an AsciiDoc file directly in your IDE.\n:navtitle: Create HTML\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "b34f55b7b7e1366e6d5d957e6fdd525ebc83976e2ff4c90b919a79380d79dba2"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/recommended-settings.adoc",
      "language": "AsciiDoc",
      "line": 19,
      "offset": 106,
      "length": 3,
      "code": {
        "startLine": 17,
        "length": 3,
        "offset": 217,
        "surroundingCode": "Using soft wraps will make the content readable in the editor, as each line wraps at the width of the editor.\n+\nGo to menu:File[Settings... > Editor > General > Soft Wraps] and enable soft wrap for the file extension you use for AsciiDoc files (usually *.adoc).\n+\nimage::enable-softwrap.png[Editor settings showing soft wrap]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "9b7cbe62fc9b952b8d7ecafee2dc9dd8d6dfd562712de377560fe1921ba10b0f"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'your'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/recommended-settings.adoc",
      "language": "AsciiDoc",
      "line": 33,
      "offset": 4,
      "length": 4,
      "code": {
        "startLine": 31,
        "length": 4,
        "offset": 52,
        "surroundingCode": "image::settings-asciidoc.png[AsciiDoc settings]\n\nIf your preview is blurry, xref:faq/blurry-preview.adoc[follow these instructions to remedy this].\n\n[#enable-javafx-jcef-for-android-studio]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "b365e3f859ce7fe782d044ce379911144c492ed812343350770a21808698e2e1"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Style",
  "severity": "High",
  "comment": "Don't use 'you'",
  "detailsInfo": "Check the writing style defined in:\n\n* Grazie Professional rule files (e.g. `.grazie.en.yaml` for English) for this project or its specific subdirectories. To create such a file, invoke **New** menu on any (e.g. root) directory of the project.\n* *Style* rules in *Editor \\| Natural languages \\| Rules* settings\n\nThis inspection only returns results via **Code \\| Analyze Code \\| Run Inspection By Name...** or in offline analysis. Editor highlighting of style issues is performed independently of this inspection's settings.",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/recommended-settings.adoc",
      "language": "AsciiDoc",
      "line": 38,
      "offset": 43,
      "length": 3,
      "code": {
        "startLine": 36,
        "length": 3,
        "offset": 88,
        "surroundingCode": "=== Enable JavaFX or JCEF for Android Studio\n\nTo use a rich preview for Android Studio, you'll need to download additional components.\ninclude::partial$android-studio-next-steps.adoc[]\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "Style",
    "baselineState": "new"
  },
  "hash": "354fd2972d815d688bd7f79144987bb35265a1955fda991153d4333bf32d2181"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "This word has been used in one of the immediately preceding sentences. Using a synonym could make your text more interesting to read, unless the repetition is intentional.",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/validation-in-ide.adoc",
      "language": "AsciiDoc",
      "line": 56,
      "offset": 115,
      "length": 7,
      "code": {
        "startLine": 54,
        "length": 7,
        "offset": 292,
        "surroundingCode": ". The IDE then shows a tool window with all problems found in the search.\nDepending on the size of the project and the inspections selected, the inspection might take some time.\nUse the icons on the left to re-run the analysis, expand or collapse all groups, navigate to the previous or next problem in the list, or change the inspection profile.\n+\nimage::validation-ide/problem-tool-window.png[]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "baselineState": "new"
  },
  "hash": "1cd8a3e41a370af76803bdeec4b0d7bd549d56c5df934e6673bad8ae992eecf2"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "'text' usually goes with an article",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 53,
      "offset": 2,
      "length": 4,
      "code": {
        "startLine": 51,
        "length": 4,
        "offset": 92,
        "surroundingCode": "| Copy current line to clipboard | kbd:[Ctrl+C],kbd:[Ctrl+Insert]\n| Paste from clipboard +\n(text or images) | kbd:[Ctrl+V],kbd:[Shift+Insert]\n| Move current line up/down | kbd:[Ctrl+Shift+Up]/kbd:[Down]\n| Duplicate current line  | kbd:[Ctrl+D]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "eb1faac1c7cefb31e5f76823cd5cea5470c05d1efa09edbaed8c431c81816585"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "'end' usually goes with an article",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 61,
      "offset": 18,
      "length": 3,
      "code": {
        "startLine": 59,
        "length": 3,
        "offset": 125,
        "surroundingCode": "| Start new line | kbd:[Shift+Enter]\n| Toggle case for word at caret or selected block | kbd:[Ctrl+Shift+U]\n| Delete to word end | kbd:[Ctrl+Delete]\n| Delete to word start | kbd:[Ctrl+Backspace]\n| Close active editor tab | kbd:[Ctrl+F4]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "e06646f27c5fd3e8d4bc5d66a9edc0bca31cca1640b8429dedcf650f346dcebf"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Missing punctuation",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 65,
      "offset": 6,
      "length": 7,
      "code": {
        "startLine": 63,
        "length": 7,
        "offset": 73,
        "surroundingCode": "| Close active editor tab | kbd:[Ctrl+F4]\n| Basic code completion +\n(for example file names) | kbd:[Ctrl+Space]\n| Smart code completion +\n(for example file names) | kbd:[Ctrl+Shift+Space]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "9a471aa7e7951298936f06eafc57ee5bd921a2fe0524616d21325830869a5e7a"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Missing punctuation",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 67,
      "offset": 6,
      "length": 7,
      "code": {
        "startLine": 65,
        "length": 7,
        "offset": 75,
        "surroundingCode": "(for example file names) | kbd:[Ctrl+Space]\n| Smart code completion +\n(for example file names) | kbd:[Ctrl+Shift+Space]\n| Complete the statement +\n(for example macros) | kbd:[Ctrl+Shift+Enter]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "043b0eb7f223eece01a14ce11cc864980ab755ede9e3e83620223c20878fdc71"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Multiple mistakes",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 68,
      "offset": 16,
      "length": 9,
      "code": {
        "startLine": 66,
        "length": 9,
        "offset": 91,
        "surroundingCode": "| Smart code completion +\n(for example file names) | kbd:[Ctrl+Shift+Space]\n| Complete the statement +\n(for example macros) | kbd:[Ctrl+Shift+Enter]\n| Quick documentation lookup | kbd:[Ctrl+Q]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "87a25d8e3b2fb9ba7f4ced5ade9dfab045822b0870827f2a827abddb1a4e2ecd"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Multiple mistakes",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 68,
      "offset": 27,
      "length": 1,
      "code": {
        "startLine": 66,
        "length": 1,
        "offset": 102,
        "surroundingCode": "| Smart code completion +\n(for example file names) | kbd:[Ctrl+Shift+Space]\n| Complete the statement +\n(for example macros) | kbd:[Ctrl+Shift+Enter]\n| Quick documentation lookup | kbd:[Ctrl+Q]\n| Brief Info | kbd:[Ctrl+mouse]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "baselineState": "new"
  },
  "hash": "861e68c1c45dfc382254d304a9dfd9c605d975edf215e6e30a843fee379dd6ba"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Multiple mistakes",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 69,
      "offset": 2,
      "length": 11,
      "code": {
        "startLine": 67,
        "length": 11,
        "offset": 78,
        "surroundingCode": "(for example file names) | kbd:[Ctrl+Shift+Space]\n| Complete the statement +\n(for example macros) | kbd:[Ctrl+Shift+Enter]\n| Quick documentation lookup | kbd:[Ctrl+Q]\n| Brief Info | kbd:[Ctrl+mouse]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "2c95734df2bab411260f3dc44c99a90826febdbfd8ea5be167b9655366416dd7"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "'window' usually goes with an article",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 95,
      "offset": 30,
      "length": 6,
      "code": {
        "startLine": 93,
        "length": 6,
        "offset": 129,
        "surroundingCode": "| Go back to the previous tool window | kbd:[F12]\n| Go to editor (from the tool window) | kbd:[Esc]\n| Hide active or last active window | kbd:[Shift+Esc]\n| Go to line | kbd:[Ctrl+G]\n| Find in current file | kbd:[Ctrl+F]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "b5ec80330ed1996a27daea69acc658b196bf5bdc10275db8d447a05aec03fc48"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "'for example' is a linking/introductory phrase that might require commas around it",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 100,
      "offset": 2,
      "length": 11,
      "code": {
        "startLine": 98,
        "length": 11,
        "offset": 53,
        "surroundingCode": "| Replace in current file | kbd:[Ctrl+R]\n| Rename +\n(for example ID or file name) | kbd:[Shift+F6]\n| Recent files popup | kbd:[Ctrl+E]\n| Navigate back/forward | kbd:[Ctrl+Alt+Left/Right]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "eae274d8484ea06fdf942d806ffd2c06490d8d2b406cf4de5749961500aac301"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "'text' usually goes with an article",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 153,
      "offset": 2,
      "length": 4,
      "code": {
        "startLine": 151,
        "length": 4,
        "offset": 71,
        "surroundingCode": "| Copy current line to clipboard | kbd:[⌘+C]\n| Paste from clipboard +\n(text or images) | kbd:[⌘+V]\n| Move current line up/down | kbd:[⇧+⌘+Up]/kbd:[Down]\n| Duplicate current line  | kbd:[⌘+D]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "6df19b2fdc4d5499dbbd38bd77e7a5629542662ebe1619876cea98f2f09b0697"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "'end' usually goes with an article",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 162,
      "offset": 18,
      "length": 3,
      "code": {
        "startLine": 160,
        "length": 3,
        "offset": 124,
        "surroundingCode": "| Toggle case for word at caret or selected block | kbd:[⌘+⇧+U]\n| Delete to word start | kbd:[⌥+Backspace]\n| Delete to word end | kbd:[⌥+Delete]\n| Close active editor tab | kbd:[⌘+W]\n| Basic code completion +"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "c6cce2201016295936d910517c5df892a97a051d02e938305c8da23aed4a87d4"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Missing punctuation",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 165,
      "offset": 6,
      "length": 7,
      "code": {
        "startLine": 163,
        "length": 7,
        "offset": 69,
        "surroundingCode": "| Close active editor tab | kbd:[⌘+W]\n| Basic code completion +\n(for example file names) | kbd:[^+Space]\n| Smart code completion +\n(for example file names) | kbd:[^+⇧+Space]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "b35277cfb06c9dc2d939e8e06e609871ed490e8f15e7f285b24efc22cb0d512b"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Missing punctuation",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 167,
      "offset": 6,
      "length": 7,
      "code": {
        "startLine": 165,
        "length": 7,
        "offset": 72,
        "surroundingCode": "(for example file names) | kbd:[^+Space]\n| Smart code completion +\n(for example file names) | kbd:[^+⇧+Space]\n| Complete the statement +\n(for example macros) | kbd:[⌘+⇧+Enter]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "030e5c7695eb6965f9cc9e4c89d6e46771a7235c01863ee3009abdca85b22c14"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Multiple mistakes",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 168,
      "offset": 16,
      "length": 9,
      "code": {
        "startLine": 166,
        "length": 9,
        "offset": 84,
        "surroundingCode": "| Smart code completion +\n(for example file names) | kbd:[^+⇧+Space]\n| Complete the statement +\n(for example macros) | kbd:[⌘+⇧+Enter]\n| Quick documentation lookup | kbd:[^+J]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "8dc7ebd44c0deb9741289c8c04a64758694d186739509ef83165f81041d3b0d9"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Multiple mistakes",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 168,
      "offset": 27,
      "length": 1,
      "code": {
        "startLine": 166,
        "length": 1,
        "offset": 95,
        "surroundingCode": "| Smart code completion +\n(for example file names) | kbd:[^+⇧+Space]\n| Complete the statement +\n(for example macros) | kbd:[⌘+⇧+Enter]\n| Quick documentation lookup | kbd:[^+J]\n| Brief Info | kbd:[⌘+mouse]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "baselineState": "new"
  },
  "hash": "3d1c82dba66ca8a48766e4f9da3783472fec953fd48bcf2124ef5a02b8133e91"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Multiple mistakes",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 169,
      "offset": 2,
      "length": 11,
      "code": {
        "startLine": 167,
        "length": 11,
        "offset": 71,
        "surroundingCode": "(for example file names) | kbd:[^+⇧+Space]\n| Complete the statement +\n(for example macros) | kbd:[⌘+⇧+Enter]\n| Quick documentation lookup | kbd:[^+J]\n| Brief Info | kbd:[⌘+mouse]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "396445a798627e7d20838eb690184449b9af6469f3f87a367fff8879a5d78c15"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "'window' usually goes with an article",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 195,
      "offset": 30,
      "length": 6,
      "code": {
        "startLine": 193,
        "length": 6,
        "offset": 129,
        "surroundingCode": "| Go back to the previous tool window | kbd:[F12]\n| Go to editor (from the tool window) | kbd:[Esc]\n| Hide active or last active window | kbd:[⇧+Esc]\n| Go to line | kbd:[⌘+L]\n| Find in current file | kbd:[⌘+F]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "0c24a8ece14520f22c58cf4449b424e43c5bf7e211967e32f2b4e93c9ce85809"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "'for example' is a linking/introductory phrase that might require commas around it",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/keymap.adoc",
      "language": "AsciiDoc",
      "line": 200,
      "offset": 2,
      "length": 11,
      "code": {
        "startLine": 198,
        "length": 11,
        "offset": 50,
        "surroundingCode": "| Replace in current file | kbd:[⌘+R]\n| Rename +\n(for example ID or file name) | kbd:[⇧+F6]\n| Recent files popup | kbd:[⌘+E]\n| Navigate back/forward | kbd:[⌘+⌥+Left/Right]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "4a53e4647237b96e5cff681995e79c567244638514d2d8e04e5d0f51173ad543"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Use 'to' with the base verb form after 'choose'",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/creating-docx.adoc",
      "language": "AsciiDoc",
      "line": 12,
      "offset": 22,
      "length": 6,
      "code": {
        "startLine": 10,
        "length": 6,
        "offset": 27,
        "surroundingCode": "====\n\nThe user can choose _Create DOCX from current file_ from the editor's action toolbar to convert the current file to the DOCX format.\nIf creation of the DOCX file succeeds, the exported file is opened in the system's default application, for example Microsoft Word or LibreOffice.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "baselineState": "new"
  },
  "hash": "b6e9f572500f3c2707a8916003d2b9dece35d1e95da5471c66b1c6ad9adb6ee3"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "'for example' is a linking/introductory phrase that might require commas around it",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/creating-docx.adoc",
      "language": "AsciiDoc",
      "line": 13,
      "offset": 105,
      "length": 11,
      "code": {
        "startLine": 11,
        "length": 11,
        "offset": 238,
        "surroundingCode": "\nThe user can choose _Create DOCX from current file_ from the editor's action toolbar to convert the current file to the DOCX format.\nIf creation of the DOCX file succeeds, the exported file is opened in the system's default application, for example Microsoft Word or LibreOffice.\n\n== Downloading Pandoc"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "baselineState": "new"
  },
  "hash": "5d00eb41b7ccebc909ae0cd84923f6dbc8dd4274458b8c2384dd03142d4fe486"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Subject-verb agreement seems to be violated",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/spring-rest-docs.adoc",
      "language": "AsciiDoc",
      "line": 8,
      "offset": 21,
      "length": 13,
      "code": {
        "startLine": 6,
        "length": 13,
        "offset": 72,
        "surroundingCode": "NOTE: This requires version 0.30.6+ of the plugin.\n\n== What Spring REST Docs provides\n\nhttps://docs.spring.io/spring-restdocs/docs/current/reference/html5/[Spring REST Docs] allow the developer to write API documentation using information recorded in test cases."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "35ec5df8657613971f88f544d235fbe3d3d709431e2035096ae3da647bc147ee"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Subject-verb agreement seems to be violated",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/spring-rest-docs.adoc",
      "language": "AsciiDoc",
      "line": 13,
      "offset": 37,
      "length": 12,
      "code": {
        "startLine": 11,
        "length": 12,
        "offset": 132,
        "surroundingCode": "These ensure that the examples in the documentation work with the current version of the code.\n\nWhen running the tests, Spring REST Docs creates a folder `generated-snippets` with the recorded examples.\nThe developer can reference these snippets in the documentation.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "8b83fa1ce77f943c8a92ff7269d7358394e234fcc97464b52c85ea78097107a0"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Subject-verb agreement seems to be violated",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/spring-rest-docs.adoc",
      "language": "AsciiDoc",
      "line": 54,
      "offset": 22,
      "length": 17,
      "code": {
        "startLine": 52,
        "length": 17,
        "offset": 41,
        "surroundingCode": "== Example project\n\nThe Spring REST Docs projects provides an example project how to set up things: https://github.com/spring-projects/spring-restdocs/tree/master/samples/rest-notes-spring-hateoas\n\nAs the editor support requires the generated snippets-folder to be present, users need to run their tests to create and populate it before the editor support activates."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "445655ceb4b2b7f3a001378cfb20f08c0a83040153e5fbdfd1d966e133ac5abf"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "This word has been used in one of the immediately preceding sentences. Using a synonym could make your text more interesting to read, unless the repetition is intentional.",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/user/upvote-intellij-issues.adoc",
      "language": "AsciiDoc",
      "line": 11,
      "offset": 39,
      "length": 9,
      "code": {
        "startLine": 9,
        "length": 9,
        "offset": 139,
        "surroundingCode": "\nThis lists some issues Alexander (the current maintainer of the plugin) marked as important to him.\nHave a look an up-vote those that are important to you as well to raise the visibility of these issues.\n\nhttps://youtrack.jetbrains.com/issue/CWM-790[CWM-790]::"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "baselineState": "new"
  },
  "hash": "5e85c8846922b72cbbc5da43b399bdbce74af1e5efb8163bc728d3f26fae6ded"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Use plural nouns after 'one of'",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 12,
      "offset": 58,
      "length": 6,
      "code": {
        "startLine": 10,
        "length": 6,
        "offset": 75,
        "surroundingCode": "== Prerequisites\n\nTo use this plugin, you need to have one of the IntelliJ family of IDEs like IntelliJ IDEA, GoLand, WebStorm or PyCharm installed.\nSee below for <<google-android-studio,Android Studio>> and <<intellij-mps,IntelliJ MPS>>.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "e841c2aae1e67e6bec93718645ecd3bea9ba87d09af39395c37eda77199fe535"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Incorrect grammar",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/installation.adoc",
      "language": "AsciiDoc",
      "line": 48,
      "offset": 32,
      "length": 4,
      "code": {
        "startLine": 46,
        "length": 4,
        "offset": 99,
        "surroundingCode": "If you use MPS, go ahead and <<installplugin,install the plugin>>.\n\nSupport will be limited as MPS doesn't have all the APIs the plugin can hook into.\nHave a look at xref:faq/troubleshooting-mps.adoc[].\nPlease open an issue on GitHub if you want to contribute to making MPS support better."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "3ac2d05f0b4e5d88393abcedbdde5dd7d13f97f134d24cf57411cf167f896a30"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Incorrect grammar",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/editor.adoc",
      "language": "AsciiDoc",
      "line": 15,
      "offset": 28,
      "length": 2,
      "code": {
        "startLine": 13,
        "length": 2,
        "offset": 201,
        "surroundingCode": "[#folding-attributes]\nAs an experimental feature, predefined attributes for character replacements like `+++{plus}+++` or `+++{quot}+++` and attributes are foldable as well.\nAttributes need to resolve to a single declared value to be folded.\nFolding is also available for HTML entities (like `\\&amp;`) and unicode characters (like `\\&#x2020;`).\nAs an experimental feature, the user needs to enable it in the settings of the plugin."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "ca6d0f692eb07060533415b85fe43111305c5a197c1de4073c66f65745adb1fe"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Subject-verb agreement seems to be violated",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/editor.adoc",
      "language": "AsciiDoc",
      "line": 26,
      "offset": 15,
      "length": 4,
      "code": {
        "startLine": 24,
        "length": 4,
        "offset": 252,
        "surroundingCode": "The structure of the file kbd:[Alt+7] shows the hierarchy of sections and blocks with titles.\nThis contains (if available) the first block attribute element (like `[source]`, `[quote]` or `[verse]`) and the title of the block or section.\nIf an element like an `image::[]` references another file, it shows the icon and the name of the file.\nIf an `include::[]` references an AsciiDoc file, it includes the file as a subtree in the structure view.\nClicking on either a referenced file or an element of a subtree opens the referenced file."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "800518408f2d236f2f0728bc4cb004ec2e306cc25809c3ad0dd75242ca44a729"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "'text' usually goes with an article",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/editor.adoc",
      "language": "AsciiDoc",
      "line": 62,
      "offset": 127,
      "length": 4,
      "code": {
        "startLine": 60,
        "length": 4,
        "offset": 296,
        "surroundingCode": "// see: AsciiDocReferenceContributor and AsciiDocJavaReferenceContributor for the creation of references\n// see: AsciiDocJavaReference for the resolution of Java classes\nThe user can navigate using kbd:[Ctrl+Click] and kbd:[Ctrl+B] from a file name or Java class name in backticks (as monospaced text like +++`filename.txt`+++ or +++`JavaClassName`+++) or in underscores (as italic text like +++_filename.txt_+++ or +++_JavaClassName_+++) or asterisks (as bold text like +++*filename.txt*+++ or +++*JavaClassName*+++).\nThe plugin tries to rename occurrences of files and Java classes in the AsciiDoc file when the user renames the file or the class.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "cda7e7a4bd5d9b42483251488972a7d5d5e3c2e65ad9c6243558ef90d297019d"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "'text' usually goes with an article",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/editor.adoc",
      "language": "AsciiDoc",
      "line": 62,
      "offset": 213,
      "length": 4,
      "code": {
        "startLine": 60,
        "length": 4,
        "offset": 382,
        "surroundingCode": "// see: AsciiDocReferenceContributor and AsciiDocJavaReferenceContributor for the creation of references\n// see: AsciiDocJavaReference for the resolution of Java classes\nThe user can navigate using kbd:[Ctrl+Click] and kbd:[Ctrl+B] from a file name or Java class name in backticks (as monospaced text like +++`filename.txt`+++ or +++`JavaClassName`+++) or in underscores (as italic text like +++_filename.txt_+++ or +++_JavaClassName_+++) or asterisks (as bold text like +++*filename.txt*+++ or +++*JavaClassName*+++).\nThe plugin tries to rename occurrences of files and Java classes in the AsciiDoc file when the user renames the file or the class.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "e25009e1e86ff2b6a05684dc87cce0ff06539d3dd24693ef2fc0c3466705200a"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Compound adjectives are usually written with a hyphen",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/editor.adoc",
      "language": "AsciiDoc",
      "line": 62,
      "offset": 83,
      "length": 10,
      "code": {
        "startLine": 60,
        "length": 10,
        "offset": 252,
        "surroundingCode": "// see: AsciiDocReferenceContributor and AsciiDocJavaReferenceContributor for the creation of references\n// see: AsciiDocJavaReference for the resolution of Java classes\nThe user can navigate using kbd:[Ctrl+Click] and kbd:[Ctrl+B] from a file name or Java class name in backticks (as monospaced text like +++`filename.txt`+++ or +++`JavaClassName`+++) or in underscores (as italic text like +++_filename.txt_+++ or +++_JavaClassName_+++) or asterisks (as bold text like +++*filename.txt*+++ or +++*JavaClassName*+++).\nThe plugin tries to rename occurrences of files and Java classes in the AsciiDoc file when the user renames the file or the class.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "1e028d15c301ed5e73a6794619a3d2564ef3a94a4df38304161bb0a8f8171558"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Missing article",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/editor.adoc",
      "language": "AsciiDoc",
      "line": 114,
      "offset": 19,
      "length": 11,
      "code": {
        "startLine": 112,
        "length": 11,
        "offset": 45,
        "surroundingCode": "\n// see: ExternalAnnotator\nDuring rendering, Asciidoctor might indicate problems in the file including a line number.\nThe editor shows them as red and yellow annotations.\nHover over the annotations to see the full warning or error message."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "70d5a16fb66996bc64f1e6bce16458bce943e7f49629b896dd23d4d058819df1"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Multiple whitespace",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/editor.adoc",
      "language": "AsciiDoc",
      "line": 182,
      "offset": 98,
      "length": 1,
      "code": {
        "startLine": 180,
        "length": 1,
        "offset": 213,
        "surroundingCode": "This functionality might break if a custom shell has been configured and the executable's folder contains a blank.\n\nRe-configure the custom shell via menu:File[Settings...,Tools,Terminal,Shell path] and add quotes (`\"`) around the path and executable for the shell like this:\n\n----"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "baselineState": "new"
  },
  "hash": "358cec37c54ae49f53c0a7475392e0da897d695609c2daedb0b51cd7ab7f705b"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Multiple whitespace",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/editor.adoc",
      "language": "AsciiDoc",
      "line": 182,
      "offset": 104,
      "length": 1,
      "code": {
        "startLine": 180,
        "length": 1,
        "offset": 219,
        "surroundingCode": "This functionality might break if a custom shell has been configured and the executable's folder contains a blank.\n\nRe-configure the custom shell via menu:File[Settings...,Tools,Terminal,Shell path] and add quotes (`\"`) around the path and executable for the shell like this:\n\n----"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "baselineState": "new"
  },
  "hash": "9503b37d007bd1fdab87ab6ec1a44c80f9a2f4d01d0c4463e41dae9c3a36cc24"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "An adverb possibly confused with an adjective",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/editor.adoc",
      "language": "AsciiDoc",
      "line": 260,
      "offset": 71,
      "length": 9,
      "code": {
        "startLine": 258,
        "length": 9,
        "offset": 175,
        "surroundingCode": ".Available from release 0.31.35:\nThe user can change single-line admonition to a block-style admonition.\nThis is available from the \"`Refactor\"` context menu and as a context-sensitive intention \"`Refactor to block admonition`\" via kbd:[Alt+Enter].\nIt is available when user places the cursor on the start of single-line admonition (like for example `NOTE:`).\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "794436be6d229960c43760e9a30b95fd9e03686cd597e5fa6cb16de0f85109b2"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "An apostrophe may be missing.",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/user/installing-a-preview-release.adoc",
      "language": "AsciiDoc",
      "line": 16,
      "offset": 86,
      "length": 6,
      "code": {
        "startLine": 14,
        "length": 6,
        "offset": 116,
        "surroundingCode": "To try out a preview release:\n\n. Download the new release file `asciidoctor-intellij-plugin-xx.xx.xx.zip` from the _Assets_ section of the release.\n. Go to menu:File[Settings... > Plugins > Gear Icon] (icon:gear[]).\n. Choose menu:Install plugin from disk...[]."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "80e17f573f11d8886425131d7603fe371d1059ddaeea52af224ca9080ea0f9a9"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Incorrect grammar",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/quick-start.adoc",
      "language": "AsciiDoc",
      "line": 21,
      "offset": 38,
      "length": 7,
      "code": {
        "startLine": 19,
        "length": 7,
        "offset": 50,
        "surroundingCode": "[WARNING]\n--\nPlease use the pre-bundled JetBrains OpenJDK Runtime 11 to run your IDE. This provides the best live preview based on JavaFX or JCEF. You can check this in the menu menu:Help[About].\n\nIt should state:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "f8a440520c42ad3a898d5eb7388d1f8d086da4d5c90648b4fb2bd0254cc35849"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "The genitive ('s) may be missing.",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/errno-enoent.adoc",
      "language": "AsciiDoc",
      "line": 20,
      "offset": 1,
      "length": 13,
      "code": {
        "startLine": 18,
        "length": 13,
        "offset": 89,
        "surroundingCode": "\nThis seems to happen mostly on Windows systems as they don't default to UTF-8 charsets.\nLinux systems usually default to UTF-8 and are not affected.\n\n== Cause: Folder names with non-US-ASCII characters"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "f66feb6f290ed650209404d5125d8c411ed174ee50216ed3afb7b2b7d3c00c87"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Missing comma after a subordinate clause?",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/privacy.adoc",
      "language": "AsciiDoc",
      "line": 44,
      "offset": 3,
      "length": 53,
      "code": {
        "startLine": 42,
        "length": 53,
        "offset": 182,
        "surroundingCode": "* When the user accesses the plugin's user's guide on the web, the web hoster will receive the user's router's IP address and browser details and will store it for up to 30 days.\n\n* If an exception occurs in the user's IDE and IntelliJ attributes the exception to the AsciiDoc plugin, the user can choose to send information about the exception to the plugin's Sentry service.\nAll anonymized attachments will be sent unless the user unchecks the checkbox.\nThe user can (and should) review the information before submitting it."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "fab9595e01d7cd0101291f6b0e11773ec076fe90ff327cbdfa13d6d377627847"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "'type' usually goes with an article",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/index.adoc",
      "language": "AsciiDoc",
      "line": 14,
      "offset": 16,
      "length": 4,
      "code": {
        "startLine": 12,
        "length": 4,
        "offset": 102,
        "surroundingCode": "Mention unique-selling-propositions (USP) that differentiate this plugin from others.\n\nAssumed reader type: someone who is new to the plugin, but might have heard about AsciiDoc before.\n////\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "847a3b9735d55e3714d259dd01f6ac372178baf646272be7027c568aeb7dd447"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Unfinished sentence?",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/index.adoc",
      "language": "AsciiDoc",
      "line": 44,
      "offset": 18,
      "length": 8,
      "code": {
        "startLine": 42,
        "length": 8,
        "offset": 43,
        "surroundingCode": "== Where to go from here\n\nTo continue your journey,\n\n* visit the (short) xref:quick-start.adoc[] guide or (in depth) xref:installation.adoc[] guide,"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "6f1935f8f87527202d902e6300a1f3884a2f185c97519a2463932101579c9c52"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "'source' usually goes with an article",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/source-highlighting.adoc",
      "language": "AsciiDoc",
      "line": 15,
      "offset": 57,
      "length": 6,
      "code": {
        "startLine": 13,
        "length": 6,
        "offset": 170,
        "surroundingCode": "\nThe default highlighter for the plugin's preview is the http://coderay.rubychan.de/[CodeRay source highlighter].\nSee <<configure-source-highlighters>> for how to set up source highlighting when rendering documents outside the plugin, and to change the source highlighting package to support other languages or different highlighters.\n\n.Source for a minimal code block in the document with language _C_"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "812e3de9d598c617a314957ea71de354cea5a657926a67adaa36c4fccba181af"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "'To activate...' is a linking/introductory phrase that might require commas around it",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/source-highlighting.adoc",
      "language": "AsciiDoc",
      "line": 45,
      "offset": 1,
      "length": 44,
      "code": {
        "startLine": 43,
        "length": 44,
        "offset": 114,
        "surroundingCode": "\nThe default highlighter for the plugin's preview is the http://coderay.rubychan.de/[CodeRay source highlighter].\nTo activate source highlighting with CodeRay when rendering documents outside the IDE, set the following attribute in the header of the document:\n\n[source,asciidoc]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "f2e5f798597652061c2eda17169d6a43d23ad8cac8559043a4fb698b23e4505f"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Missing article",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/source-highlighting.adoc",
      "language": "AsciiDoc",
      "line": 93,
      "offset": 95,
      "length": 11,
      "code": {
        "startLine": 91,
        "length": 11,
        "offset": 207,
        "surroundingCode": "For this example, the JavaScript bundle must be named _/hljs/highlight.min.js_.\nSee the next item for the theme.\n<.> If the user specifies a _highlightjsdir_, they can override the highlighting theme using _highlightjs-theme_.\nA CSS file matching the selected theme must be placed in the current project.\nIf a user does not specify _highlightjs-theme_, the default is _github_ and the user must place the CSS file for the _github_ theme in the _styles_ folder."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "3acc6f5d8d49af04450da485a17afc5792432ffe146c5832680be6e82861d6f3"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "An apostrophe may be missing.",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/source-highlighting.adoc",
      "language": "AsciiDoc",
      "line": 95,
      "offset": 141,
      "length": 6,
      "code": {
        "startLine": 93,
        "length": 6,
        "offset": 332,
        "surroundingCode": "<.> If the user specifies a _highlightjsdir_, they can override the highlighting theme using _highlightjs-theme_.\nA CSS file matching the selected theme must be placed in the current project.\nIf a user does not specify _highlightjs-theme_, the default is _github_ and the user must place the CSS file for the _github_ theme in the _styles_ folder.\nFor this example, it must be named _/hljs/styles/default.min.css_.\n<.> If the user specifies a _highlightjsdir_, the user can specify additional languages for highlighting using _highlightjs-languages_."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "8691bff1becdca14a3c0da9361a9475085670752337229ecbb035011319b2361"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Missing article",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/source-highlighting.adoc",
      "language": "AsciiDoc",
      "line": 95,
      "offset": 29,
      "length": 11,
      "code": {
        "startLine": 93,
        "length": 11,
        "offset": 220,
        "surroundingCode": "<.> If the user specifies a _highlightjsdir_, they can override the highlighting theme using _highlightjs-theme_.\nA CSS file matching the selected theme must be placed in the current project.\nIf a user does not specify _highlightjs-theme_, the default is _github_ and the user must place the CSS file for the _github_ theme in the _styles_ folder.\nFor this example, it must be named _/hljs/styles/default.min.css_.\n<.> If the user specifies a _highlightjsdir_, the user can specify additional languages for highlighting using _highlightjs-languages_."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "691e769dbec58ff45165da08ff91350f5394b8b4a2b2757d0a9cba3d625f63ae"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "The official name of this software platform is spelled with a capital \"H\".",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/source-highlighting.adoc",
      "language": "AsciiDoc",
      "line": 95,
      "offset": 65,
      "length": 6,
      "code": {
        "startLine": 93,
        "length": 6,
        "offset": 256,
        "surroundingCode": "<.> If the user specifies a _highlightjsdir_, they can override the highlighting theme using _highlightjs-theme_.\nA CSS file matching the selected theme must be placed in the current project.\nIf a user does not specify _highlightjs-theme_, the default is _github_ and the user must place the CSS file for the _github_ theme in the _styles_ folder.\nFor this example, it must be named _/hljs/styles/default.min.css_.\n<.> If the user specifies a _highlightjsdir_, the user can specify additional languages for highlighting using _highlightjs-languages_."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "ea23c93c3988acc3071f866a6895167030b9478aa6783d66f04fa0b926258c4c"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "The official name of this software platform is spelled with a capital \"H\".",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/source-highlighting.adoc",
      "language": "AsciiDoc",
      "line": 95,
      "offset": 119,
      "length": 6,
      "code": {
        "startLine": 93,
        "length": 6,
        "offset": 310,
        "surroundingCode": "<.> If the user specifies a _highlightjsdir_, they can override the highlighting theme using _highlightjs-theme_.\nA CSS file matching the selected theme must be placed in the current project.\nIf a user does not specify _highlightjs-theme_, the default is _github_ and the user must place the CSS file for the _github_ theme in the _styles_ folder.\nFor this example, it must be named _/hljs/styles/default.min.css_.\n<.> If the user specifies a _highlightjsdir_, the user can specify additional languages for highlighting using _highlightjs-languages_."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "bf6746ab6ea181e9679b3b505e989cea5f936d98defb628cfd4c83c8f1f07e1b"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "'either' implies a negative phrase, condition, or question",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/lexing-and-parsing.adoc",
      "language": "AsciiDoc",
      "line": 140,
      "offset": 52,
      "length": 6,
      "code": {
        "startLine": 138,
        "length": 6,
        "offset": 241,
        "surroundingCode": "Currently, several tokens have the same highlighting `ASCIIDOC_MARKER`, so users have the same color for the pointy brackets around references (`\\<<ref>>`)and markers for bold (`\\*bold*`).\n\nOnce you add a new `TextAttributesKey`, you should either:\n\n. reference an existing color (like `ASCIIDOC_COMMENT` references `DefaultLanguageHighlighterColors.LINE_COMMENT`) OR"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "0fdcc0640622d73ff9fa0be2063266703900a1772cd6e0e862335adc9d0cea06"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Use 'to' with the base verb form after 'choose'",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/pdf-non-latin-languages.adoc",
      "language": "AsciiDoc",
      "line": 10,
      "offset": 50,
      "length": 6,
      "code": {
        "startLine": 8,
        "length": 6,
        "offset": 203,
        "surroundingCode": "\nWhen creating a PDF from the IDE, the embedded Asciidoctor PDF needs true type fonts (TTFs) that include the characters included in the AsciiDoc source.\nOnce the setup is complete, the user can choose _Create PDF from current file_ from the editor's action toolbar to convert the file.\n\n== Setup for Chinese fonts"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "b4fa61ebd08fa8f4cc2c4ecdbdef53e60d6c113bda196001077fe70a455bc3ce"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "An apostrophe may be missing.",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/pdf-non-latin-languages.adoc",
      "language": "AsciiDoc",
      "line": 67,
      "offset": 17,
      "length": 5,
      "code": {
        "startLine": 65,
        "length": 5,
        "offset": 53,
        "surroundingCode": "  font_family: kaigen-gothic-cn\n----\n. Populate the _fonts_ folder with _KaiGenGothicCN*.ttf_ files downloaded from _https://github.com/minjiex/kaigen-gothic/tree/master/dist/CN_\n\nOnce the setup is complete, the user can use the _Create PDF from current file_ from the editor's action toolbar to convert the file."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "da0a76a26239e8b18dfeac5fc27e45a9dd465d4b0bb372d6fd9a63485fd14b8e"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "'document' usually goes with an article",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/pdf-non-latin-languages.adoc",
      "language": "AsciiDoc",
      "line": 99,
      "offset": 97,
      "length": 8,
      "code": {
        "startLine": 97,
        "length": 8,
        "offset": 116,
        "surroundingCode": "== Public examples\n\nThere is https://github.com/diguage/jdk-source-analysis[@diguage's \"`JDK source code analysis`\" document] available.\nIt contains AsciiDoc in Chinese plus a working setup for an _.asciidoctorconfig_ file.\nAs fonts, the author has chosen Source Han Serif and converted them to TTF."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "a0f5fbf385053874f9a594bd8f529efca991311d814feff20566bd080ab26190"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "'model' usually goes with an article",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/multimodule.adoc",
      "language": "AsciiDoc",
      "line": 56,
      "offset": 46,
      "length": 5,
      "code": {
        "startLine": 54,
        "length": 5,
        "offset": 116,
        "surroundingCode": ". Select the folder with the other Git repository and press btn:[OK].\n\n. Choose option _Import module from external model_ if the repository contains sources from a build tool you recognize, or _Create module from existing sources_ if not.\n\n. Depending on the external model, complete the following dialogs."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "6666ee38e2d94405e22c35786c4285980aab763201ab6493a2bfeafff4f51bfc"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Incorrect verb form",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/multimodule.adoc",
      "language": "AsciiDoc",
      "line": 56,
      "offset": 95,
      "length": 5,
      "code": {
        "startLine": 54,
        "length": 5,
        "offset": 165,
        "surroundingCode": ". Select the folder with the other Git repository and press btn:[OK].\n\n. Choose option _Import module from external model_ if the repository contains sources from a build tool you recognize, or _Create module from existing sources_ if not.\n\n. Depending on the external model, complete the following dialogs."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "baselineState": "new"
  },
  "hash": "dbdcf518aba8a0537b4fe6dbcbf1e478adcd7fca78e993dc5e30effab1cef106"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Missing article",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/multimodule.adoc",
      "language": "AsciiDoc",
      "line": 56,
      "offset": 132,
      "length": 6,
      "code": {
        "startLine": 54,
        "length": 6,
        "offset": 202,
        "surroundingCode": ". Select the folder with the other Git repository and press btn:[OK].\n\n. Choose option _Import module from external model_ if the repository contains sources from a build tool you recognize, or _Create module from existing sources_ if not.\n\n. Depending on the external model, complete the following dialogs."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "baselineState": "new"
  },
  "hash": "eed02eede8cfb7ac6535db6b96f585abbae79ea809991420d84803ee223fba10"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "The word 'Install' is not a noun.",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/asciidoclet.adoc",
      "language": "AsciiDoc",
      "line": 30,
      "offset": 21,
      "length": 7,
      "code": {
        "startLine": 28,
        "length": 7,
        "offset": 100,
        "surroundingCode": ". Select _Marketplace_ tab if it is not selected yet\n. Search for 'asciidoclet'\n. Click on the btn:[Install] button. +\nAs the Asciidoclet plugin depends on the AsciiDoc plugin, the IDE will ask to install the AsciiDoc plugin as well if it is not already installed.\n. Once the download is complete, restart the IDE"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "8224b0f3030f6150c48fd27eca01b3d490ff0915ef7de221fe64a8f8ff4b37f1"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "'for example' is a linking/introductory phrase that might require commas around it",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "contributors-guide/modules/ROOT/pages/coder/preview.adoc",
      "language": "AsciiDoc",
      "line": 38,
      "offset": 58,
      "length": 11,
      "code": {
        "startLine": 36,
        "length": 11,
        "offset": 272,
        "surroundingCode": "They use JavaScript to scroll the preview to the current position: once the user moves the cursor, the cursor line is transmitted to the preview using `scrollToLine()` and repositions the preview using JavaScript.\n\nWhen the user interacts with the JavaFX or JCEF preview (for example clicks on a text or a link), there is a bridge `JavaPanelBridge` back from JavaScript to Java to trigger actions like scrolling the editor or opening a link in the browser.\n\n== Debugging the preview"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "4a021adcc22075754443df2526b6f39f9dc9a9f634e6d82542c84fbf0c38d013"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Incorrect grammar",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/frontmatter.adoc",
      "language": "AsciiDoc",
      "line": 8,
      "offset": 36,
      "length": 2,
      "code": {
        "startLine": 6,
        "length": 2,
        "offset": 52,
        "surroundingCode": "== How it works\n\nThe plugins highlight the contents in the editor as YAML content.\n\nIt set the attribute `skip-front-matter` by default for the preview, therefore hiding the front matter in the preview."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "de90706f705b0b39a2ace013707b9e7b16a899538f4cd86115987c5d02f7c796"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Use 'a' before a consonant sound",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/asciidoctorconfig-file.adoc",
      "language": "AsciiDoc",
      "line": 2,
      "offset": 97,
      "length": 3,
      "code": {
        "startLine": 1,
        "length": 3,
        "offset": 122,
        "surroundingCode": "= Asciidoctor Config File\n:description: To provide a common set of variables when rendering the preview, the plugin reads an .asciidoctorconfig configuration file.\n\nTo provide a common set of variables when rendering the preview, the plugin reads an _.asciidoctorconfig_ configuration file."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "baselineState": "new"
  },
  "hash": "da6f3529a0945a573772da137e20e34d300a933b0134cd30d2bbd7006fe184b3"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Use 'a' before a consonant sound",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/asciidoctorconfig-file.adoc",
      "language": "AsciiDoc",
      "line": 4,
      "offset": 83,
      "length": 3,
      "code": {
        "startLine": 2,
        "length": 3,
        "offset": 221,
        "surroundingCode": ":description: To provide a common set of variables when rendering the preview, the plugin reads an .asciidoctorconfig configuration file.\n\nTo provide a common set of variables when rendering the preview, the plugin reads an _.asciidoctorconfig_ configuration file.\nUse this to optimize the preview when the project contains a document that is split out to multiple include-files.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "baselineState": "new"
  },
  "hash": "090aba279159b24478399af0b934304a34d4c0b6c106126be0c793a870e773a6"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Incorrect grammar",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/asciidoctorconfig-file.adoc",
      "language": "AsciiDoc",
      "line": 15,
      "offset": 16,
      "length": 18,
      "code": {
        "startLine": 13,
        "length": 18,
        "offset": 28,
        "surroundingCode": "== Solution\n\nA file called _.asciidoctorconfig_ will contain a snippet that will be pre-pended before rendering the AsciiDoc file.\n\nThe IntelliJ IDE provides a variable _asciidoctorconfigdir_ that users can use to set base directory variables."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "4e29b55744291d74ad966ccf20c6ce082c0ba8059939505431cf51f119a667f1"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Incorrect verb form",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/asciidoctorconfig-file.adoc",
      "language": "AsciiDoc",
      "line": 57,
      "offset": 96,
      "length": 5,
      "code": {
        "startLine": 55,
        "length": 5,
        "offset": 158,
        "surroundingCode": "=== Generating a .asciidoctorconfig file during project build\n\nFor Gradle is an _asciidoctorEditorConfig_ task available to create a .asciidoctorconfig via a build task.\nSee https://github.com/asciidoctor/asciidoctor-gradle-plugin/blob/master/docs/src/docs/asciidoc/parts/asciidoctoreditorconfig-plugin.adoc[the docs for the 3.2+ release of the asciidoctor-gradle-plugin] for more details.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "1ec5de5424eeef19323a7957d4ca7f96977442b7a004387ac4109dc6b614589c"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Incorrect word form",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/grammar-checking.adoc",
      "language": "AsciiDoc",
      "line": 17,
      "offset": 96,
      "length": 9,
      "code": {
        "startLine": 15,
        "length": 9,
        "offset": 113,
        "surroundingCode": "== Grazie Plugin\n\nThe https://plugins.jetbrains.com/plugin/12175-grazie[Grazie plugin] is pre-installed for most JetBrains IDEs and offers grammar and spell checking for several languages.\nWhile support for English is included, it will detect other languages and offer the download of additional files.\nOnce it has downloaded these files, spell checking and grammar checking is available for those languages."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "baselineState": "new"
  },
  "hash": "4a9783c70239b8f9d4a689e358968de46a81b73af85e1b8ebbfe864686684c3b"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Missing article",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/creating-pdf.adoc",
      "language": "AsciiDoc",
      "line": 10,
      "offset": 29,
      "length": 3,
      "code": {
        "startLine": 8,
        "length": 3,
        "offset": 45,
        "surroundingCode": "== How it works\n\nThe user can choose _Create PDF from current file_ from the editor's action toolbar to convert the file shown in the current AsciiDoc editor to a PDF using Asciidoctor PDF.\n\nIf creation of the PDF file succeeds, the plugin opens the PDF in the system's PDF viewer."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "baselineState": "new"
  },
  "hash": "2e54599583a2d2f68f1c6762f762f051fb30bf06b049bdf2e51120d667e41d46"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Use 'to' with the base verb form after 'choose'",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/creating-pdf.adoc",
      "language": "AsciiDoc",
      "line": 10,
      "offset": 22,
      "length": 6,
      "code": {
        "startLine": 8,
        "length": 6,
        "offset": 38,
        "surroundingCode": "== How it works\n\nThe user can choose _Create PDF from current file_ from the editor's action toolbar to convert the file shown in the current AsciiDoc editor to a PDF using Asciidoctor PDF.\n\nIf creation of the PDF file succeeds, the plugin opens the PDF in the system's PDF viewer."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "baselineState": "new"
  },
  "hash": "55de235d3d5491210011b968a3cd08c179c272b446717a094f950dc9b0ca926b"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Missing article",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/creating-pdf.adoc",
      "language": "AsciiDoc",
      "line": 20,
      "offset": 40,
      "length": 11,
      "code": {
        "startLine": 18,
        "length": 11,
        "offset": 98,
        "surroundingCode": "\nPlugin version 0.37.24+ uses Asciidoctor PDF version 2.1.\nTo find out about the exact version of Asciidoctor PDF used in the plugin a user has installed, create a minimal PDF and look at the document properties as shown in the PDF viewer. The application property shows the exact version of Asciidoctor PDF used to create the document.\n\nimage::features/advanced/pdf-document-properties.png[]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "baselineState": "new"
  },
  "hash": "57652d3a789513a041a4eeea7e738c1f70c044b843b95df1436f0b4bc0ccbb1b"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Missing article",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/creating-pdf.adoc",
      "language": "AsciiDoc",
      "line": 20,
      "offset": 234,
      "length": 11,
      "code": {
        "startLine": 18,
        "length": 11,
        "offset": 292,
        "surroundingCode": "\nPlugin version 0.37.24+ uses Asciidoctor PDF version 2.1.\nTo find out about the exact version of Asciidoctor PDF used in the plugin a user has installed, create a minimal PDF and look at the document properties as shown in the PDF viewer. The application property shows the exact version of Asciidoctor PDF used to create the document.\n\nimage::features/advanced/pdf-document-properties.png[]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "baselineState": "new"
  },
  "hash": "a1e9d5922d770a39221c3344f34974176c4c02b96ebbbe1e694ab71b6298bd54"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Missing article",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/creating-pdf.adoc",
      "language": "AsciiDoc",
      "line": 24,
      "offset": 45,
      "length": 11,
      "code": {
        "startLine": 22,
        "length": 11,
        "offset": 100,
        "surroundingCode": "image::features/advanced/pdf-document-properties.png[]\n\nA full history of the different versions of Asciidoctor PDF included in each plugin version is available in https://github.com/asciidoctor/asciidoctor-intellij-plugin/blob/main/CHANGELOG.adoc[the changelog of the plugin].\n\n== Downloading Asciidoctor PDF support"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "baselineState": "new"
  },
  "hash": "78b8069de981e68aca7a3ec241b8289965020fefd22d63c4ca4cb2a05bf13476"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "The genitive ('s) may be missing.",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/javafx-initialization-stuck.adoc",
      "language": "AsciiDoc",
      "line": 1,
      "offset": 3,
      "length": 21,
      "code": {
        "startLine": 1,
        "length": 21,
        "offset": 2,
        "surroundingCode": "= JavaFX initialization stuck\n:description: IDE stuck when initializing JavaFX on Linux/GTK3 desktop\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "678d23080649e03b51423222fee117aaae6571bf8365d00d5dc0dbc12fde93f1"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Missing punctuation",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/javafx-initialization-stuck.adoc",
      "language": "AsciiDoc",
      "line": 25,
      "offset": 34,
      "length": 6,
      "code": {
        "startLine": 23,
        "length": 6,
        "offset": 185,
        "surroundingCode": "The JetBrains Runtime based on OpenJDK 8 (aka JBR8) doesn't include jre64/lib/amd64/libglassgtk3.so that is needed to run JavaFX in GTK3 environments.\n\nUpon the first initialization of JavaFX it will become stuck.\nNewer versions of the plugin identify this situation and instead of hanging up the IDE will present a warning message.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "76676b115fe547f535560f524367ee652ebf3ce8ec0840d2fe3f50baccd1d427"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Use plural nouns after '8'",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/javafx-preview.adoc",
      "language": "AsciiDoc",
      "line": 37,
      "offset": 81,
      "length": 7,
      "code": {
        "startLine": 35,
        "length": 7,
        "offset": 157,
        "surroundingCode": "=== Selecting a different JetBrains JDK using the \"`Choose Runtime`\" plugin\n\nThis is recommended for Android Studio 4.0 that includes JetBrains OpenJDK 8 as default without JavaFX support.\n\nNOTE: See xref:features/preview/jcef-preview.adoc[] for more information on Android Studio 4.2 or 2020.3+."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "7113d27d9c0bb7a59dd83f5e939b5c5f7518ac77a54eb41f81bf8566c5811149"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "The singular proper name 'JavaFX' must be used with a third-person or a past tense verb.",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/blurry-preview.adoc",
      "language": "AsciiDoc",
      "line": 19,
      "offset": 8,
      "length": 7,
      "code": {
        "startLine": 17,
        "length": 7,
        "offset": 41,
        "surroundingCode": "\n* Operating System Windows 10, +\nJavaFX preview +\na high-resolution display with a fractional scaling (for example 125% or 175%), +\nIntelliJ running on OpenJDK 8 / JetBrains Runtime 8"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "305307a409445243d5b37bed5c405265e8b52b70c27d7fd8f2d4f4e0da64c251"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Missing punctuation",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/blurry-preview.adoc",
      "language": "AsciiDoc",
      "line": 20,
      "offset": 58,
      "length": 7,
      "code": {
        "startLine": 18,
        "length": 7,
        "offset": 107,
        "surroundingCode": "* Operating System Windows 10, +\nJavaFX preview +\na high-resolution display with a fractional scaling (for example 125% or 175%), +\nIntelliJ running on OpenJDK 8 / JetBrains Runtime 8\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "81163c746f6206770d04a8f9f72c6cc855433bc91e999966394904d66d767b96"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Missing punctuation",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/blurry-preview.adoc",
      "language": "AsciiDoc",
      "line": 25,
      "offset": 31,
      "length": 7,
      "code": {
        "startLine": 23,
        "length": 7,
        "offset": 34,
        "surroundingCode": "or\n\n* Operating System Linux (for example Fedora 31 Wayland), +\nJavaFX preview +\na high-resolution display with scaling-factor 200% or more, +"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "010fb8d9ebe1a6e5fd1e10386f7e90f4941ab6c376fb20b728c003f40a86c837"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "The singular proper name 'JavaFX' must be used with a third-person or a past tense verb.",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/faq/blurry-preview.adoc",
      "language": "AsciiDoc",
      "line": 26,
      "offset": 8,
      "length": 7,
      "code": {
        "startLine": 24,
        "length": 7,
        "offset": 68,
        "surroundingCode": "\n* Operating System Linux (for example Fedora 31 Wayland), +\nJavaFX preview +\na high-resolution display with scaling-factor 200% or more, +\nIntelliJ running on OpenJDK or JetBrains Runtime (any version)"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "c4a686154f200c1eab7cce7a31d7bdf96cdee4778587419752b94fb0ed8afb60"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Use plural nouns after 'lots of'",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/asciidoctor-extensions.adoc",
      "language": "AsciiDoc",
      "line": 40,
      "offset": 44,
      "length": 6,
      "code": {
        "startLine": 38,
        "length": 6,
        "offset": 91,
        "surroundingCode": "====\nExtensions run in the same JVM as the IDE.\nErrors in extensions might consume lots of memory, CPU and might crash the IDE.\nChanging extensions at runtime re-instantiates the Asciidoctor and JRuby runtime, which will lead to memory leaks.\n===="
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "0472f84c144b4142c259fdc333cb0b0c65d7687081f62a02b7d70dab1767c34a"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "'As the preview...' is a participial phrase that might require commas around it",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/preview/jcef-preview.adoc",
      "language": "AsciiDoc",
      "line": 16,
      "offset": 1,
      "length": 23,
      "code": {
        "startLine": 14,
        "length": 23,
        "offset": 125,
        "surroundingCode": "\nThe JCEF preview provides better HTML preview and additional features like scroll-to-view and opening links in the browser.\nAs the preview is based on an up-to-date Google Chrome rendering engine, it offers in-par rendering compared to modern browsers.\nThis includes rendering of fonts and SVGs.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "caaa602c5405219f64ba72a3eee95e0b94acf14626b3b1d8c393cc047b99613c"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "The verb after \"to\" should be in the base form.",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/antora.adoc",
      "language": "AsciiDoc",
      "line": 59,
      "offset": 40,
      "length": 5,
      "code": {
        "startLine": 57,
        "length": 5,
        "offset": 45,
        "surroundingCode": "====\n\nThe plugin validates all references to files within the same component, and also across components.\n\n=== Antora component and module name validation"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "baselineState": "new"
  },
  "hash": "9f5a436f912ddc4de482988ea309f18bce2a5f3c8382e1e58e05bf58c3e98b27"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "This word is normally spelled as one.",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/antora.adoc",
      "language": "AsciiDoc",
      "line": 83,
      "offset": 145,
      "length": 12,
      "code": {
        "startLine": 81,
        "length": 12,
        "offset": 150,
        "surroundingCode": "----\n\nTo learn more about how to bundle multiple Git repositories as one IntelliJ project, see the chapter on xref:features/advanced/multimodule.adoc[multi-module projects] for details.\n\n=== Antora editor support"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "baselineState": "new"
  },
  "hash": "ecda28a47ccb25911130063b3ba734dcd46ade9de3910163e131bb8b7f2e2ba3"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "This word is normally spelled as one.",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/antora.adoc",
      "language": "AsciiDoc",
      "line": 89,
      "offset": 141,
      "length": 12,
      "code": {
        "startLine": 87,
        "length": 12,
        "offset": 287,
        "surroundingCode": "In the editor, the user can autocomplete filenames and references using kbd:[Ctrl+Space] and can navigate to a folder or file using kbd:[Ctrl+B].\n\nTo allow auto-completion for components that reside in different Git repositories, consider using a xref:features/advanced/multimodule.adoc[multi-module project].\n\n=== Antora YAML schema support"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "d0b9caaef175d8d8141e520242585023fa0a845f16f95f0a89fbe20abe7db494"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "If a new sentence starts here, add a space and start with an uppercase letter.",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/antora.adoc",
      "language": "AsciiDoc",
      "line": 109,
      "offset": 87,
      "length": 10,
      "code": {
        "startLine": 107,
        "length": 10,
        "offset": 117,
        "surroundingCode": "=== Antora attributes support\n\nThe plugin reads all attributes defined in the module's `antora.yml` file's _asciidoc.attributes_ section and uses this for the preview and auto-completion.\n\nStarting with release 0.35.2 of the plugin, it also picks up attributes from an Antora playbook if this is within the same project."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "06af68bfb8c10c846d2addbaed8c119e1e3e455b6792cf475840e1148dbed212"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "This word is normally spelled as one.",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/antora.adoc",
      "language": "AsciiDoc",
      "line": 112,
      "offset": 127,
      "length": 12,
      "code": {
        "startLine": 110,
        "length": 12,
        "offset": 259,
        "surroundingCode": "\nStarting with release 0.35.2 of the plugin, it also picks up attributes from an Antora playbook if this is within the same project.\nIf the playbook and the components are in different Git repositories, this requires a xref:features/advanced/multimodule.adoc[multi-module project].\n\nThe plugin sets multiple attributes to allow referencing files with the current Antora module:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "9ca4ed2795af7571efad7477c8b4ab326b3d65a5de5d55162a543712b29764de"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Subject-verb agreement seems to be violated",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/livetemplates.adoc",
      "language": "AsciiDoc",
      "line": 18,
      "offset": 21,
      "length": 11,
      "code": {
        "startLine": 16,
        "length": 11,
        "offset": 58,
        "surroundingCode": "== Special template _ad-tag-include_\n\n=== How the snippet tag include template works\n\nAll live templates of this plugin except one will only be available when editing AsciiDoc content. +"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "c37b26116d7387046ff14c750888dbb9ce7444069a4a43581c76679f4c59c7cb"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Subject-verb agreement seems to be violated",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/livetemplates.adoc",
      "language": "AsciiDoc",
      "line": 62,
      "offset": 19,
      "length": 7,
      "code": {
        "startLine": 60,
        "length": 7,
        "offset": 24,
        "surroundingCode": "====\n\n=== Using the tag include live template\n\nThis live template works in two ways:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "0307985477184739dc8bb40f04746f46eca48b6e4716e52b4c01ce15649e3d54"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Subject-verb agreement seems to be violated",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/livetemplates.adoc",
      "language": "AsciiDoc",
      "line": 79,
      "offset": 23,
      "length": 7,
      "code": {
        "startLine": 77,
        "length": 7,
        "offset": 81,
        "surroundingCode": "Then the user types the tag name and presses kbd:[Enter].\n\n=== Disabling the tag include live template\n\nIf a user doesn't want to see the _ad-tag-include_ live template when typing content in any other language, there are two options to disable it:"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "a0b31b9fa1b58865609fe97967a9da8ecf6d42ab4f275240be568bd064375a5e"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "'to' requires a base verb form",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/conditional-rendering.adoc",
      "language": "AsciiDoc",
      "line": 15,
      "offset": 45,
      "length": 7,
      "code": {
        "startLine": 13,
        "length": 7,
        "offset": 183,
        "surroundingCode": "IntelliJ sets the variables _env-idea_ and _env_ so that the user can render the texts differently when working with the Asciidoc plugin.\n\nThe plugin sets the variable _env-idea_ to _defined_, therefore the following works:\n\n[source,asciidoc]"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "isTechDebt": "true",
    "baselineState": "unchanged"
  },
  "hash": "dc16af2d5febfa237a88daa10008814d8bd61ad6cce0ddd700b365800dfb5cf0"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Grammar",
  "severity": "High",
  "comment": "Use 'to' with the base verb form after 'choose'",
  "detailsInfo": "Reports grammar mistakes in your text. You can configure the inspection in [Settings \\| Editor \\| Natural Languages \\| Grammar](settings://reference.settingsdialog.project.grazie).",
  "sources": [
    {
      "type": "file",
      "path": "users-guide/modules/ROOT/pages/features/advanced/creating-html.adoc",
      "language": "AsciiDoc",
      "line": 7,
      "offset": 22,
      "length": 6,
      "code": {
        "startLine": 5,
        "length": 6,
        "offset": 36,
        "surroundingCode": "{description}\n\nThe user can choose _Create HTML from current file_ from the editor's action toolbar to convert the file to the HTML format.\nIf creation of the HTML file succeeds, the exported file is opened in the system's default browser.\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GrazieInspection",
    "baselineState": "new"
  },
  "hash": "e4dfab15e335d8f840765f7d4c1f060ca5b77b71ca0cac4c64083cf3095d120c"
}]}